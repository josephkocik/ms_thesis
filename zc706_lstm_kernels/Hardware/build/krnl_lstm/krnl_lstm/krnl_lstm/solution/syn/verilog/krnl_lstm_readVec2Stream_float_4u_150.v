// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_lstm_readVec2Stream_float_4u_150 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        str_in12_din,
        str_in12_full_n,
        str_in12_write,
        p_in_offset_dout,
        p_in_offset_empty_n,
        p_in_offset_read
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [127:0] str_in12_din;
input   str_in12_full_n;
output   str_in12_write;
input  [5:0] p_in_offset_dout;
input   p_in_offset_empty_n;
output   p_in_offset_read;

reg ap_done;
reg ap_idle;
reg start_write;
reg[127:0] str_in12_din;
reg str_in12_write;
reg p_in_offset_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [5:0] W_ho_0_address0;
reg    W_ho_0_ce0;
wire   [31:0] W_ho_0_q0;
wire   [5:0] W_ho_1_address0;
reg    W_ho_1_ce0;
wire   [31:0] W_ho_1_q0;
wire   [5:0] W_ho_2_address0;
reg    W_ho_2_ce0;
wire   [31:0] W_ho_2_q0;
wire   [5:0] W_ho_3_address0;
reg    W_ho_3_ce0;
wire   [31:0] W_ho_3_q0;
wire   [5:0] W_ho_4_address0;
reg    W_ho_4_ce0;
wire   [31:0] W_ho_4_q0;
wire   [5:0] W_ho_5_address0;
reg    W_ho_5_ce0;
wire   [31:0] W_ho_5_q0;
wire   [5:0] W_ho_6_address0;
reg    W_ho_6_ce0;
wire   [31:0] W_ho_6_q0;
wire   [5:0] W_ho_7_address0;
reg    W_ho_7_ce0;
wire   [31:0] W_ho_7_q0;
wire   [5:0] W_ho_8_address0;
reg    W_ho_8_ce0;
wire   [31:0] W_ho_8_q0;
wire   [5:0] W_ho_9_address0;
reg    W_ho_9_ce0;
wire   [31:0] W_ho_9_q0;
wire   [5:0] W_ho_10_address0;
reg    W_ho_10_ce0;
wire   [31:0] W_ho_10_q0;
wire   [5:0] W_ho_11_address0;
reg    W_ho_11_ce0;
wire   [31:0] W_ho_11_q0;
wire   [5:0] W_ho_12_address0;
reg    W_ho_12_ce0;
wire   [31:0] W_ho_12_q0;
wire   [5:0] W_ho_13_address0;
reg    W_ho_13_ce0;
wire   [31:0] W_ho_13_q0;
wire   [5:0] W_ho_14_address0;
reg    W_ho_14_ce0;
wire   [31:0] W_ho_14_q0;
wire   [5:0] W_ho_15_address0;
reg    W_ho_15_ce0;
wire   [31:0] W_ho_15_q0;
wire   [5:0] W_ho_16_address0;
reg    W_ho_16_ce0;
wire   [31:0] W_ho_16_q0;
wire   [5:0] W_ho_17_address0;
reg    W_ho_17_ce0;
wire   [31:0] W_ho_17_q0;
wire   [5:0] W_ho_18_address0;
reg    W_ho_18_ce0;
wire   [31:0] W_ho_18_q0;
wire   [5:0] W_ho_19_address0;
reg    W_ho_19_ce0;
wire   [31:0] W_ho_19_q0;
wire   [5:0] W_ho_20_address0;
reg    W_ho_20_ce0;
wire   [31:0] W_ho_20_q0;
wire   [5:0] W_ho_21_address0;
reg    W_ho_21_ce0;
wire   [31:0] W_ho_21_q0;
wire   [5:0] W_ho_22_address0;
reg    W_ho_22_ce0;
wire   [31:0] W_ho_22_q0;
wire   [5:0] W_ho_23_address0;
reg    W_ho_23_ce0;
wire   [31:0] W_ho_23_q0;
wire   [5:0] W_ho_24_address0;
reg    W_ho_24_ce0;
wire   [31:0] W_ho_24_q0;
wire   [5:0] W_ho_25_address0;
reg    W_ho_25_ce0;
wire   [31:0] W_ho_25_q0;
wire   [5:0] W_ho_26_address0;
reg    W_ho_26_ce0;
wire   [31:0] W_ho_26_q0;
wire   [5:0] W_ho_27_address0;
reg    W_ho_27_ce0;
wire   [31:0] W_ho_27_q0;
wire   [5:0] W_ho_28_address0;
reg    W_ho_28_ce0;
wire   [31:0] W_ho_28_q0;
wire   [5:0] W_ho_29_address0;
reg    W_ho_29_ce0;
wire   [31:0] W_ho_29_q0;
wire   [5:0] W_ho_30_address0;
reg    W_ho_30_ce0;
wire   [31:0] W_ho_30_q0;
wire   [5:0] W_ho_31_address0;
reg    W_ho_31_ce0;
wire   [31:0] W_ho_31_q0;
wire   [5:0] W_ho_32_address0;
reg    W_ho_32_ce0;
wire   [31:0] W_ho_32_q0;
wire   [5:0] W_ho_33_address0;
reg    W_ho_33_ce0;
wire   [31:0] W_ho_33_q0;
wire   [5:0] W_ho_34_address0;
reg    W_ho_34_ce0;
wire   [31:0] W_ho_34_q0;
wire   [5:0] W_ho_35_address0;
reg    W_ho_35_ce0;
wire   [31:0] W_ho_35_q0;
wire   [5:0] W_ho_36_address0;
reg    W_ho_36_ce0;
wire   [31:0] W_ho_36_q0;
wire   [5:0] W_ho_37_address0;
reg    W_ho_37_ce0;
wire   [31:0] W_ho_37_q0;
wire   [5:0] W_ho_38_address0;
reg    W_ho_38_ce0;
wire   [31:0] W_ho_38_q0;
wire   [5:0] W_ho_39_address0;
reg    W_ho_39_ce0;
wire   [31:0] W_ho_39_q0;
wire   [5:0] W_ho_40_address0;
reg    W_ho_40_ce0;
wire   [31:0] W_ho_40_q0;
wire   [5:0] W_ho_41_address0;
reg    W_ho_41_ce0;
wire   [31:0] W_ho_41_q0;
wire   [5:0] W_ho_42_address0;
reg    W_ho_42_ce0;
wire   [31:0] W_ho_42_q0;
wire   [5:0] W_ho_43_address0;
reg    W_ho_43_ce0;
wire   [31:0] W_ho_43_q0;
wire   [5:0] W_ho_44_address0;
reg    W_ho_44_ce0;
wire   [31:0] W_ho_44_q0;
wire   [5:0] W_ho_45_address0;
reg    W_ho_45_ce0;
wire   [31:0] W_ho_45_q0;
wire   [5:0] W_ho_46_address0;
reg    W_ho_46_ce0;
wire   [31:0] W_ho_46_q0;
wire   [5:0] W_ho_47_address0;
reg    W_ho_47_ce0;
wire   [31:0] W_ho_47_q0;
wire   [5:0] W_ho_48_address0;
reg    W_ho_48_ce0;
wire   [31:0] W_ho_48_q0;
wire   [5:0] W_ho_49_address0;
reg    W_ho_49_ce0;
wire   [31:0] W_ho_49_q0;
wire   [5:0] W_ho_50_address0;
reg    W_ho_50_ce0;
wire   [31:0] W_ho_50_q0;
wire   [5:0] W_ho_51_address0;
reg    W_ho_51_ce0;
wire   [31:0] W_ho_51_q0;
wire   [5:0] W_ho_52_address0;
reg    W_ho_52_ce0;
wire   [31:0] W_ho_52_q0;
wire   [5:0] W_ho_53_address0;
reg    W_ho_53_ce0;
wire   [31:0] W_ho_53_q0;
wire   [5:0] W_ho_54_address0;
reg    W_ho_54_ce0;
wire   [31:0] W_ho_54_q0;
wire   [5:0] W_ho_55_address0;
reg    W_ho_55_ce0;
wire   [31:0] W_ho_55_q0;
wire   [5:0] W_ho_56_address0;
reg    W_ho_56_ce0;
wire   [31:0] W_ho_56_q0;
wire   [5:0] W_ho_57_address0;
reg    W_ho_57_ce0;
wire   [31:0] W_ho_57_q0;
wire   [5:0] W_ho_58_address0;
reg    W_ho_58_ce0;
wire   [31:0] W_ho_58_q0;
wire   [5:0] W_ho_59_address0;
reg    W_ho_59_ce0;
wire   [31:0] W_ho_59_q0;
wire   [5:0] W_ho_60_address0;
reg    W_ho_60_ce0;
wire   [31:0] W_ho_60_q0;
wire   [5:0] W_ho_61_address0;
reg    W_ho_61_ce0;
wire   [31:0] W_ho_61_q0;
wire   [5:0] W_ho_62_address0;
reg    W_ho_62_ce0;
wire   [31:0] W_ho_62_q0;
wire   [5:0] W_ho_63_address0;
reg    W_ho_63_ce0;
wire   [31:0] W_ho_63_q0;
reg    str_in12_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
reg    p_in_offset_blk_n;
wire   [31:0] p_in_offset_cast_i_fu_1001_p1;
reg   [31:0] p_in_offset_cast_i_reg_1473;
reg    ap_block_state1;
wire   [127:0] p_Result_3_i_fu_1025_p5;
wire   [127:0] p_Result_3_1_i_fu_1054_p5;
wire   [127:0] p_Result_3_2_i_fu_1083_p5;
wire   [127:0] p_Result_3_3_i_fu_1112_p5;
wire   [127:0] p_Result_3_4_i_fu_1141_p5;
wire   [127:0] p_Result_3_5_i_fu_1170_p5;
wire   [127:0] p_Result_3_6_i_fu_1199_p5;
wire   [127:0] p_Result_3_7_i_fu_1228_p5;
wire   [127:0] p_Result_3_8_i_fu_1257_p5;
wire   [127:0] p_Result_3_9_i_fu_1286_p5;
wire   [127:0] p_Result_3_10_i_fu_1315_p5;
wire   [127:0] p_Result_3_11_i_fu_1344_p5;
wire   [127:0] p_Result_3_12_i_fu_1373_p5;
wire   [127:0] p_Result_3_13_i_fu_1402_p5;
wire   [127:0] p_Result_3_14_i_fu_1431_p5;
wire   [127:0] p_Result_3_i_46_fu_1460_p5;
wire   [31:0] bitcast_ln123_318_fu_1021_p1;
wire   [31:0] bitcast_ln123_317_fu_1017_p1;
wire   [31:0] bitcast_ln123_316_fu_1013_p1;
wire   [31:0] bitcast_ln123_fu_1009_p1;
wire   [31:0] bitcast_ln123_322_fu_1050_p1;
wire   [31:0] bitcast_ln123_321_fu_1046_p1;
wire   [31:0] bitcast_ln123_320_fu_1042_p1;
wire   [31:0] bitcast_ln123_319_fu_1038_p1;
wire   [31:0] bitcast_ln123_326_fu_1079_p1;
wire   [31:0] bitcast_ln123_325_fu_1075_p1;
wire   [31:0] bitcast_ln123_324_fu_1071_p1;
wire   [31:0] bitcast_ln123_323_fu_1067_p1;
wire   [31:0] bitcast_ln123_330_fu_1108_p1;
wire   [31:0] bitcast_ln123_329_fu_1104_p1;
wire   [31:0] bitcast_ln123_328_fu_1100_p1;
wire   [31:0] bitcast_ln123_327_fu_1096_p1;
wire   [31:0] bitcast_ln123_334_fu_1137_p1;
wire   [31:0] bitcast_ln123_333_fu_1133_p1;
wire   [31:0] bitcast_ln123_332_fu_1129_p1;
wire   [31:0] bitcast_ln123_331_fu_1125_p1;
wire   [31:0] bitcast_ln123_338_fu_1166_p1;
wire   [31:0] bitcast_ln123_337_fu_1162_p1;
wire   [31:0] bitcast_ln123_336_fu_1158_p1;
wire   [31:0] bitcast_ln123_335_fu_1154_p1;
wire   [31:0] bitcast_ln123_342_fu_1195_p1;
wire   [31:0] bitcast_ln123_341_fu_1191_p1;
wire   [31:0] bitcast_ln123_340_fu_1187_p1;
wire   [31:0] bitcast_ln123_339_fu_1183_p1;
wire   [31:0] bitcast_ln123_346_fu_1224_p1;
wire   [31:0] bitcast_ln123_345_fu_1220_p1;
wire   [31:0] bitcast_ln123_344_fu_1216_p1;
wire   [31:0] bitcast_ln123_343_fu_1212_p1;
wire   [31:0] bitcast_ln123_350_fu_1253_p1;
wire   [31:0] bitcast_ln123_349_fu_1249_p1;
wire   [31:0] bitcast_ln123_348_fu_1245_p1;
wire   [31:0] bitcast_ln123_347_fu_1241_p1;
wire   [31:0] bitcast_ln123_354_fu_1282_p1;
wire   [31:0] bitcast_ln123_353_fu_1278_p1;
wire   [31:0] bitcast_ln123_352_fu_1274_p1;
wire   [31:0] bitcast_ln123_351_fu_1270_p1;
wire   [31:0] bitcast_ln123_358_fu_1311_p1;
wire   [31:0] bitcast_ln123_357_fu_1307_p1;
wire   [31:0] bitcast_ln123_356_fu_1303_p1;
wire   [31:0] bitcast_ln123_355_fu_1299_p1;
wire   [31:0] bitcast_ln123_362_fu_1340_p1;
wire   [31:0] bitcast_ln123_361_fu_1336_p1;
wire   [31:0] bitcast_ln123_360_fu_1332_p1;
wire   [31:0] bitcast_ln123_359_fu_1328_p1;
wire   [31:0] bitcast_ln123_366_fu_1369_p1;
wire   [31:0] bitcast_ln123_365_fu_1365_p1;
wire   [31:0] bitcast_ln123_364_fu_1361_p1;
wire   [31:0] bitcast_ln123_363_fu_1357_p1;
wire   [31:0] bitcast_ln123_370_fu_1398_p1;
wire   [31:0] bitcast_ln123_369_fu_1394_p1;
wire   [31:0] bitcast_ln123_368_fu_1390_p1;
wire   [31:0] bitcast_ln123_367_fu_1386_p1;
wire   [31:0] bitcast_ln123_374_fu_1427_p1;
wire   [31:0] bitcast_ln123_373_fu_1423_p1;
wire   [31:0] bitcast_ln123_372_fu_1419_p1;
wire   [31:0] bitcast_ln123_371_fu_1415_p1;
wire   [31:0] bitcast_ln123_378_fu_1456_p1;
wire   [31:0] bitcast_ln123_377_fu_1452_p1;
wire   [31:0] bitcast_ln123_376_fu_1448_p1;
wire   [31:0] bitcast_ln123_375_fu_1444_p1;
reg   [16:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 17'd1;
end

krnl_lstm_readVec2Stream_float_4u_150_W_ho_0 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_0_address0),
    .ce0(W_ho_0_ce0),
    .q0(W_ho_0_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_1 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_1_address0),
    .ce0(W_ho_1_ce0),
    .q0(W_ho_1_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_2 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_2_address0),
    .ce0(W_ho_2_ce0),
    .q0(W_ho_2_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_3 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_3_address0),
    .ce0(W_ho_3_ce0),
    .q0(W_ho_3_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_4 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_4_address0),
    .ce0(W_ho_4_ce0),
    .q0(W_ho_4_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_5 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_5_address0),
    .ce0(W_ho_5_ce0),
    .q0(W_ho_5_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_6 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_6_address0),
    .ce0(W_ho_6_ce0),
    .q0(W_ho_6_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_7 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_7_address0),
    .ce0(W_ho_7_ce0),
    .q0(W_ho_7_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_8 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_8_address0),
    .ce0(W_ho_8_ce0),
    .q0(W_ho_8_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_9 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_9_address0),
    .ce0(W_ho_9_ce0),
    .q0(W_ho_9_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_10 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_10_address0),
    .ce0(W_ho_10_ce0),
    .q0(W_ho_10_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_11 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_11_address0),
    .ce0(W_ho_11_ce0),
    .q0(W_ho_11_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_12 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_12_address0),
    .ce0(W_ho_12_ce0),
    .q0(W_ho_12_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_13 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_13_address0),
    .ce0(W_ho_13_ce0),
    .q0(W_ho_13_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_14 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_14_address0),
    .ce0(W_ho_14_ce0),
    .q0(W_ho_14_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_15 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_15_address0),
    .ce0(W_ho_15_ce0),
    .q0(W_ho_15_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_16 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_16_address0),
    .ce0(W_ho_16_ce0),
    .q0(W_ho_16_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_17 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_17_address0),
    .ce0(W_ho_17_ce0),
    .q0(W_ho_17_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_18 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_18_address0),
    .ce0(W_ho_18_ce0),
    .q0(W_ho_18_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_19 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_19_address0),
    .ce0(W_ho_19_ce0),
    .q0(W_ho_19_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_20 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_20_address0),
    .ce0(W_ho_20_ce0),
    .q0(W_ho_20_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_21 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_21_address0),
    .ce0(W_ho_21_ce0),
    .q0(W_ho_21_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_22 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_22_address0),
    .ce0(W_ho_22_ce0),
    .q0(W_ho_22_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_23 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_23_address0),
    .ce0(W_ho_23_ce0),
    .q0(W_ho_23_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_24 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_24_address0),
    .ce0(W_ho_24_ce0),
    .q0(W_ho_24_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_25 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_25_address0),
    .ce0(W_ho_25_ce0),
    .q0(W_ho_25_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_26 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_26_address0),
    .ce0(W_ho_26_ce0),
    .q0(W_ho_26_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_27 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_27_address0),
    .ce0(W_ho_27_ce0),
    .q0(W_ho_27_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_28 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_28_address0),
    .ce0(W_ho_28_ce0),
    .q0(W_ho_28_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_29 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_29_address0),
    .ce0(W_ho_29_ce0),
    .q0(W_ho_29_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_30 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_30_address0),
    .ce0(W_ho_30_ce0),
    .q0(W_ho_30_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_31 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_31_address0),
    .ce0(W_ho_31_ce0),
    .q0(W_ho_31_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_32 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_32_address0),
    .ce0(W_ho_32_ce0),
    .q0(W_ho_32_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_33 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_33_address0),
    .ce0(W_ho_33_ce0),
    .q0(W_ho_33_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_34 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_34_address0),
    .ce0(W_ho_34_ce0),
    .q0(W_ho_34_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_35 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_35_address0),
    .ce0(W_ho_35_ce0),
    .q0(W_ho_35_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_36 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_36_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_36_address0),
    .ce0(W_ho_36_ce0),
    .q0(W_ho_36_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_37 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_37_address0),
    .ce0(W_ho_37_ce0),
    .q0(W_ho_37_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_38 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_38_address0),
    .ce0(W_ho_38_ce0),
    .q0(W_ho_38_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_39 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_39_address0),
    .ce0(W_ho_39_ce0),
    .q0(W_ho_39_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_40 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_40_address0),
    .ce0(W_ho_40_ce0),
    .q0(W_ho_40_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_41 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_41_address0),
    .ce0(W_ho_41_ce0),
    .q0(W_ho_41_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_42 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_42_address0),
    .ce0(W_ho_42_ce0),
    .q0(W_ho_42_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_43 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_43_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_43_address0),
    .ce0(W_ho_43_ce0),
    .q0(W_ho_43_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_44 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_44_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_44_address0),
    .ce0(W_ho_44_ce0),
    .q0(W_ho_44_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_45 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_45_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_45_address0),
    .ce0(W_ho_45_ce0),
    .q0(W_ho_45_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_46 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_46_address0),
    .ce0(W_ho_46_ce0),
    .q0(W_ho_46_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_47 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_47_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_47_address0),
    .ce0(W_ho_47_ce0),
    .q0(W_ho_47_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_48 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_48_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_48_address0),
    .ce0(W_ho_48_ce0),
    .q0(W_ho_48_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_49 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_49_address0),
    .ce0(W_ho_49_ce0),
    .q0(W_ho_49_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_50 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_50_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_50_address0),
    .ce0(W_ho_50_ce0),
    .q0(W_ho_50_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_51 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_51_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_51_address0),
    .ce0(W_ho_51_ce0),
    .q0(W_ho_51_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_52 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_52_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_52_address0),
    .ce0(W_ho_52_ce0),
    .q0(W_ho_52_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_53 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_53_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_53_address0),
    .ce0(W_ho_53_ce0),
    .q0(W_ho_53_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_54 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_54_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_54_address0),
    .ce0(W_ho_54_ce0),
    .q0(W_ho_54_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_55 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_55_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_55_address0),
    .ce0(W_ho_55_ce0),
    .q0(W_ho_55_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_56 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_56_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_56_address0),
    .ce0(W_ho_56_ce0),
    .q0(W_ho_56_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_57 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_57_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_57_address0),
    .ce0(W_ho_57_ce0),
    .q0(W_ho_57_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_58 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_58_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_58_address0),
    .ce0(W_ho_58_ce0),
    .q0(W_ho_58_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_59 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_59_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_59_address0),
    .ce0(W_ho_59_ce0),
    .q0(W_ho_59_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_60 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_60_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_60_address0),
    .ce0(W_ho_60_ce0),
    .q0(W_ho_60_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_61 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_61_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_61_address0),
    .ce0(W_ho_61_ce0),
    .q0(W_ho_61_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_62 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_62_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_62_address0),
    .ce0(W_ho_62_ce0),
    .q0(W_ho_62_q0)
);

krnl_lstm_readVec2Stream_float_4u_150_W_ho_63 #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_ho_63_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_ho_63_address0),
    .ce0(W_ho_63_ce0),
    .q0(W_ho_63_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_in_offset_cast_i_reg_1473[5 : 0] <= p_in_offset_cast_i_fu_1001_p1[5 : 0];
    end
end

always @ (*) begin
    if ((~((p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_ho_0_ce0 = 1'b1;
    end else begin
        W_ho_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        W_ho_10_ce0 = 1'b1;
    end else begin
        W_ho_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        W_ho_11_ce0 = 1'b1;
    end else begin
        W_ho_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        W_ho_12_ce0 = 1'b1;
    end else begin
        W_ho_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        W_ho_13_ce0 = 1'b1;
    end else begin
        W_ho_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        W_ho_14_ce0 = 1'b1;
    end else begin
        W_ho_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        W_ho_15_ce0 = 1'b1;
    end else begin
        W_ho_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        W_ho_16_ce0 = 1'b1;
    end else begin
        W_ho_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        W_ho_17_ce0 = 1'b1;
    end else begin
        W_ho_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        W_ho_18_ce0 = 1'b1;
    end else begin
        W_ho_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        W_ho_19_ce0 = 1'b1;
    end else begin
        W_ho_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_ho_1_ce0 = 1'b1;
    end else begin
        W_ho_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        W_ho_20_ce0 = 1'b1;
    end else begin
        W_ho_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        W_ho_21_ce0 = 1'b1;
    end else begin
        W_ho_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        W_ho_22_ce0 = 1'b1;
    end else begin
        W_ho_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        W_ho_23_ce0 = 1'b1;
    end else begin
        W_ho_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        W_ho_24_ce0 = 1'b1;
    end else begin
        W_ho_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        W_ho_25_ce0 = 1'b1;
    end else begin
        W_ho_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        W_ho_26_ce0 = 1'b1;
    end else begin
        W_ho_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        W_ho_27_ce0 = 1'b1;
    end else begin
        W_ho_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        W_ho_28_ce0 = 1'b1;
    end else begin
        W_ho_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        W_ho_29_ce0 = 1'b1;
    end else begin
        W_ho_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_ho_2_ce0 = 1'b1;
    end else begin
        W_ho_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        W_ho_30_ce0 = 1'b1;
    end else begin
        W_ho_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        W_ho_31_ce0 = 1'b1;
    end else begin
        W_ho_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        W_ho_32_ce0 = 1'b1;
    end else begin
        W_ho_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        W_ho_33_ce0 = 1'b1;
    end else begin
        W_ho_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        W_ho_34_ce0 = 1'b1;
    end else begin
        W_ho_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        W_ho_35_ce0 = 1'b1;
    end else begin
        W_ho_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        W_ho_36_ce0 = 1'b1;
    end else begin
        W_ho_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        W_ho_37_ce0 = 1'b1;
    end else begin
        W_ho_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        W_ho_38_ce0 = 1'b1;
    end else begin
        W_ho_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        W_ho_39_ce0 = 1'b1;
    end else begin
        W_ho_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_ho_3_ce0 = 1'b1;
    end else begin
        W_ho_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        W_ho_40_ce0 = 1'b1;
    end else begin
        W_ho_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        W_ho_41_ce0 = 1'b1;
    end else begin
        W_ho_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        W_ho_42_ce0 = 1'b1;
    end else begin
        W_ho_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        W_ho_43_ce0 = 1'b1;
    end else begin
        W_ho_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        W_ho_44_ce0 = 1'b1;
    end else begin
        W_ho_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        W_ho_45_ce0 = 1'b1;
    end else begin
        W_ho_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        W_ho_46_ce0 = 1'b1;
    end else begin
        W_ho_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        W_ho_47_ce0 = 1'b1;
    end else begin
        W_ho_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        W_ho_48_ce0 = 1'b1;
    end else begin
        W_ho_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        W_ho_49_ce0 = 1'b1;
    end else begin
        W_ho_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        W_ho_4_ce0 = 1'b1;
    end else begin
        W_ho_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        W_ho_50_ce0 = 1'b1;
    end else begin
        W_ho_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        W_ho_51_ce0 = 1'b1;
    end else begin
        W_ho_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        W_ho_52_ce0 = 1'b1;
    end else begin
        W_ho_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        W_ho_53_ce0 = 1'b1;
    end else begin
        W_ho_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        W_ho_54_ce0 = 1'b1;
    end else begin
        W_ho_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        W_ho_55_ce0 = 1'b1;
    end else begin
        W_ho_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        W_ho_56_ce0 = 1'b1;
    end else begin
        W_ho_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        W_ho_57_ce0 = 1'b1;
    end else begin
        W_ho_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        W_ho_58_ce0 = 1'b1;
    end else begin
        W_ho_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        W_ho_59_ce0 = 1'b1;
    end else begin
        W_ho_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        W_ho_5_ce0 = 1'b1;
    end else begin
        W_ho_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        W_ho_60_ce0 = 1'b1;
    end else begin
        W_ho_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        W_ho_61_ce0 = 1'b1;
    end else begin
        W_ho_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        W_ho_62_ce0 = 1'b1;
    end else begin
        W_ho_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        W_ho_63_ce0 = 1'b1;
    end else begin
        W_ho_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        W_ho_6_ce0 = 1'b1;
    end else begin
        W_ho_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        W_ho_7_ce0 = 1'b1;
    end else begin
        W_ho_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        W_ho_8_ce0 = 1'b1;
    end else begin
        W_ho_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        W_ho_9_ce0 = 1'b1;
    end else begin
        W_ho_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_in_offset_blk_n = p_in_offset_empty_n;
    end else begin
        p_in_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_in_offset_read = 1'b1;
    end else begin
        p_in_offset_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        str_in12_blk_n = str_in12_full_n;
    end else begin
        str_in12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((str_in12_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            str_in12_din = p_Result_3_i_46_fu_1460_p5;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            str_in12_din = p_Result_3_14_i_fu_1431_p5;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            str_in12_din = p_Result_3_13_i_fu_1402_p5;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            str_in12_din = p_Result_3_12_i_fu_1373_p5;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            str_in12_din = p_Result_3_11_i_fu_1344_p5;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            str_in12_din = p_Result_3_10_i_fu_1315_p5;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            str_in12_din = p_Result_3_9_i_fu_1286_p5;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            str_in12_din = p_Result_3_8_i_fu_1257_p5;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            str_in12_din = p_Result_3_7_i_fu_1228_p5;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            str_in12_din = p_Result_3_6_i_fu_1199_p5;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            str_in12_din = p_Result_3_5_i_fu_1170_p5;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            str_in12_din = p_Result_3_4_i_fu_1141_p5;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            str_in12_din = p_Result_3_3_i_fu_1112_p5;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            str_in12_din = p_Result_3_2_i_fu_1083_p5;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            str_in12_din = p_Result_3_1_i_fu_1054_p5;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            str_in12_din = p_Result_3_i_fu_1025_p5;
        end else begin
            str_in12_din = 'bx;
        end
    end else begin
        str_in12_din = 'bx;
    end
end

always @ (*) begin
    if ((((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        str_in12_write = 1'b1;
    end else begin
        str_in12_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_ho_0_address0 = p_in_offset_cast_i_fu_1001_p1;

assign W_ho_10_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_11_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_12_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_13_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_14_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_15_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_16_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_17_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_18_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_19_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_1_address0 = p_in_offset_cast_i_fu_1001_p1;

assign W_ho_20_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_21_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_22_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_23_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_24_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_25_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_26_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_27_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_28_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_29_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_2_address0 = p_in_offset_cast_i_fu_1001_p1;

assign W_ho_30_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_31_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_32_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_33_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_34_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_35_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_36_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_37_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_38_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_39_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_3_address0 = p_in_offset_cast_i_fu_1001_p1;

assign W_ho_40_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_41_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_42_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_43_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_44_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_45_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_46_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_47_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_48_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_49_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_4_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_50_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_51_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_52_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_53_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_54_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_55_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_56_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_57_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_58_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_59_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_5_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_60_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_61_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_62_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_63_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_6_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_7_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_8_address0 = p_in_offset_cast_i_reg_1473;

assign W_ho_9_address0 = p_in_offset_cast_i_reg_1473;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign bitcast_ln123_316_fu_1013_p1 = W_ho_1_q0;

assign bitcast_ln123_317_fu_1017_p1 = W_ho_2_q0;

assign bitcast_ln123_318_fu_1021_p1 = W_ho_3_q0;

assign bitcast_ln123_319_fu_1038_p1 = W_ho_4_q0;

assign bitcast_ln123_320_fu_1042_p1 = W_ho_5_q0;

assign bitcast_ln123_321_fu_1046_p1 = W_ho_6_q0;

assign bitcast_ln123_322_fu_1050_p1 = W_ho_7_q0;

assign bitcast_ln123_323_fu_1067_p1 = W_ho_8_q0;

assign bitcast_ln123_324_fu_1071_p1 = W_ho_9_q0;

assign bitcast_ln123_325_fu_1075_p1 = W_ho_10_q0;

assign bitcast_ln123_326_fu_1079_p1 = W_ho_11_q0;

assign bitcast_ln123_327_fu_1096_p1 = W_ho_12_q0;

assign bitcast_ln123_328_fu_1100_p1 = W_ho_13_q0;

assign bitcast_ln123_329_fu_1104_p1 = W_ho_14_q0;

assign bitcast_ln123_330_fu_1108_p1 = W_ho_15_q0;

assign bitcast_ln123_331_fu_1125_p1 = W_ho_16_q0;

assign bitcast_ln123_332_fu_1129_p1 = W_ho_17_q0;

assign bitcast_ln123_333_fu_1133_p1 = W_ho_18_q0;

assign bitcast_ln123_334_fu_1137_p1 = W_ho_19_q0;

assign bitcast_ln123_335_fu_1154_p1 = W_ho_20_q0;

assign bitcast_ln123_336_fu_1158_p1 = W_ho_21_q0;

assign bitcast_ln123_337_fu_1162_p1 = W_ho_22_q0;

assign bitcast_ln123_338_fu_1166_p1 = W_ho_23_q0;

assign bitcast_ln123_339_fu_1183_p1 = W_ho_24_q0;

assign bitcast_ln123_340_fu_1187_p1 = W_ho_25_q0;

assign bitcast_ln123_341_fu_1191_p1 = W_ho_26_q0;

assign bitcast_ln123_342_fu_1195_p1 = W_ho_27_q0;

assign bitcast_ln123_343_fu_1212_p1 = W_ho_28_q0;

assign bitcast_ln123_344_fu_1216_p1 = W_ho_29_q0;

assign bitcast_ln123_345_fu_1220_p1 = W_ho_30_q0;

assign bitcast_ln123_346_fu_1224_p1 = W_ho_31_q0;

assign bitcast_ln123_347_fu_1241_p1 = W_ho_32_q0;

assign bitcast_ln123_348_fu_1245_p1 = W_ho_33_q0;

assign bitcast_ln123_349_fu_1249_p1 = W_ho_34_q0;

assign bitcast_ln123_350_fu_1253_p1 = W_ho_35_q0;

assign bitcast_ln123_351_fu_1270_p1 = W_ho_36_q0;

assign bitcast_ln123_352_fu_1274_p1 = W_ho_37_q0;

assign bitcast_ln123_353_fu_1278_p1 = W_ho_38_q0;

assign bitcast_ln123_354_fu_1282_p1 = W_ho_39_q0;

assign bitcast_ln123_355_fu_1299_p1 = W_ho_40_q0;

assign bitcast_ln123_356_fu_1303_p1 = W_ho_41_q0;

assign bitcast_ln123_357_fu_1307_p1 = W_ho_42_q0;

assign bitcast_ln123_358_fu_1311_p1 = W_ho_43_q0;

assign bitcast_ln123_359_fu_1328_p1 = W_ho_44_q0;

assign bitcast_ln123_360_fu_1332_p1 = W_ho_45_q0;

assign bitcast_ln123_361_fu_1336_p1 = W_ho_46_q0;

assign bitcast_ln123_362_fu_1340_p1 = W_ho_47_q0;

assign bitcast_ln123_363_fu_1357_p1 = W_ho_48_q0;

assign bitcast_ln123_364_fu_1361_p1 = W_ho_49_q0;

assign bitcast_ln123_365_fu_1365_p1 = W_ho_50_q0;

assign bitcast_ln123_366_fu_1369_p1 = W_ho_51_q0;

assign bitcast_ln123_367_fu_1386_p1 = W_ho_52_q0;

assign bitcast_ln123_368_fu_1390_p1 = W_ho_53_q0;

assign bitcast_ln123_369_fu_1394_p1 = W_ho_54_q0;

assign bitcast_ln123_370_fu_1398_p1 = W_ho_55_q0;

assign bitcast_ln123_371_fu_1415_p1 = W_ho_56_q0;

assign bitcast_ln123_372_fu_1419_p1 = W_ho_57_q0;

assign bitcast_ln123_373_fu_1423_p1 = W_ho_58_q0;

assign bitcast_ln123_374_fu_1427_p1 = W_ho_59_q0;

assign bitcast_ln123_375_fu_1444_p1 = W_ho_60_q0;

assign bitcast_ln123_376_fu_1448_p1 = W_ho_61_q0;

assign bitcast_ln123_377_fu_1452_p1 = W_ho_62_q0;

assign bitcast_ln123_378_fu_1456_p1 = W_ho_63_q0;

assign bitcast_ln123_fu_1009_p1 = W_ho_0_q0;

assign p_Result_3_10_i_fu_1315_p5 = {{{{bitcast_ln123_358_fu_1311_p1}, {bitcast_ln123_357_fu_1307_p1}}, {bitcast_ln123_356_fu_1303_p1}}, {bitcast_ln123_355_fu_1299_p1}};

assign p_Result_3_11_i_fu_1344_p5 = {{{{bitcast_ln123_362_fu_1340_p1}, {bitcast_ln123_361_fu_1336_p1}}, {bitcast_ln123_360_fu_1332_p1}}, {bitcast_ln123_359_fu_1328_p1}};

assign p_Result_3_12_i_fu_1373_p5 = {{{{bitcast_ln123_366_fu_1369_p1}, {bitcast_ln123_365_fu_1365_p1}}, {bitcast_ln123_364_fu_1361_p1}}, {bitcast_ln123_363_fu_1357_p1}};

assign p_Result_3_13_i_fu_1402_p5 = {{{{bitcast_ln123_370_fu_1398_p1}, {bitcast_ln123_369_fu_1394_p1}}, {bitcast_ln123_368_fu_1390_p1}}, {bitcast_ln123_367_fu_1386_p1}};

assign p_Result_3_14_i_fu_1431_p5 = {{{{bitcast_ln123_374_fu_1427_p1}, {bitcast_ln123_373_fu_1423_p1}}, {bitcast_ln123_372_fu_1419_p1}}, {bitcast_ln123_371_fu_1415_p1}};

assign p_Result_3_1_i_fu_1054_p5 = {{{{bitcast_ln123_322_fu_1050_p1}, {bitcast_ln123_321_fu_1046_p1}}, {bitcast_ln123_320_fu_1042_p1}}, {bitcast_ln123_319_fu_1038_p1}};

assign p_Result_3_2_i_fu_1083_p5 = {{{{bitcast_ln123_326_fu_1079_p1}, {bitcast_ln123_325_fu_1075_p1}}, {bitcast_ln123_324_fu_1071_p1}}, {bitcast_ln123_323_fu_1067_p1}};

assign p_Result_3_3_i_fu_1112_p5 = {{{{bitcast_ln123_330_fu_1108_p1}, {bitcast_ln123_329_fu_1104_p1}}, {bitcast_ln123_328_fu_1100_p1}}, {bitcast_ln123_327_fu_1096_p1}};

assign p_Result_3_4_i_fu_1141_p5 = {{{{bitcast_ln123_334_fu_1137_p1}, {bitcast_ln123_333_fu_1133_p1}}, {bitcast_ln123_332_fu_1129_p1}}, {bitcast_ln123_331_fu_1125_p1}};

assign p_Result_3_5_i_fu_1170_p5 = {{{{bitcast_ln123_338_fu_1166_p1}, {bitcast_ln123_337_fu_1162_p1}}, {bitcast_ln123_336_fu_1158_p1}}, {bitcast_ln123_335_fu_1154_p1}};

assign p_Result_3_6_i_fu_1199_p5 = {{{{bitcast_ln123_342_fu_1195_p1}, {bitcast_ln123_341_fu_1191_p1}}, {bitcast_ln123_340_fu_1187_p1}}, {bitcast_ln123_339_fu_1183_p1}};

assign p_Result_3_7_i_fu_1228_p5 = {{{{bitcast_ln123_346_fu_1224_p1}, {bitcast_ln123_345_fu_1220_p1}}, {bitcast_ln123_344_fu_1216_p1}}, {bitcast_ln123_343_fu_1212_p1}};

assign p_Result_3_8_i_fu_1257_p5 = {{{{bitcast_ln123_350_fu_1253_p1}, {bitcast_ln123_349_fu_1249_p1}}, {bitcast_ln123_348_fu_1245_p1}}, {bitcast_ln123_347_fu_1241_p1}};

assign p_Result_3_9_i_fu_1286_p5 = {{{{bitcast_ln123_354_fu_1282_p1}, {bitcast_ln123_353_fu_1278_p1}}, {bitcast_ln123_352_fu_1274_p1}}, {bitcast_ln123_351_fu_1270_p1}};

assign p_Result_3_i_46_fu_1460_p5 = {{{{bitcast_ln123_378_fu_1456_p1}, {bitcast_ln123_377_fu_1452_p1}}, {bitcast_ln123_376_fu_1448_p1}}, {bitcast_ln123_375_fu_1444_p1}};

assign p_Result_3_i_fu_1025_p5 = {{{{bitcast_ln123_318_fu_1021_p1}, {bitcast_ln123_317_fu_1017_p1}}, {bitcast_ln123_316_fu_1013_p1}}, {bitcast_ln123_fu_1009_p1}};

assign p_in_offset_cast_i_fu_1001_p1 = p_in_offset_dout;

assign start_out = real_start;

always @ (posedge ap_clk) begin
    p_in_offset_cast_i_reg_1473[31:6] <= 26'b00000000000000000000000000;
end

endmodule //krnl_lstm_readVec2Stream_float_4u_150
