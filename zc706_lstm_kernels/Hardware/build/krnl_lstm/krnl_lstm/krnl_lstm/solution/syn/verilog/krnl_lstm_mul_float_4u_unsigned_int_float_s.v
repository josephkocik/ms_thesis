// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_lstm_mul_float_4u_unsigned_int_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        str_in12_dout,
        str_in12_empty_n,
        str_in12_read,
        str_in23_dout,
        str_in23_empty_n,
        str_in23_read,
        l_mulStr1_din,
        l_mulStr1_full_n,
        l_mulStr1_write
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [127:0] str_in12_dout;
input   str_in12_empty_n;
output   str_in12_read;
input  [127:0] str_in23_dout;
input   str_in23_empty_n;
output   str_in23_read;
output  [127:0] l_mulStr1_din;
input   l_mulStr1_full_n;
output   l_mulStr1_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg str_in12_read;
reg str_in23_read;
reg[127:0] l_mulStr1_din;
reg l_mulStr1_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    str_in12_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg    str_in23_blk_n;
reg    l_mulStr1_blk_n;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
reg   [31:0] reg_129;
reg    ap_block_state1;
reg    ap_block_state2;
reg    ap_block_state3;
reg    ap_block_state4;
reg    ap_block_state5;
reg    ap_block_state6;
reg    ap_block_state7;
reg    ap_block_state8;
reg    ap_block_state9;
reg    ap_block_state10;
reg    ap_block_state11;
reg    ap_block_state12;
reg    ap_block_state13;
reg    ap_block_state14;
reg    ap_block_state15;
reg    ap_block_state16;
reg   [31:0] reg_133;
reg   [31:0] reg_137;
reg   [31:0] reg_141;
reg   [31:0] reg_145;
reg   [31:0] reg_149;
wire   [31:0] grp_fu_53_p2;
reg   [31:0] reg_153;
wire   [31:0] grp_fu_57_p2;
reg   [31:0] reg_157;
wire   [31:0] grp_fu_61_p2;
reg   [31:0] reg_161;
wire   [31:0] grp_fu_65_p2;
reg   [31:0] reg_165;
wire   [31:0] trunc_ln674_fu_169_p1;
reg   [31:0] trunc_ln674_reg_1369;
wire   [31:0] trunc_ln674_125_fu_173_p1;
reg   [31:0] trunc_ln674_125_reg_1374;
wire   [31:0] l_valX_m_Val_0_fu_177_p1;
wire   [31:0] l_valX_m_Val_1_fu_181_p1;
wire   [31:0] l_valX_m_Val_2_fu_186_p1;
wire   [31:0] l_valX_m_Val_3_fu_191_p1;
wire   [31:0] bitcast_ln102_fu_196_p1;
wire   [31:0] bitcast_ln102_508_fu_200_p1;
wire   [31:0] bitcast_ln102_509_fu_205_p1;
wire   [31:0] bitcast_ln102_510_fu_210_p1;
wire   [31:0] trunc_ln674_126_fu_215_p1;
reg   [31:0] trunc_ln674_126_reg_1419;
wire   [31:0] trunc_ln674_127_fu_219_p1;
reg   [31:0] trunc_ln674_127_reg_1424;
wire   [31:0] l_valX_m_Val_0_61_fu_223_p1;
wire   [31:0] l_valX_m_Val_1_61_fu_227_p1;
wire   [31:0] l_valX_m_Val_2_61_fu_232_p1;
wire   [31:0] l_valX_m_Val_3_61_fu_237_p1;
wire   [31:0] bitcast_ln102_515_fu_242_p1;
wire   [31:0] bitcast_ln102_516_fu_246_p1;
wire   [31:0] bitcast_ln102_517_fu_251_p1;
wire   [31:0] bitcast_ln102_518_fu_256_p1;
wire   [31:0] trunc_ln674_128_fu_261_p1;
reg   [31:0] trunc_ln674_128_reg_1469;
wire   [31:0] trunc_ln674_129_fu_265_p1;
reg   [31:0] trunc_ln674_129_reg_1474;
wire   [31:0] l_valX_m_Val_0_62_fu_269_p1;
wire   [31:0] l_valX_m_Val_1_62_fu_273_p1;
wire   [31:0] l_valX_m_Val_2_62_fu_278_p1;
wire   [31:0] l_valX_m_Val_3_62_fu_283_p1;
wire   [31:0] bitcast_ln102_523_fu_288_p1;
wire   [31:0] bitcast_ln102_524_fu_292_p1;
wire   [31:0] bitcast_ln102_525_fu_297_p1;
wire   [31:0] bitcast_ln102_526_fu_302_p1;
wire   [31:0] trunc_ln674_130_fu_307_p1;
reg   [31:0] trunc_ln674_130_reg_1519;
wire   [31:0] trunc_ln674_131_fu_311_p1;
reg   [31:0] trunc_ln674_131_reg_1524;
wire   [31:0] l_valX_m_Val_0_63_fu_315_p1;
wire   [31:0] l_valX_m_Val_1_63_fu_319_p1;
wire   [31:0] l_valX_m_Val_2_63_fu_324_p1;
wire   [31:0] l_valX_m_Val_3_63_fu_329_p1;
wire   [31:0] bitcast_ln102_531_fu_334_p1;
wire   [31:0] bitcast_ln102_532_fu_338_p1;
wire   [31:0] bitcast_ln102_533_fu_343_p1;
wire   [31:0] bitcast_ln102_534_fu_348_p1;
wire   [31:0] trunc_ln674_132_fu_353_p1;
reg   [31:0] trunc_ln674_132_reg_1569;
wire   [31:0] trunc_ln674_133_fu_357_p1;
reg   [31:0] trunc_ln674_133_reg_1574;
wire   [31:0] l_valX_m_Val_0_64_fu_390_p1;
wire   [31:0] l_valX_m_Val_1_64_fu_394_p1;
wire   [31:0] l_valX_m_Val_2_64_fu_399_p1;
wire   [31:0] l_valX_m_Val_3_64_fu_404_p1;
wire   [31:0] bitcast_ln102_539_fu_409_p1;
wire   [31:0] bitcast_ln102_540_fu_413_p1;
wire   [31:0] bitcast_ln102_541_fu_418_p1;
wire   [31:0] bitcast_ln102_542_fu_423_p1;
wire   [31:0] trunc_ln674_134_fu_428_p1;
reg   [31:0] trunc_ln674_134_reg_1619;
wire   [31:0] trunc_ln674_135_fu_432_p1;
reg   [31:0] trunc_ln674_135_reg_1624;
wire   [31:0] l_valX_m_Val_0_65_fu_465_p1;
wire   [31:0] l_valX_m_Val_1_65_fu_469_p1;
wire   [31:0] l_valX_m_Val_2_65_fu_474_p1;
wire   [31:0] l_valX_m_Val_3_65_fu_479_p1;
wire   [31:0] bitcast_ln102_547_fu_484_p1;
wire   [31:0] bitcast_ln102_548_fu_488_p1;
wire   [31:0] bitcast_ln102_549_fu_493_p1;
wire   [31:0] bitcast_ln102_550_fu_498_p1;
wire   [31:0] trunc_ln674_136_fu_503_p1;
reg   [31:0] trunc_ln674_136_reg_1669;
wire   [31:0] trunc_ln674_137_fu_507_p1;
reg   [31:0] trunc_ln674_137_reg_1674;
wire   [31:0] l_valX_m_Val_0_66_fu_540_p1;
wire   [31:0] l_valX_m_Val_1_66_fu_544_p1;
wire   [31:0] l_valX_m_Val_2_66_fu_549_p1;
wire   [31:0] l_valX_m_Val_3_66_fu_554_p1;
wire   [31:0] bitcast_ln102_555_fu_559_p1;
wire   [31:0] bitcast_ln102_556_fu_563_p1;
wire   [31:0] bitcast_ln102_557_fu_568_p1;
wire   [31:0] bitcast_ln102_558_fu_573_p1;
wire   [31:0] trunc_ln674_138_fu_578_p1;
reg   [31:0] trunc_ln674_138_reg_1719;
wire   [31:0] trunc_ln674_139_fu_582_p1;
reg   [31:0] trunc_ln674_139_reg_1724;
wire   [31:0] l_valX_m_Val_0_67_fu_615_p1;
wire   [31:0] l_valX_m_Val_1_67_fu_619_p1;
wire   [31:0] l_valX_m_Val_2_67_fu_624_p1;
wire   [31:0] l_valX_m_Val_3_67_fu_629_p1;
wire   [31:0] bitcast_ln102_563_fu_634_p1;
wire   [31:0] bitcast_ln102_564_fu_638_p1;
wire   [31:0] bitcast_ln102_565_fu_643_p1;
wire   [31:0] bitcast_ln102_566_fu_648_p1;
wire   [31:0] trunc_ln674_140_fu_653_p1;
reg   [31:0] trunc_ln674_140_reg_1769;
wire   [31:0] trunc_ln674_141_fu_657_p1;
reg   [31:0] trunc_ln674_141_reg_1774;
wire   [31:0] l_valX_m_Val_0_68_fu_690_p1;
wire   [31:0] l_valX_m_Val_1_68_fu_694_p1;
wire   [31:0] l_valX_m_Val_2_68_fu_699_p1;
wire   [31:0] l_valX_m_Val_3_68_fu_704_p1;
wire   [31:0] bitcast_ln102_571_fu_709_p1;
wire   [31:0] bitcast_ln102_572_fu_713_p1;
wire   [31:0] bitcast_ln102_573_fu_718_p1;
wire   [31:0] bitcast_ln102_574_fu_723_p1;
wire   [31:0] trunc_ln674_142_fu_728_p1;
reg   [31:0] trunc_ln674_142_reg_1819;
wire   [31:0] trunc_ln674_143_fu_732_p1;
reg   [31:0] trunc_ln674_143_reg_1824;
wire   [31:0] l_valX_m_Val_0_69_fu_765_p1;
wire   [31:0] l_valX_m_Val_1_69_fu_769_p1;
wire   [31:0] l_valX_m_Val_2_69_fu_774_p1;
wire   [31:0] l_valX_m_Val_3_69_fu_779_p1;
wire   [31:0] bitcast_ln102_579_fu_784_p1;
wire   [31:0] bitcast_ln102_580_fu_788_p1;
wire   [31:0] bitcast_ln102_581_fu_793_p1;
wire   [31:0] bitcast_ln102_582_fu_798_p1;
wire   [31:0] trunc_ln674_144_fu_803_p1;
reg   [31:0] trunc_ln674_144_reg_1869;
wire   [31:0] trunc_ln674_145_fu_807_p1;
reg   [31:0] trunc_ln674_145_reg_1874;
wire   [31:0] l_valX_m_Val_0_70_fu_840_p1;
wire   [31:0] l_valX_m_Val_1_70_fu_844_p1;
wire   [31:0] l_valX_m_Val_2_70_fu_849_p1;
wire   [31:0] l_valX_m_Val_3_70_fu_854_p1;
wire   [31:0] bitcast_ln102_587_fu_859_p1;
wire   [31:0] bitcast_ln102_588_fu_863_p1;
wire   [31:0] bitcast_ln102_589_fu_868_p1;
wire   [31:0] bitcast_ln102_590_fu_873_p1;
wire   [31:0] trunc_ln674_146_fu_878_p1;
reg   [31:0] trunc_ln674_146_reg_1919;
wire   [31:0] trunc_ln674_147_fu_882_p1;
reg   [31:0] trunc_ln674_147_reg_1924;
wire   [31:0] l_valX_m_Val_0_71_fu_915_p1;
wire   [31:0] l_valX_m_Val_1_71_fu_919_p1;
wire   [31:0] l_valX_m_Val_2_71_fu_924_p1;
wire   [31:0] l_valX_m_Val_3_71_fu_929_p1;
wire   [31:0] bitcast_ln102_595_fu_934_p1;
wire   [31:0] bitcast_ln102_596_fu_938_p1;
wire   [31:0] bitcast_ln102_597_fu_943_p1;
wire   [31:0] bitcast_ln102_598_fu_948_p1;
wire   [31:0] trunc_ln674_148_fu_953_p1;
reg   [31:0] trunc_ln674_148_reg_1969;
wire   [31:0] trunc_ln674_149_fu_957_p1;
reg   [31:0] trunc_ln674_149_reg_1974;
wire   [31:0] l_valX_m_Val_0_72_fu_990_p1;
wire   [31:0] l_valX_m_Val_1_72_fu_994_p1;
wire   [31:0] l_valX_m_Val_2_72_fu_999_p1;
wire   [31:0] l_valX_m_Val_3_72_fu_1004_p1;
wire   [31:0] bitcast_ln102_603_fu_1009_p1;
wire   [31:0] bitcast_ln102_604_fu_1013_p1;
wire   [31:0] bitcast_ln102_605_fu_1018_p1;
wire   [31:0] bitcast_ln102_606_fu_1023_p1;
wire   [31:0] trunc_ln674_150_fu_1028_p1;
reg   [31:0] trunc_ln674_150_reg_2019;
wire   [31:0] trunc_ln674_151_fu_1032_p1;
reg   [31:0] trunc_ln674_151_reg_2024;
wire   [31:0] l_valX_m_Val_0_73_fu_1065_p1;
wire   [31:0] l_valX_m_Val_1_73_fu_1069_p1;
wire   [31:0] l_valX_m_Val_2_73_fu_1074_p1;
wire   [31:0] l_valX_m_Val_3_73_fu_1079_p1;
wire   [31:0] bitcast_ln102_611_fu_1084_p1;
wire   [31:0] bitcast_ln102_612_fu_1088_p1;
wire   [31:0] bitcast_ln102_613_fu_1093_p1;
wire   [31:0] bitcast_ln102_614_fu_1098_p1;
wire   [31:0] trunc_ln674_152_fu_1103_p1;
reg   [31:0] trunc_ln674_152_reg_2069;
wire   [31:0] trunc_ln674_153_fu_1107_p1;
reg   [31:0] trunc_ln674_153_reg_2074;
wire   [31:0] l_valX_m_Val_0_74_fu_1140_p1;
wire   [31:0] l_valX_m_Val_1_74_fu_1144_p1;
wire   [31:0] l_valX_m_Val_2_74_fu_1149_p1;
wire   [31:0] l_valX_m_Val_3_74_fu_1154_p1;
wire   [31:0] bitcast_ln102_619_fu_1159_p1;
wire   [31:0] bitcast_ln102_620_fu_1163_p1;
wire   [31:0] bitcast_ln102_621_fu_1168_p1;
wire   [31:0] bitcast_ln102_622_fu_1173_p1;
wire   [31:0] trunc_ln674_154_fu_1178_p1;
reg   [31:0] trunc_ln674_154_reg_2119;
wire   [31:0] trunc_ln674_155_fu_1182_p1;
reg   [31:0] trunc_ln674_155_reg_2124;
wire   [31:0] l_valX_m_Val_0_75_fu_1215_p1;
wire   [31:0] l_valX_m_Val_1_75_fu_1219_p1;
wire   [31:0] l_valX_m_Val_2_75_fu_1224_p1;
wire   [31:0] l_valX_m_Val_3_75_fu_1229_p1;
wire   [31:0] bitcast_ln102_627_fu_1234_p1;
wire   [31:0] bitcast_ln102_628_fu_1238_p1;
wire   [31:0] bitcast_ln102_629_fu_1243_p1;
wire   [31:0] bitcast_ln102_630_fu_1248_p1;
wire   [127:0] p_Result_10_fu_377_p5;
wire   [127:0] p_Result_14_1_fu_452_p5;
wire   [127:0] p_Result_14_2_fu_527_p5;
wire   [127:0] p_Result_14_3_fu_602_p5;
wire   [127:0] p_Result_14_4_fu_677_p5;
wire   [127:0] p_Result_14_5_fu_752_p5;
wire   [127:0] p_Result_14_6_fu_827_p5;
wire   [127:0] p_Result_14_7_fu_902_p5;
wire   [127:0] p_Result_14_8_fu_977_p5;
wire   [127:0] p_Result_14_9_fu_1052_p5;
wire   [127:0] p_Result_14_10_fu_1127_p5;
wire   [127:0] p_Result_14_11_fu_1202_p5;
wire   [127:0] p_Result_14_12_fu_1269_p5;
wire   [127:0] p_Result_14_13_fu_1298_p5;
wire   [127:0] p_Result_14_14_fu_1327_p5;
wire   [127:0] p_Result_14_s_fu_1356_p5;
reg   [31:0] grp_fu_53_p0;
reg   [31:0] grp_fu_53_p1;
reg   [31:0] grp_fu_57_p0;
reg   [31:0] grp_fu_57_p1;
reg   [31:0] grp_fu_61_p0;
reg   [31:0] grp_fu_61_p1;
reg   [31:0] grp_fu_65_p0;
reg   [31:0] grp_fu_65_p1;
wire   [31:0] bitcast_ln123_885_fu_373_p1;
wire   [31:0] bitcast_ln123_884_fu_369_p1;
wire   [31:0] bitcast_ln123_883_fu_365_p1;
wire   [31:0] bitcast_ln123_fu_361_p1;
wire   [31:0] bitcast_ln123_889_fu_448_p1;
wire   [31:0] bitcast_ln123_888_fu_444_p1;
wire   [31:0] bitcast_ln123_887_fu_440_p1;
wire   [31:0] bitcast_ln123_886_fu_436_p1;
wire   [31:0] bitcast_ln123_893_fu_523_p1;
wire   [31:0] bitcast_ln123_892_fu_519_p1;
wire   [31:0] bitcast_ln123_891_fu_515_p1;
wire   [31:0] bitcast_ln123_890_fu_511_p1;
wire   [31:0] bitcast_ln123_897_fu_598_p1;
wire   [31:0] bitcast_ln123_896_fu_594_p1;
wire   [31:0] bitcast_ln123_895_fu_590_p1;
wire   [31:0] bitcast_ln123_894_fu_586_p1;
wire   [31:0] bitcast_ln123_901_fu_673_p1;
wire   [31:0] bitcast_ln123_900_fu_669_p1;
wire   [31:0] bitcast_ln123_899_fu_665_p1;
wire   [31:0] bitcast_ln123_898_fu_661_p1;
wire   [31:0] bitcast_ln123_905_fu_748_p1;
wire   [31:0] bitcast_ln123_904_fu_744_p1;
wire   [31:0] bitcast_ln123_903_fu_740_p1;
wire   [31:0] bitcast_ln123_902_fu_736_p1;
wire   [31:0] bitcast_ln123_909_fu_823_p1;
wire   [31:0] bitcast_ln123_908_fu_819_p1;
wire   [31:0] bitcast_ln123_907_fu_815_p1;
wire   [31:0] bitcast_ln123_906_fu_811_p1;
wire   [31:0] bitcast_ln123_913_fu_898_p1;
wire   [31:0] bitcast_ln123_912_fu_894_p1;
wire   [31:0] bitcast_ln123_911_fu_890_p1;
wire   [31:0] bitcast_ln123_910_fu_886_p1;
wire   [31:0] bitcast_ln123_917_fu_973_p1;
wire   [31:0] bitcast_ln123_916_fu_969_p1;
wire   [31:0] bitcast_ln123_915_fu_965_p1;
wire   [31:0] bitcast_ln123_914_fu_961_p1;
wire   [31:0] bitcast_ln123_921_fu_1048_p1;
wire   [31:0] bitcast_ln123_920_fu_1044_p1;
wire   [31:0] bitcast_ln123_919_fu_1040_p1;
wire   [31:0] bitcast_ln123_918_fu_1036_p1;
wire   [31:0] bitcast_ln123_925_fu_1123_p1;
wire   [31:0] bitcast_ln123_924_fu_1119_p1;
wire   [31:0] bitcast_ln123_923_fu_1115_p1;
wire   [31:0] bitcast_ln123_922_fu_1111_p1;
wire   [31:0] bitcast_ln123_929_fu_1198_p1;
wire   [31:0] bitcast_ln123_928_fu_1194_p1;
wire   [31:0] bitcast_ln123_927_fu_1190_p1;
wire   [31:0] bitcast_ln123_926_fu_1186_p1;
wire   [31:0] bitcast_ln123_933_fu_1265_p1;
wire   [31:0] bitcast_ln123_932_fu_1261_p1;
wire   [31:0] bitcast_ln123_931_fu_1257_p1;
wire   [31:0] bitcast_ln123_930_fu_1253_p1;
wire   [31:0] bitcast_ln123_937_fu_1294_p1;
wire   [31:0] bitcast_ln123_936_fu_1290_p1;
wire   [31:0] bitcast_ln123_935_fu_1286_p1;
wire   [31:0] bitcast_ln123_934_fu_1282_p1;
wire   [31:0] bitcast_ln123_941_fu_1323_p1;
wire   [31:0] bitcast_ln123_940_fu_1319_p1;
wire   [31:0] bitcast_ln123_939_fu_1315_p1;
wire   [31:0] bitcast_ln123_938_fu_1311_p1;
wire   [31:0] bitcast_ln123_945_fu_1352_p1;
wire   [31:0] bitcast_ln123_944_fu_1348_p1;
wire   [31:0] bitcast_ln123_943_fu_1344_p1;
wire   [31:0] bitcast_ln123_942_fu_1340_p1;
reg    grp_fu_53_ce;
reg    grp_fu_57_ce;
reg    grp_fu_61_ce;
reg    grp_fu_65_ce;
reg   [20:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 21'd1;
end

krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U3023(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_53_p0),
    .din1(grp_fu_53_p1),
    .ce(grp_fu_53_ce),
    .dout(grp_fu_53_p2)
);

krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U3024(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_57_p0),
    .din1(grp_fu_57_p1),
    .ce(grp_fu_57_ce),
    .dout(grp_fu_57_p2)
);

krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U3025(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_61_p0),
    .din1(grp_fu_61_p1),
    .ce(grp_fu_61_ce),
    .dout(grp_fu_61_p2)
);

krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U3026(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_65_p0),
    .din1(grp_fu_65_p1),
    .ce(grp_fu_65_ce),
    .dout(grp_fu_65_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_129 <= {{str_in12_dout[63:32]}};
        reg_133 <= {{str_in12_dout[95:64]}};
        reg_137 <= {{str_in12_dout[127:96]}};
        reg_141 <= {{str_in23_dout[63:32]}};
        reg_145 <= {{str_in23_dout[95:64]}};
        reg_149 <= {{str_in23_dout[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        reg_153 <= grp_fu_53_p2;
        reg_157 <= grp_fu_57_p2;
        reg_161 <= grp_fu_61_p2;
        reg_165 <= grp_fu_65_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln674_125_reg_1374 <= trunc_ln674_125_fu_173_p1;
        trunc_ln674_reg_1369 <= trunc_ln674_fu_169_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        trunc_ln674_126_reg_1419 <= trunc_ln674_126_fu_215_p1;
        trunc_ln674_127_reg_1424 <= trunc_ln674_127_fu_219_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        trunc_ln674_128_reg_1469 <= trunc_ln674_128_fu_261_p1;
        trunc_ln674_129_reg_1474 <= trunc_ln674_129_fu_265_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        trunc_ln674_130_reg_1519 <= trunc_ln674_130_fu_307_p1;
        trunc_ln674_131_reg_1524 <= trunc_ln674_131_fu_311_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        trunc_ln674_132_reg_1569 <= trunc_ln674_132_fu_353_p1;
        trunc_ln674_133_reg_1574 <= trunc_ln674_133_fu_357_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        trunc_ln674_134_reg_1619 <= trunc_ln674_134_fu_428_p1;
        trunc_ln674_135_reg_1624 <= trunc_ln674_135_fu_432_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln674_136_reg_1669 <= trunc_ln674_136_fu_503_p1;
        trunc_ln674_137_reg_1674 <= trunc_ln674_137_fu_507_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        trunc_ln674_138_reg_1719 <= trunc_ln674_138_fu_578_p1;
        trunc_ln674_139_reg_1724 <= trunc_ln674_139_fu_582_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        trunc_ln674_140_reg_1769 <= trunc_ln674_140_fu_653_p1;
        trunc_ln674_141_reg_1774 <= trunc_ln674_141_fu_657_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        trunc_ln674_142_reg_1819 <= trunc_ln674_142_fu_728_p1;
        trunc_ln674_143_reg_1824 <= trunc_ln674_143_fu_732_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln674_144_reg_1869 <= trunc_ln674_144_fu_803_p1;
        trunc_ln674_145_reg_1874 <= trunc_ln674_145_fu_807_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln674_146_reg_1919 <= trunc_ln674_146_fu_878_p1;
        trunc_ln674_147_reg_1924 <= trunc_ln674_147_fu_882_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        trunc_ln674_148_reg_1969 <= trunc_ln674_148_fu_953_p1;
        trunc_ln674_149_reg_1974 <= trunc_ln674_149_fu_957_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln674_150_reg_2019 <= trunc_ln674_150_fu_1028_p1;
        trunc_ln674_151_reg_2024 <= trunc_ln674_151_fu_1032_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln674_152_reg_2069 <= trunc_ln674_152_fu_1103_p1;
        trunc_ln674_153_reg_2074 <= trunc_ln674_153_fu_1107_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        trunc_ln674_154_reg_2119 <= trunc_ln674_154_fu_1178_p1;
        trunc_ln674_155_reg_2124 <= trunc_ln674_155_fu_1182_p1;
    end
end

always @ (*) begin
    if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_53_ce = 1'b1;
    end else begin
        grp_fu_53_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_75_fu_1215_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_74_fu_1140_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_73_fu_1065_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_72_fu_990_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_71_fu_915_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_70_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_69_fu_765_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_68_fu_690_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_67_fu_615_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_66_fu_540_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_65_fu_465_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_64_fu_390_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_63_fu_315_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_62_fu_269_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_61_fu_223_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_53_p0 = l_valX_m_Val_0_fu_177_p1;
    end else begin
        grp_fu_53_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_53_p1 = bitcast_ln102_627_fu_1234_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_53_p1 = bitcast_ln102_619_fu_1159_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_53_p1 = bitcast_ln102_611_fu_1084_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_53_p1 = bitcast_ln102_603_fu_1009_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_53_p1 = bitcast_ln102_595_fu_934_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_53_p1 = bitcast_ln102_587_fu_859_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_53_p1 = bitcast_ln102_579_fu_784_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_53_p1 = bitcast_ln102_571_fu_709_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_53_p1 = bitcast_ln102_563_fu_634_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_53_p1 = bitcast_ln102_555_fu_559_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_53_p1 = bitcast_ln102_547_fu_484_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_53_p1 = bitcast_ln102_539_fu_409_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_53_p1 = bitcast_ln102_531_fu_334_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_53_p1 = bitcast_ln102_523_fu_288_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_53_p1 = bitcast_ln102_515_fu_242_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_53_p1 = bitcast_ln102_fu_196_p1;
    end else begin
        grp_fu_53_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_57_ce = 1'b1;
    end else begin
        grp_fu_57_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_75_fu_1219_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_74_fu_1144_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_73_fu_1069_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_72_fu_994_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_71_fu_919_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_70_fu_844_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_69_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_68_fu_694_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_67_fu_619_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_66_fu_544_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_65_fu_469_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_64_fu_394_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_63_fu_319_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_62_fu_273_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_61_fu_227_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_57_p0 = l_valX_m_Val_1_fu_181_p1;
    end else begin
        grp_fu_57_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_57_p1 = bitcast_ln102_628_fu_1238_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_57_p1 = bitcast_ln102_620_fu_1163_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_57_p1 = bitcast_ln102_612_fu_1088_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_57_p1 = bitcast_ln102_604_fu_1013_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_57_p1 = bitcast_ln102_596_fu_938_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_57_p1 = bitcast_ln102_588_fu_863_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_57_p1 = bitcast_ln102_580_fu_788_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_57_p1 = bitcast_ln102_572_fu_713_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_57_p1 = bitcast_ln102_564_fu_638_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_57_p1 = bitcast_ln102_556_fu_563_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_57_p1 = bitcast_ln102_548_fu_488_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_57_p1 = bitcast_ln102_540_fu_413_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_57_p1 = bitcast_ln102_532_fu_338_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_57_p1 = bitcast_ln102_524_fu_292_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_57_p1 = bitcast_ln102_516_fu_246_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_57_p1 = bitcast_ln102_508_fu_200_p1;
    end else begin
        grp_fu_57_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_61_ce = 1'b1;
    end else begin
        grp_fu_61_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_75_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_74_fu_1149_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_73_fu_1074_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_72_fu_999_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_71_fu_924_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_70_fu_849_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_69_fu_774_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_68_fu_699_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_67_fu_624_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_66_fu_549_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_65_fu_474_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_64_fu_399_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_63_fu_324_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_62_fu_278_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_61_fu_232_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_61_p0 = l_valX_m_Val_2_fu_186_p1;
    end else begin
        grp_fu_61_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_61_p1 = bitcast_ln102_629_fu_1243_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_61_p1 = bitcast_ln102_621_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_61_p1 = bitcast_ln102_613_fu_1093_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_61_p1 = bitcast_ln102_605_fu_1018_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_61_p1 = bitcast_ln102_597_fu_943_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_61_p1 = bitcast_ln102_589_fu_868_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_61_p1 = bitcast_ln102_581_fu_793_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_61_p1 = bitcast_ln102_573_fu_718_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_61_p1 = bitcast_ln102_565_fu_643_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_61_p1 = bitcast_ln102_557_fu_568_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_61_p1 = bitcast_ln102_549_fu_493_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_61_p1 = bitcast_ln102_541_fu_418_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_61_p1 = bitcast_ln102_533_fu_343_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_61_p1 = bitcast_ln102_525_fu_297_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_61_p1 = bitcast_ln102_517_fu_251_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_61_p1 = bitcast_ln102_509_fu_205_p1;
    end else begin
        grp_fu_61_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_65_ce = 1'b1;
    end else begin
        grp_fu_65_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_75_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_74_fu_1154_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_73_fu_1079_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_72_fu_1004_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_71_fu_929_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_70_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_69_fu_779_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_68_fu_704_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_67_fu_629_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_66_fu_554_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_65_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_64_fu_404_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_63_fu_329_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_62_fu_283_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_61_fu_237_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_65_p0 = l_valX_m_Val_3_fu_191_p1;
    end else begin
        grp_fu_65_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_65_p1 = bitcast_ln102_630_fu_1248_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_65_p1 = bitcast_ln102_622_fu_1173_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_65_p1 = bitcast_ln102_614_fu_1098_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_65_p1 = bitcast_ln102_606_fu_1023_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_65_p1 = bitcast_ln102_598_fu_948_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_65_p1 = bitcast_ln102_590_fu_873_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_65_p1 = bitcast_ln102_582_fu_798_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_65_p1 = bitcast_ln102_574_fu_723_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_65_p1 = bitcast_ln102_566_fu_648_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_65_p1 = bitcast_ln102_558_fu_573_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_65_p1 = bitcast_ln102_550_fu_498_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_65_p1 = bitcast_ln102_542_fu_423_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_65_p1 = bitcast_ln102_534_fu_348_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_65_p1 = bitcast_ln102_526_fu_302_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_65_p1 = bitcast_ln102_518_fu_256_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_65_p1 = bitcast_ln102_510_fu_210_p1;
    end else begin
        grp_fu_65_p1 = 'bx;
    end
end

always @ (*) begin
    if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        l_mulStr1_blk_n = l_mulStr1_full_n;
    end else begin
        l_mulStr1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        l_mulStr1_din = p_Result_14_s_fu_1356_p5;
    end else if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        l_mulStr1_din = p_Result_14_14_fu_1327_p5;
    end else if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        l_mulStr1_din = p_Result_14_13_fu_1298_p5;
    end else if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        l_mulStr1_din = p_Result_14_12_fu_1269_p5;
    end else if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        l_mulStr1_din = p_Result_14_11_fu_1202_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        l_mulStr1_din = p_Result_14_10_fu_1127_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
        l_mulStr1_din = p_Result_14_9_fu_1052_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        l_mulStr1_din = p_Result_14_8_fu_977_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        l_mulStr1_din = p_Result_14_7_fu_902_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        l_mulStr1_din = p_Result_14_6_fu_827_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
        l_mulStr1_din = p_Result_14_5_fu_752_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
        l_mulStr1_din = p_Result_14_4_fu_677_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        l_mulStr1_din = p_Result_14_3_fu_602_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        l_mulStr1_din = p_Result_14_2_fu_527_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        l_mulStr1_din = p_Result_14_1_fu_452_p5;
    end else if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        l_mulStr1_din = p_Result_10_fu_377_p5;
    end else begin
        l_mulStr1_din = 'bx;
    end
end

always @ (*) begin
    if ((((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)))) begin
        l_mulStr1_write = 1'b1;
    end else begin
        l_mulStr1_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        str_in12_blk_n = str_in12_empty_n;
    end else begin
        str_in12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        str_in12_read = 1'b1;
    end else begin
        str_in12_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        str_in23_blk_n = str_in23_empty_n;
    end else begin
        str_in23_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        str_in23_read = 1'b1;
    end else begin
        str_in23_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if ((~((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((l_mulStr1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state11 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state12 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state13 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state15 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state16 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9 = ((l_mulStr1_full_n == 1'b0) | (str_in23_empty_n == 1'b0) | (str_in12_empty_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign bitcast_ln102_508_fu_200_p1 = reg_141;

assign bitcast_ln102_509_fu_205_p1 = reg_145;

assign bitcast_ln102_510_fu_210_p1 = reg_149;

assign bitcast_ln102_515_fu_242_p1 = trunc_ln674_127_reg_1424;

assign bitcast_ln102_516_fu_246_p1 = reg_141;

assign bitcast_ln102_517_fu_251_p1 = reg_145;

assign bitcast_ln102_518_fu_256_p1 = reg_149;

assign bitcast_ln102_523_fu_288_p1 = trunc_ln674_129_reg_1474;

assign bitcast_ln102_524_fu_292_p1 = reg_141;

assign bitcast_ln102_525_fu_297_p1 = reg_145;

assign bitcast_ln102_526_fu_302_p1 = reg_149;

assign bitcast_ln102_531_fu_334_p1 = trunc_ln674_131_reg_1524;

assign bitcast_ln102_532_fu_338_p1 = reg_141;

assign bitcast_ln102_533_fu_343_p1 = reg_145;

assign bitcast_ln102_534_fu_348_p1 = reg_149;

assign bitcast_ln102_539_fu_409_p1 = trunc_ln674_133_reg_1574;

assign bitcast_ln102_540_fu_413_p1 = reg_141;

assign bitcast_ln102_541_fu_418_p1 = reg_145;

assign bitcast_ln102_542_fu_423_p1 = reg_149;

assign bitcast_ln102_547_fu_484_p1 = trunc_ln674_135_reg_1624;

assign bitcast_ln102_548_fu_488_p1 = reg_141;

assign bitcast_ln102_549_fu_493_p1 = reg_145;

assign bitcast_ln102_550_fu_498_p1 = reg_149;

assign bitcast_ln102_555_fu_559_p1 = trunc_ln674_137_reg_1674;

assign bitcast_ln102_556_fu_563_p1 = reg_141;

assign bitcast_ln102_557_fu_568_p1 = reg_145;

assign bitcast_ln102_558_fu_573_p1 = reg_149;

assign bitcast_ln102_563_fu_634_p1 = trunc_ln674_139_reg_1724;

assign bitcast_ln102_564_fu_638_p1 = reg_141;

assign bitcast_ln102_565_fu_643_p1 = reg_145;

assign bitcast_ln102_566_fu_648_p1 = reg_149;

assign bitcast_ln102_571_fu_709_p1 = trunc_ln674_141_reg_1774;

assign bitcast_ln102_572_fu_713_p1 = reg_141;

assign bitcast_ln102_573_fu_718_p1 = reg_145;

assign bitcast_ln102_574_fu_723_p1 = reg_149;

assign bitcast_ln102_579_fu_784_p1 = trunc_ln674_143_reg_1824;

assign bitcast_ln102_580_fu_788_p1 = reg_141;

assign bitcast_ln102_581_fu_793_p1 = reg_145;

assign bitcast_ln102_582_fu_798_p1 = reg_149;

assign bitcast_ln102_587_fu_859_p1 = trunc_ln674_145_reg_1874;

assign bitcast_ln102_588_fu_863_p1 = reg_141;

assign bitcast_ln102_589_fu_868_p1 = reg_145;

assign bitcast_ln102_590_fu_873_p1 = reg_149;

assign bitcast_ln102_595_fu_934_p1 = trunc_ln674_147_reg_1924;

assign bitcast_ln102_596_fu_938_p1 = reg_141;

assign bitcast_ln102_597_fu_943_p1 = reg_145;

assign bitcast_ln102_598_fu_948_p1 = reg_149;

assign bitcast_ln102_603_fu_1009_p1 = trunc_ln674_149_reg_1974;

assign bitcast_ln102_604_fu_1013_p1 = reg_141;

assign bitcast_ln102_605_fu_1018_p1 = reg_145;

assign bitcast_ln102_606_fu_1023_p1 = reg_149;

assign bitcast_ln102_611_fu_1084_p1 = trunc_ln674_151_reg_2024;

assign bitcast_ln102_612_fu_1088_p1 = reg_141;

assign bitcast_ln102_613_fu_1093_p1 = reg_145;

assign bitcast_ln102_614_fu_1098_p1 = reg_149;

assign bitcast_ln102_619_fu_1159_p1 = trunc_ln674_153_reg_2074;

assign bitcast_ln102_620_fu_1163_p1 = reg_141;

assign bitcast_ln102_621_fu_1168_p1 = reg_145;

assign bitcast_ln102_622_fu_1173_p1 = reg_149;

assign bitcast_ln102_627_fu_1234_p1 = trunc_ln674_155_reg_2124;

assign bitcast_ln102_628_fu_1238_p1 = reg_141;

assign bitcast_ln102_629_fu_1243_p1 = reg_145;

assign bitcast_ln102_630_fu_1248_p1 = reg_149;

assign bitcast_ln102_fu_196_p1 = trunc_ln674_125_reg_1374;

assign bitcast_ln123_883_fu_365_p1 = reg_157;

assign bitcast_ln123_884_fu_369_p1 = reg_161;

assign bitcast_ln123_885_fu_373_p1 = reg_165;

assign bitcast_ln123_886_fu_436_p1 = reg_153;

assign bitcast_ln123_887_fu_440_p1 = reg_157;

assign bitcast_ln123_888_fu_444_p1 = reg_161;

assign bitcast_ln123_889_fu_448_p1 = reg_165;

assign bitcast_ln123_890_fu_511_p1 = reg_153;

assign bitcast_ln123_891_fu_515_p1 = reg_157;

assign bitcast_ln123_892_fu_519_p1 = reg_161;

assign bitcast_ln123_893_fu_523_p1 = reg_165;

assign bitcast_ln123_894_fu_586_p1 = reg_153;

assign bitcast_ln123_895_fu_590_p1 = reg_157;

assign bitcast_ln123_896_fu_594_p1 = reg_161;

assign bitcast_ln123_897_fu_598_p1 = reg_165;

assign bitcast_ln123_898_fu_661_p1 = reg_153;

assign bitcast_ln123_899_fu_665_p1 = reg_157;

assign bitcast_ln123_900_fu_669_p1 = reg_161;

assign bitcast_ln123_901_fu_673_p1 = reg_165;

assign bitcast_ln123_902_fu_736_p1 = reg_153;

assign bitcast_ln123_903_fu_740_p1 = reg_157;

assign bitcast_ln123_904_fu_744_p1 = reg_161;

assign bitcast_ln123_905_fu_748_p1 = reg_165;

assign bitcast_ln123_906_fu_811_p1 = reg_153;

assign bitcast_ln123_907_fu_815_p1 = reg_157;

assign bitcast_ln123_908_fu_819_p1 = reg_161;

assign bitcast_ln123_909_fu_823_p1 = reg_165;

assign bitcast_ln123_910_fu_886_p1 = reg_153;

assign bitcast_ln123_911_fu_890_p1 = reg_157;

assign bitcast_ln123_912_fu_894_p1 = reg_161;

assign bitcast_ln123_913_fu_898_p1 = reg_165;

assign bitcast_ln123_914_fu_961_p1 = reg_153;

assign bitcast_ln123_915_fu_965_p1 = reg_157;

assign bitcast_ln123_916_fu_969_p1 = reg_161;

assign bitcast_ln123_917_fu_973_p1 = reg_165;

assign bitcast_ln123_918_fu_1036_p1 = reg_153;

assign bitcast_ln123_919_fu_1040_p1 = reg_157;

assign bitcast_ln123_920_fu_1044_p1 = reg_161;

assign bitcast_ln123_921_fu_1048_p1 = reg_165;

assign bitcast_ln123_922_fu_1111_p1 = reg_153;

assign bitcast_ln123_923_fu_1115_p1 = reg_157;

assign bitcast_ln123_924_fu_1119_p1 = reg_161;

assign bitcast_ln123_925_fu_1123_p1 = reg_165;

assign bitcast_ln123_926_fu_1186_p1 = reg_153;

assign bitcast_ln123_927_fu_1190_p1 = reg_157;

assign bitcast_ln123_928_fu_1194_p1 = reg_161;

assign bitcast_ln123_929_fu_1198_p1 = reg_165;

assign bitcast_ln123_930_fu_1253_p1 = reg_153;

assign bitcast_ln123_931_fu_1257_p1 = reg_157;

assign bitcast_ln123_932_fu_1261_p1 = reg_161;

assign bitcast_ln123_933_fu_1265_p1 = reg_165;

assign bitcast_ln123_934_fu_1282_p1 = reg_153;

assign bitcast_ln123_935_fu_1286_p1 = reg_157;

assign bitcast_ln123_936_fu_1290_p1 = reg_161;

assign bitcast_ln123_937_fu_1294_p1 = reg_165;

assign bitcast_ln123_938_fu_1311_p1 = reg_153;

assign bitcast_ln123_939_fu_1315_p1 = reg_157;

assign bitcast_ln123_940_fu_1319_p1 = reg_161;

assign bitcast_ln123_941_fu_1323_p1 = reg_165;

assign bitcast_ln123_942_fu_1340_p1 = reg_153;

assign bitcast_ln123_943_fu_1344_p1 = reg_157;

assign bitcast_ln123_944_fu_1348_p1 = reg_161;

assign bitcast_ln123_945_fu_1352_p1 = reg_165;

assign bitcast_ln123_fu_361_p1 = reg_153;

assign l_valX_m_Val_0_61_fu_223_p1 = trunc_ln674_126_reg_1419;

assign l_valX_m_Val_0_62_fu_269_p1 = trunc_ln674_128_reg_1469;

assign l_valX_m_Val_0_63_fu_315_p1 = trunc_ln674_130_reg_1519;

assign l_valX_m_Val_0_64_fu_390_p1 = trunc_ln674_132_reg_1569;

assign l_valX_m_Val_0_65_fu_465_p1 = trunc_ln674_134_reg_1619;

assign l_valX_m_Val_0_66_fu_540_p1 = trunc_ln674_136_reg_1669;

assign l_valX_m_Val_0_67_fu_615_p1 = trunc_ln674_138_reg_1719;

assign l_valX_m_Val_0_68_fu_690_p1 = trunc_ln674_140_reg_1769;

assign l_valX_m_Val_0_69_fu_765_p1 = trunc_ln674_142_reg_1819;

assign l_valX_m_Val_0_70_fu_840_p1 = trunc_ln674_144_reg_1869;

assign l_valX_m_Val_0_71_fu_915_p1 = trunc_ln674_146_reg_1919;

assign l_valX_m_Val_0_72_fu_990_p1 = trunc_ln674_148_reg_1969;

assign l_valX_m_Val_0_73_fu_1065_p1 = trunc_ln674_150_reg_2019;

assign l_valX_m_Val_0_74_fu_1140_p1 = trunc_ln674_152_reg_2069;

assign l_valX_m_Val_0_75_fu_1215_p1 = trunc_ln674_154_reg_2119;

assign l_valX_m_Val_0_fu_177_p1 = trunc_ln674_reg_1369;

assign l_valX_m_Val_1_61_fu_227_p1 = reg_129;

assign l_valX_m_Val_1_62_fu_273_p1 = reg_129;

assign l_valX_m_Val_1_63_fu_319_p1 = reg_129;

assign l_valX_m_Val_1_64_fu_394_p1 = reg_129;

assign l_valX_m_Val_1_65_fu_469_p1 = reg_129;

assign l_valX_m_Val_1_66_fu_544_p1 = reg_129;

assign l_valX_m_Val_1_67_fu_619_p1 = reg_129;

assign l_valX_m_Val_1_68_fu_694_p1 = reg_129;

assign l_valX_m_Val_1_69_fu_769_p1 = reg_129;

assign l_valX_m_Val_1_70_fu_844_p1 = reg_129;

assign l_valX_m_Val_1_71_fu_919_p1 = reg_129;

assign l_valX_m_Val_1_72_fu_994_p1 = reg_129;

assign l_valX_m_Val_1_73_fu_1069_p1 = reg_129;

assign l_valX_m_Val_1_74_fu_1144_p1 = reg_129;

assign l_valX_m_Val_1_75_fu_1219_p1 = reg_129;

assign l_valX_m_Val_1_fu_181_p1 = reg_129;

assign l_valX_m_Val_2_61_fu_232_p1 = reg_133;

assign l_valX_m_Val_2_62_fu_278_p1 = reg_133;

assign l_valX_m_Val_2_63_fu_324_p1 = reg_133;

assign l_valX_m_Val_2_64_fu_399_p1 = reg_133;

assign l_valX_m_Val_2_65_fu_474_p1 = reg_133;

assign l_valX_m_Val_2_66_fu_549_p1 = reg_133;

assign l_valX_m_Val_2_67_fu_624_p1 = reg_133;

assign l_valX_m_Val_2_68_fu_699_p1 = reg_133;

assign l_valX_m_Val_2_69_fu_774_p1 = reg_133;

assign l_valX_m_Val_2_70_fu_849_p1 = reg_133;

assign l_valX_m_Val_2_71_fu_924_p1 = reg_133;

assign l_valX_m_Val_2_72_fu_999_p1 = reg_133;

assign l_valX_m_Val_2_73_fu_1074_p1 = reg_133;

assign l_valX_m_Val_2_74_fu_1149_p1 = reg_133;

assign l_valX_m_Val_2_75_fu_1224_p1 = reg_133;

assign l_valX_m_Val_2_fu_186_p1 = reg_133;

assign l_valX_m_Val_3_61_fu_237_p1 = reg_137;

assign l_valX_m_Val_3_62_fu_283_p1 = reg_137;

assign l_valX_m_Val_3_63_fu_329_p1 = reg_137;

assign l_valX_m_Val_3_64_fu_404_p1 = reg_137;

assign l_valX_m_Val_3_65_fu_479_p1 = reg_137;

assign l_valX_m_Val_3_66_fu_554_p1 = reg_137;

assign l_valX_m_Val_3_67_fu_629_p1 = reg_137;

assign l_valX_m_Val_3_68_fu_704_p1 = reg_137;

assign l_valX_m_Val_3_69_fu_779_p1 = reg_137;

assign l_valX_m_Val_3_70_fu_854_p1 = reg_137;

assign l_valX_m_Val_3_71_fu_929_p1 = reg_137;

assign l_valX_m_Val_3_72_fu_1004_p1 = reg_137;

assign l_valX_m_Val_3_73_fu_1079_p1 = reg_137;

assign l_valX_m_Val_3_74_fu_1154_p1 = reg_137;

assign l_valX_m_Val_3_75_fu_1229_p1 = reg_137;

assign l_valX_m_Val_3_fu_191_p1 = reg_137;

assign p_Result_10_fu_377_p5 = {{{{bitcast_ln123_885_fu_373_p1}, {bitcast_ln123_884_fu_369_p1}}, {bitcast_ln123_883_fu_365_p1}}, {bitcast_ln123_fu_361_p1}};

assign p_Result_14_10_fu_1127_p5 = {{{{bitcast_ln123_925_fu_1123_p1}, {bitcast_ln123_924_fu_1119_p1}}, {bitcast_ln123_923_fu_1115_p1}}, {bitcast_ln123_922_fu_1111_p1}};

assign p_Result_14_11_fu_1202_p5 = {{{{bitcast_ln123_929_fu_1198_p1}, {bitcast_ln123_928_fu_1194_p1}}, {bitcast_ln123_927_fu_1190_p1}}, {bitcast_ln123_926_fu_1186_p1}};

assign p_Result_14_12_fu_1269_p5 = {{{{bitcast_ln123_933_fu_1265_p1}, {bitcast_ln123_932_fu_1261_p1}}, {bitcast_ln123_931_fu_1257_p1}}, {bitcast_ln123_930_fu_1253_p1}};

assign p_Result_14_13_fu_1298_p5 = {{{{bitcast_ln123_937_fu_1294_p1}, {bitcast_ln123_936_fu_1290_p1}}, {bitcast_ln123_935_fu_1286_p1}}, {bitcast_ln123_934_fu_1282_p1}};

assign p_Result_14_14_fu_1327_p5 = {{{{bitcast_ln123_941_fu_1323_p1}, {bitcast_ln123_940_fu_1319_p1}}, {bitcast_ln123_939_fu_1315_p1}}, {bitcast_ln123_938_fu_1311_p1}};

assign p_Result_14_1_fu_452_p5 = {{{{bitcast_ln123_889_fu_448_p1}, {bitcast_ln123_888_fu_444_p1}}, {bitcast_ln123_887_fu_440_p1}}, {bitcast_ln123_886_fu_436_p1}};

assign p_Result_14_2_fu_527_p5 = {{{{bitcast_ln123_893_fu_523_p1}, {bitcast_ln123_892_fu_519_p1}}, {bitcast_ln123_891_fu_515_p1}}, {bitcast_ln123_890_fu_511_p1}};

assign p_Result_14_3_fu_602_p5 = {{{{bitcast_ln123_897_fu_598_p1}, {bitcast_ln123_896_fu_594_p1}}, {bitcast_ln123_895_fu_590_p1}}, {bitcast_ln123_894_fu_586_p1}};

assign p_Result_14_4_fu_677_p5 = {{{{bitcast_ln123_901_fu_673_p1}, {bitcast_ln123_900_fu_669_p1}}, {bitcast_ln123_899_fu_665_p1}}, {bitcast_ln123_898_fu_661_p1}};

assign p_Result_14_5_fu_752_p5 = {{{{bitcast_ln123_905_fu_748_p1}, {bitcast_ln123_904_fu_744_p1}}, {bitcast_ln123_903_fu_740_p1}}, {bitcast_ln123_902_fu_736_p1}};

assign p_Result_14_6_fu_827_p5 = {{{{bitcast_ln123_909_fu_823_p1}, {bitcast_ln123_908_fu_819_p1}}, {bitcast_ln123_907_fu_815_p1}}, {bitcast_ln123_906_fu_811_p1}};

assign p_Result_14_7_fu_902_p5 = {{{{bitcast_ln123_913_fu_898_p1}, {bitcast_ln123_912_fu_894_p1}}, {bitcast_ln123_911_fu_890_p1}}, {bitcast_ln123_910_fu_886_p1}};

assign p_Result_14_8_fu_977_p5 = {{{{bitcast_ln123_917_fu_973_p1}, {bitcast_ln123_916_fu_969_p1}}, {bitcast_ln123_915_fu_965_p1}}, {bitcast_ln123_914_fu_961_p1}};

assign p_Result_14_9_fu_1052_p5 = {{{{bitcast_ln123_921_fu_1048_p1}, {bitcast_ln123_920_fu_1044_p1}}, {bitcast_ln123_919_fu_1040_p1}}, {bitcast_ln123_918_fu_1036_p1}};

assign p_Result_14_s_fu_1356_p5 = {{{{bitcast_ln123_945_fu_1352_p1}, {bitcast_ln123_944_fu_1348_p1}}, {bitcast_ln123_943_fu_1344_p1}}, {bitcast_ln123_942_fu_1340_p1}};

assign start_out = real_start;

assign trunc_ln674_125_fu_173_p1 = str_in23_dout[31:0];

assign trunc_ln674_126_fu_215_p1 = str_in12_dout[31:0];

assign trunc_ln674_127_fu_219_p1 = str_in23_dout[31:0];

assign trunc_ln674_128_fu_261_p1 = str_in12_dout[31:0];

assign trunc_ln674_129_fu_265_p1 = str_in23_dout[31:0];

assign trunc_ln674_130_fu_307_p1 = str_in12_dout[31:0];

assign trunc_ln674_131_fu_311_p1 = str_in23_dout[31:0];

assign trunc_ln674_132_fu_353_p1 = str_in12_dout[31:0];

assign trunc_ln674_133_fu_357_p1 = str_in23_dout[31:0];

assign trunc_ln674_134_fu_428_p1 = str_in12_dout[31:0];

assign trunc_ln674_135_fu_432_p1 = str_in23_dout[31:0];

assign trunc_ln674_136_fu_503_p1 = str_in12_dout[31:0];

assign trunc_ln674_137_fu_507_p1 = str_in23_dout[31:0];

assign trunc_ln674_138_fu_578_p1 = str_in12_dout[31:0];

assign trunc_ln674_139_fu_582_p1 = str_in23_dout[31:0];

assign trunc_ln674_140_fu_653_p1 = str_in12_dout[31:0];

assign trunc_ln674_141_fu_657_p1 = str_in23_dout[31:0];

assign trunc_ln674_142_fu_728_p1 = str_in12_dout[31:0];

assign trunc_ln674_143_fu_732_p1 = str_in23_dout[31:0];

assign trunc_ln674_144_fu_803_p1 = str_in12_dout[31:0];

assign trunc_ln674_145_fu_807_p1 = str_in23_dout[31:0];

assign trunc_ln674_146_fu_878_p1 = str_in12_dout[31:0];

assign trunc_ln674_147_fu_882_p1 = str_in23_dout[31:0];

assign trunc_ln674_148_fu_953_p1 = str_in12_dout[31:0];

assign trunc_ln674_149_fu_957_p1 = str_in23_dout[31:0];

assign trunc_ln674_150_fu_1028_p1 = str_in12_dout[31:0];

assign trunc_ln674_151_fu_1032_p1 = str_in23_dout[31:0];

assign trunc_ln674_152_fu_1103_p1 = str_in12_dout[31:0];

assign trunc_ln674_153_fu_1107_p1 = str_in23_dout[31:0];

assign trunc_ln674_154_fu_1178_p1 = str_in12_dout[31:0];

assign trunc_ln674_155_fu_1182_p1 = str_in23_dout[31:0];

assign trunc_ln674_fu_169_p1 = str_in12_dout[31:0];

endmodule //krnl_lstm_mul_float_4u_unsigned_int_float_s
