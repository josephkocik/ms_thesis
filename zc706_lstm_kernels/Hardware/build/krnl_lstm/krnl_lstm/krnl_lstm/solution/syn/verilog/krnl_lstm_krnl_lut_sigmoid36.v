// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_lstm_krnl_lut_sigmoid36 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] sigmoid_lut_address0;
reg    sigmoid_lut_ce0;
wire   [31:0] sigmoid_lut_q0;
wire   [63:0] grp_fu_169_p1;
reg   [63:0] conv1_i_reg_1153;
wire    ap_CS_fsm_state2;
wire   [0:0] or_ln23_fu_398_p2;
reg   [0:0] or_ln23_reg_1188;
wire    ap_CS_fsm_state4;
wire   [0:0] or_ln23_1_fu_433_p2;
reg   [0:0] or_ln23_1_reg_1203;
wire   [0:0] and_ln113_fu_457_p2;
reg   [0:0] and_ln113_reg_1236;
wire   [0:0] or_ln113_fu_463_p2;
reg   [0:0] or_ln113_reg_1241;
wire   [0:0] and_ln101_fu_490_p2;
reg   [0:0] and_ln101_reg_1246;
wire    ap_CS_fsm_state6;
wire   [0:0] or_ln101_fu_496_p2;
reg   [0:0] or_ln101_reg_1251;
wire   [0:0] and_ln83_fu_528_p2;
reg   [0:0] and_ln83_reg_1256;
wire    ap_CS_fsm_state8;
wire   [0:0] or_ln83_fu_534_p2;
reg   [0:0] or_ln83_reg_1261;
wire   [0:0] and_ln71_fu_561_p2;
reg   [0:0] and_ln71_reg_1266;
wire    ap_CS_fsm_state10;
wire   [0:0] or_ln71_fu_567_p2;
reg   [0:0] or_ln71_reg_1271;
wire   [0:0] and_ln53_fu_599_p2;
reg   [0:0] and_ln53_reg_1276;
wire    ap_CS_fsm_state12;
wire   [0:0] or_ln53_fu_605_p2;
reg   [0:0] or_ln53_reg_1281;
wire   [0:0] and_ln41_fu_632_p2;
reg   [0:0] and_ln41_reg_1286;
wire    ap_CS_fsm_state14;
wire   [0:0] or_ln41_fu_638_p2;
reg   [0:0] or_ln41_reg_1291;
wire   [0:0] and_ln29_fu_660_p2;
reg   [0:0] and_ln29_reg_1296;
wire    ap_CS_fsm_state16;
wire   [0:0] or_ln29_fu_666_p2;
reg   [0:0] or_ln29_reg_1301;
wire   [2:0] lut_i_32_fu_751_p3;
reg   [2:0] lut_i_32_reg_1306;
wire    ap_CS_fsm_state18;
wire   [0:0] grp_fu_239_p2;
reg   [0:0] tmp_137_reg_1311;
wire   [0:0] grp_fu_244_p2;
reg   [0:0] tmp_138_reg_1316;
wire   [0:0] and_ln47_fu_764_p2;
reg   [0:0] and_ln47_reg_1321;
wire   [0:0] grp_fu_259_p2;
reg   [0:0] tmp_145_reg_1327;
wire   [0:0] grp_fu_264_p2;
reg   [0:0] tmp_146_reg_1332;
wire   [0:0] and_ln59_fu_775_p2;
reg   [0:0] and_ln59_reg_1337;
wire   [0:0] grp_fu_279_p2;
reg   [0:0] tmp_149_reg_1343;
wire   [0:0] grp_fu_284_p2;
reg   [0:0] tmp_150_reg_1348;
wire   [0:0] and_ln65_fu_791_p2;
reg   [0:0] and_ln65_reg_1353;
wire   [0:0] grp_fu_294_p2;
reg   [0:0] tmp_157_reg_1359;
wire   [0:0] grp_fu_299_p2;
reg   [0:0] tmp_158_reg_1364;
wire   [0:0] and_ln77_fu_802_p2;
reg   [0:0] and_ln77_reg_1369;
wire   [0:0] grp_fu_314_p2;
reg   [0:0] tmp_165_reg_1375;
wire   [0:0] grp_fu_319_p2;
reg   [0:0] tmp_166_reg_1380;
wire   [0:0] and_ln89_fu_813_p2;
reg   [0:0] and_ln89_reg_1385;
wire   [0:0] grp_fu_334_p2;
reg   [0:0] tmp_169_reg_1391;
wire   [0:0] grp_fu_339_p2;
reg   [0:0] tmp_170_reg_1396;
wire   [0:0] and_ln95_fu_829_p2;
reg   [0:0] and_ln95_reg_1401;
wire   [0:0] grp_fu_349_p2;
reg   [0:0] tmp_177_reg_1407;
wire   [0:0] grp_fu_354_p2;
reg   [0:0] tmp_178_reg_1412;
wire   [0:0] and_ln107_fu_840_p2;
reg   [0:0] and_ln107_reg_1417;
wire   [4:0] lut_i_40_fu_1018_p3;
reg   [4:0] lut_i_40_reg_1423;
wire    ap_CS_fsm_state19;
wire   [4:0] lut_i_45_fu_1132_p3;
reg   [4:0] lut_i_45_reg_1428;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [31:0] zext_ln13_4_fu_1139_p1;
reg    ap_block_state1;
reg   [31:0] grp_fu_173_p1;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state17;
reg   [31:0] grp_fu_178_p1;
reg   [63:0] grp_fu_202_p1;
wire    ap_CS_fsm_state15;
reg   [63:0] grp_fu_208_p1;
reg   [63:0] grp_fu_213_p1;
reg   [63:0] grp_fu_231_p1;
wire   [31:0] bitcast_ln23_fu_369_p1;
wire   [7:0] tmp_fu_372_p4;
wire   [22:0] trunc_ln23_fu_382_p1;
wire   [0:0] icmp_ln23_1_fu_392_p2;
wire   [0:0] icmp_ln23_fu_386_p2;
wire   [63:0] bitcast_ln23_1_fu_404_p1;
wire   [10:0] tmp_123_fu_407_p4;
wire   [51:0] trunc_ln23_1_fu_417_p1;
wire   [0:0] icmp_ln23_3_fu_427_p2;
wire   [0:0] icmp_ln23_2_fu_421_p2;
wire   [0:0] grp_fu_202_p2;
wire   [0:0] grp_fu_173_p2;
wire   [0:0] and_ln110_1_fu_439_p2;
wire   [0:0] and_ln110_2_fu_445_p2;
wire   [0:0] grp_fu_178_p2;
wire   [0:0] and_ln110_fu_451_p2;
wire   [0:0] and_ln98_1_fu_469_p2;
wire   [0:0] and_ln98_2_fu_474_p2;
wire   [0:0] grp_fu_208_p2;
wire   [0:0] and_ln101_1_fu_485_p2;
wire   [0:0] grp_fu_213_p2;
wire   [0:0] and_ln98_fu_479_p2;
wire   [0:0] and_ln80_1_fu_502_p2;
wire   [0:0] and_ln80_2_fu_507_p2;
wire   [0:0] and_ln83_1_fu_518_p2;
wire   [0:0] and_ln83_2_fu_523_p2;
wire   [0:0] and_ln80_fu_512_p2;
wire   [0:0] and_ln68_1_fu_540_p2;
wire   [0:0] and_ln68_2_fu_545_p2;
wire   [0:0] and_ln71_1_fu_556_p2;
wire   [0:0] and_ln68_fu_550_p2;
wire   [0:0] and_ln50_1_fu_573_p2;
wire   [0:0] and_ln50_2_fu_578_p2;
wire   [0:0] and_ln53_1_fu_589_p2;
wire   [0:0] and_ln53_2_fu_594_p2;
wire   [0:0] and_ln50_fu_583_p2;
wire   [0:0] and_ln38_1_fu_611_p2;
wire   [0:0] and_ln38_2_fu_616_p2;
wire   [0:0] and_ln41_1_fu_627_p2;
wire   [0:0] and_ln38_fu_621_p2;
wire   [0:0] and_ln26_1_fu_644_p2;
wire   [0:0] and_ln29_1_fu_655_p2;
wire   [0:0] grp_fu_231_p2;
wire   [0:0] and_ln26_fu_649_p2;
wire   [0:0] and_ln23_fu_672_p2;
wire   [0:0] and_ln23_1_fu_677_p2;
wire   [0:0] lut_i_fu_682_p2;
wire   [1:0] select_ln29_fu_692_p3;
wire   [1:0] zext_ln13_fu_688_p1;
wire   [1:0] lut_i_31_fu_699_p3;
wire   [0:0] and_ln32_1_fu_710_p2;
wire   [0:0] and_ln35_1_fu_721_p2;
wire   [0:0] and_ln35_2_fu_726_p2;
wire   [0:0] and_ln35_fu_731_p2;
wire   [0:0] and_ln32_fu_715_p2;
wire   [0:0] or_ln35_fu_745_p2;
wire   [2:0] select_ln35_fu_737_p3;
wire   [2:0] zext_ln13_1_fu_706_p1;
wire   [0:0] grp_fu_249_p2;
wire   [0:0] and_ln47_1_fu_759_p2;
wire   [0:0] grp_fu_254_p2;
wire   [0:0] grp_fu_269_p2;
wire   [0:0] and_ln59_1_fu_770_p2;
wire   [0:0] grp_fu_274_p2;
wire   [0:0] grp_fu_289_p2;
wire   [0:0] grp_fu_192_p2;
wire   [0:0] and_ln65_1_fu_781_p2;
wire   [0:0] and_ln65_2_fu_786_p2;
wire   [0:0] grp_fu_304_p2;
wire   [0:0] and_ln77_1_fu_797_p2;
wire   [0:0] grp_fu_309_p2;
wire   [0:0] grp_fu_324_p2;
wire   [0:0] and_ln89_1_fu_808_p2;
wire   [0:0] grp_fu_329_p2;
wire   [0:0] grp_fu_344_p2;
wire   [0:0] grp_fu_197_p2;
wire   [0:0] and_ln95_1_fu_819_p2;
wire   [0:0] and_ln95_2_fu_824_p2;
wire   [0:0] grp_fu_359_p2;
wire   [0:0] and_ln107_1_fu_835_p2;
wire   [0:0] grp_fu_364_p2;
wire   [2:0] select_ln41_fu_846_p3;
wire   [2:0] lut_i_33_fu_853_p3;
wire   [0:0] and_ln44_1_fu_863_p2;
wire   [0:0] and_ln44_fu_867_p2;
wire   [0:0] or_ln47_fu_879_p2;
wire   [3:0] select_ln47_fu_872_p3;
wire   [3:0] zext_ln13_2_fu_859_p1;
wire   [3:0] select_ln53_fu_892_p3;
wire   [3:0] lut_i_34_fu_884_p3;
wire   [0:0] and_ln56_1_fu_906_p2;
wire   [0:0] and_ln56_fu_910_p2;
wire   [0:0] or_ln59_fu_922_p2;
wire   [3:0] select_ln59_fu_915_p3;
wire   [3:0] lut_i_35_fu_899_p3;
wire   [0:0] and_ln62_1_fu_935_p2;
wire   [0:0] and_ln62_fu_939_p2;
wire   [0:0] or_ln65_fu_951_p2;
wire   [3:0] select_ln65_fu_944_p3;
wire   [3:0] lut_i_36_fu_927_p3;
wire   [3:0] lut_i_37_fu_956_p3;
wire   [4:0] select_ln71_fu_968_p3;
wire   [4:0] zext_ln13_3_fu_964_p1;
wire   [0:0] and_ln74_1_fu_982_p2;
wire   [0:0] and_ln74_fu_986_p2;
wire   [0:0] or_ln77_fu_998_p2;
wire   [4:0] select_ln77_fu_991_p3;
wire   [4:0] lut_i_38_fu_975_p3;
wire   [4:0] select_ln83_fu_1011_p3;
wire   [4:0] lut_i_39_fu_1003_p3;
wire   [0:0] and_ln86_1_fu_1025_p2;
wire   [0:0] and_ln86_fu_1029_p2;
wire   [0:0] or_ln89_fu_1041_p2;
wire   [4:0] select_ln89_fu_1034_p3;
wire   [0:0] and_ln92_1_fu_1053_p2;
wire   [0:0] and_ln92_fu_1057_p2;
wire   [0:0] or_ln95_fu_1069_p2;
wire   [4:0] select_ln95_fu_1062_p3;
wire   [4:0] lut_i_41_fu_1046_p3;
wire   [4:0] select_ln101_fu_1082_p3;
wire   [4:0] lut_i_42_fu_1074_p3;
wire   [0:0] and_ln104_1_fu_1096_p2;
wire   [0:0] and_ln104_fu_1100_p2;
wire   [0:0] or_ln107_fu_1112_p2;
wire   [4:0] select_ln107_fu_1105_p3;
wire   [4:0] lut_i_43_fu_1089_p3;
wire   [4:0] select_ln113_fu_1125_p3;
wire   [4:0] lut_i_44_fu_1117_p3;
reg    grp_fu_169_ce;
reg   [4:0] grp_fu_173_opcode;
reg   [4:0] grp_fu_178_opcode;
reg   [4:0] grp_fu_202_opcode;
reg   [4:0] grp_fu_208_opcode;
reg   [4:0] grp_fu_213_opcode;
reg   [4:0] grp_fu_231_opcode;
wire    ap_CS_fsm_state22;
reg   [21:0] ap_NS_fsm;
reg    ap_condition_153;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 22'd1;
end

krnl_lstm_krnl_lut_sigmoid34_sigmoid_lut98 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
sigmoid_lut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sigmoid_lut_address0),
    .ce0(sigmoid_lut_ce0),
    .q0(sigmoid_lut_q0)
);

krnl_lstm_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1222(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .ce(grp_fu_169_ce),
    .dout(grp_fu_169_p1)
);

krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1223(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .din1(grp_fu_173_p1),
    .ce(1'b1),
    .opcode(grp_fu_173_opcode),
    .dout(grp_fu_173_p2)
);

krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1224(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .din1(grp_fu_178_p1),
    .ce(1'b1),
    .opcode(grp_fu_178_opcode),
    .dout(grp_fu_178_p2)
);

krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1225(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_192_p2)
);

krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1226(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .din1(32'd1082130432),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_197_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1227(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(grp_fu_202_p1),
    .ce(1'b1),
    .opcode(grp_fu_202_opcode),
    .dout(grp_fu_202_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1228(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(grp_fu_208_p1),
    .ce(1'b1),
    .opcode(grp_fu_208_opcode),
    .dout(grp_fu_208_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1229(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(grp_fu_213_p1),
    .ce(1'b1),
    .opcode(grp_fu_213_opcode),
    .dout(grp_fu_213_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1230(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(grp_fu_231_p1),
    .ce(1'b1),
    .opcode(grp_fu_231_opcode),
    .dout(grp_fu_231_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1231(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13837760215058586009),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_239_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1232(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13836859495133111910),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_244_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1233(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13836859495133111910),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_249_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1234(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13835958775207637811),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_254_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1235(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13833256615431215512),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_259_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1236(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13831455175580267312),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_264_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1237(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13831455175580267312),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_269_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1238(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13828753015803845016),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_274_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1239(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13828753015803845016),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_279_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1240(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13824249416176474512),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_284_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1241(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd13824249416176474512),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_289_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1242(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4605380978949069216),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_294_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1243(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4608083138725491508),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_299_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1244(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4608083138725491508),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_304_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1245(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4609884578576439708),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_309_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1246(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4612586738352862004),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_314_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1247(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4613487458278336104),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_319_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1248(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4613487458278336104),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_324_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1249(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4614388178203810204),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_329_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1250(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4614388178203810204),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_334_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1251(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4615288898129284304),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_339_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1252(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4615288898129284304),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_344_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1253(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4617090337980232500),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_349_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1254(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4617540697942969550),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_354_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1255(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4617540697942969550),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_359_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1256(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_reg_1153),
    .din1(64'd4617991057905706600),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_364_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        and_ln101_reg_1246 <= and_ln101_fu_490_p2;
        or_ln101_reg_1251 <= or_ln101_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        and_ln107_reg_1417 <= and_ln107_fu_840_p2;
        tmp_177_reg_1407 <= grp_fu_349_p2;
        tmp_178_reg_1412 <= grp_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln113_reg_1236 <= and_ln113_fu_457_p2;
        or_ln113_reg_1241 <= or_ln113_fu_463_p2;
        or_ln23_1_reg_1203 <= or_ln23_1_fu_433_p2;
        or_ln23_reg_1188 <= or_ln23_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state16) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0))) begin
        and_ln29_reg_1296 <= and_ln29_fu_660_p2;
        or_ln29_reg_1301 <= or_ln29_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state14) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0))) begin
        and_ln41_reg_1286 <= and_ln41_fu_632_p2;
        or_ln41_reg_1291 <= or_ln41_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state18) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0))) begin
        and_ln47_reg_1321 <= and_ln47_fu_764_p2;
        tmp_137_reg_1311 <= grp_fu_239_p2;
        tmp_138_reg_1316 <= grp_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (or_ln71_reg_1271 == 1'd0))) begin
        and_ln53_reg_1276 <= and_ln53_fu_599_p2;
        or_ln53_reg_1281 <= or_ln53_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state18) & (or_ln71_reg_1271 == 1'd0))) begin
        and_ln59_reg_1337 <= and_ln59_fu_775_p2;
        and_ln65_reg_1353 <= and_ln65_fu_791_p2;
        tmp_145_reg_1327 <= grp_fu_259_p2;
        tmp_146_reg_1332 <= grp_fu_264_p2;
        tmp_149_reg_1343 <= grp_fu_279_p2;
        tmp_150_reg_1348 <= grp_fu_284_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        and_ln71_reg_1266 <= and_ln71_fu_561_p2;
        or_ln71_reg_1271 <= or_ln71_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        and_ln77_reg_1369 <= and_ln77_fu_802_p2;
        tmp_157_reg_1359 <= grp_fu_294_p2;
        tmp_158_reg_1364 <= grp_fu_299_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        and_ln83_reg_1256 <= and_ln83_fu_528_p2;
        or_ln83_reg_1261 <= or_ln83_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        and_ln89_reg_1385 <= and_ln89_fu_813_p2;
        and_ln95_reg_1401 <= and_ln95_fu_829_p2;
        tmp_165_reg_1375 <= grp_fu_314_p2;
        tmp_166_reg_1380 <= grp_fu_319_p2;
        tmp_169_reg_1391 <= grp_fu_334_p2;
        tmp_170_reg_1396 <= grp_fu_339_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv1_i_reg_1153 <= grp_fu_169_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state18) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0))) begin
        lut_i_32_reg_1306 <= lut_i_32_fu_751_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        lut_i_40_reg_1423 <= lut_i_40_fu_1018_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        lut_i_45_reg_1428 <= lut_i_45_fu_1132_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_169_ce = 1'b1;
    end else begin
        grp_fu_169_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln29_reg_1301 == 1'd0) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_173_opcode = 5'd3;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (or_ln71_reg_1271 == 1'd0)))) begin
        grp_fu_173_opcode = 5'd4;
    end else begin
        grp_fu_173_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_173_p1 = 32'd3233808384;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_173_p1 = 32'd3229614080;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_173_p1 = 32'd3221225472;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_173_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_173_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_173_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_173_p1 = 32'd1086324736;
    end else begin
        grp_fu_173_p1 = 'bx;
    end
end

always @ (*) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0))) begin
        grp_fu_178_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (or_ln71_reg_1271 == 1'd0)))) begin
        grp_fu_178_opcode = 5'd3;
    end else begin
        grp_fu_178_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_178_p1 = 32'd3229614080;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_178_p1 = 32'd3221225472;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_178_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_178_p1 = 32'd1086324736;
    end else begin
        grp_fu_178_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln29_reg_1301 == 1'd0) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_202_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (or_ln71_reg_1271 == 1'd0)))) begin
        grp_fu_202_opcode = 5'd3;
    end else begin
        grp_fu_202_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_202_p1 = 64'd13841363094760482406;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_202_p1 = 64'd13838660934984060108;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_202_p1 = 64'd13835958775207637811;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_202_p1 = 64'd4600877379321698720;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_202_p1 = 64'd4609884578576439708;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_202_p1 = 64'd4616639978017495450;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_202_p1 = 64'd4617991057905706600;
    end else begin
        grp_fu_202_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (or_ln71_reg_1271 == 1'd0)))) begin
        grp_fu_208_opcode = 5'd4;
    end else if ((((or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_208_opcode = 5'd3;
    end else begin
        grp_fu_208_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_208_p1 = 64'd13840462374835008307;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_208_p1 = 64'd13840912734797745357;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_208_p1 = 64'd13838660934984060108;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_208_p1 = 64'd13833256615431215512;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_208_p1 = 64'd4600877379321698720;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_208_p1 = 64'd4612586738352862004;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_208_p1 = 64'd4616639978017495450;
    end else begin
        grp_fu_208_p1 = 'bx;
    end
end

always @ (*) begin
    if (((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0))) begin
        grp_fu_213_opcode = 5'd3;
    end else if ((((or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0)) | ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_213_opcode = 5'd4;
    end else begin
        grp_fu_213_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_213_p1 = 64'd13840012014872271258;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_213_p1 = 64'd13840912734797745357;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_213_p1 = 64'd13837760215058586009;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_213_p1 = 64'd4605380978949069216;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_213_p1 = 64'd4617090337980232500;
    end else begin
        grp_fu_213_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_153)) begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_fu_231_opcode = 5'd3;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_fu_231_opcode = 5'd4;
        end else begin
            grp_fu_231_opcode = 'bx;
        end
    end else begin
        grp_fu_231_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_231_p1 = 64'd13840012014872271258;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_231_p1 = 64'd13840462374835008307;
    end else begin
        grp_fu_231_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        sigmoid_lut_ce0 = 1'b1;
    end else begin
        sigmoid_lut_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln101_1_fu_485_p2 = (or_ln23_1_reg_1203 & grp_fu_208_p2);

assign and_ln101_fu_490_p2 = (grp_fu_213_p2 & and_ln101_1_fu_485_p2);

assign and_ln104_1_fu_1096_p2 = (tmp_177_reg_1407 & or_ln23_1_reg_1203);

assign and_ln104_fu_1100_p2 = (tmp_178_reg_1412 & and_ln104_1_fu_1096_p2);

assign and_ln107_1_fu_835_p2 = (or_ln23_1_reg_1203 & grp_fu_359_p2);

assign and_ln107_fu_840_p2 = (grp_fu_364_p2 & and_ln107_1_fu_835_p2);

assign and_ln110_1_fu_439_p2 = (or_ln23_1_fu_433_p2 & grp_fu_202_p2);

assign and_ln110_2_fu_445_p2 = (or_ln23_fu_398_p2 & grp_fu_173_p2);

assign and_ln110_fu_451_p2 = (and_ln110_2_fu_445_p2 & and_ln110_1_fu_439_p2);

assign and_ln113_fu_457_p2 = (or_ln23_fu_398_p2 & grp_fu_178_p2);

assign and_ln23_1_fu_677_p2 = (or_ln23_1_reg_1203 & grp_fu_202_p2);

assign and_ln23_fu_672_p2 = (or_ln23_reg_1188 & grp_fu_173_p2);

assign and_ln26_1_fu_644_p2 = (or_ln23_1_reg_1203 & grp_fu_202_p2);

assign and_ln26_fu_649_p2 = (grp_fu_208_p2 & and_ln26_1_fu_644_p2);

assign and_ln29_1_fu_655_p2 = (or_ln23_1_reg_1203 & grp_fu_213_p2);

assign and_ln29_fu_660_p2 = (grp_fu_231_p2 & and_ln29_1_fu_655_p2);

assign and_ln32_1_fu_710_p2 = (or_ln23_1_reg_1203 & grp_fu_208_p2);

assign and_ln32_fu_715_p2 = (grp_fu_213_p2 & and_ln32_1_fu_710_p2);

assign and_ln35_1_fu_721_p2 = (or_ln23_1_reg_1203 & grp_fu_231_p2);

assign and_ln35_2_fu_726_p2 = (or_ln23_reg_1188 & grp_fu_178_p2);

assign and_ln35_fu_731_p2 = (and_ln35_2_fu_726_p2 & and_ln35_1_fu_721_p2);

assign and_ln38_1_fu_611_p2 = (or_ln23_reg_1188 & grp_fu_173_p2);

assign and_ln38_2_fu_616_p2 = (or_ln23_1_reg_1203 & grp_fu_202_p2);

assign and_ln38_fu_621_p2 = (and_ln38_2_fu_616_p2 & and_ln38_1_fu_611_p2);

assign and_ln41_1_fu_627_p2 = (or_ln23_1_reg_1203 & grp_fu_208_p2);

assign and_ln41_fu_632_p2 = (grp_fu_213_p2 & and_ln41_1_fu_627_p2);

assign and_ln44_1_fu_863_p2 = (tmp_137_reg_1311 & or_ln23_1_reg_1203);

assign and_ln44_fu_867_p2 = (tmp_138_reg_1316 & and_ln44_1_fu_863_p2);

assign and_ln47_1_fu_759_p2 = (or_ln23_1_reg_1203 & grp_fu_249_p2);

assign and_ln47_fu_764_p2 = (grp_fu_254_p2 & and_ln47_1_fu_759_p2);

assign and_ln50_1_fu_573_p2 = (or_ln23_1_reg_1203 & grp_fu_202_p2);

assign and_ln50_2_fu_578_p2 = (or_ln23_reg_1188 & grp_fu_173_p2);

assign and_ln50_fu_583_p2 = (and_ln50_2_fu_578_p2 & and_ln50_1_fu_573_p2);

assign and_ln53_1_fu_589_p2 = (or_ln23_reg_1188 & grp_fu_178_p2);

assign and_ln53_2_fu_594_p2 = (or_ln23_1_reg_1203 & grp_fu_208_p2);

assign and_ln53_fu_599_p2 = (and_ln53_2_fu_594_p2 & and_ln53_1_fu_589_p2);

assign and_ln56_1_fu_906_p2 = (tmp_145_reg_1327 & or_ln23_1_reg_1203);

assign and_ln56_fu_910_p2 = (tmp_146_reg_1332 & and_ln56_1_fu_906_p2);

assign and_ln59_1_fu_770_p2 = (or_ln23_1_reg_1203 & grp_fu_269_p2);

assign and_ln59_fu_775_p2 = (grp_fu_274_p2 & and_ln59_1_fu_770_p2);

assign and_ln62_1_fu_935_p2 = (tmp_149_reg_1343 & or_ln23_1_reg_1203);

assign and_ln62_fu_939_p2 = (tmp_150_reg_1348 & and_ln62_1_fu_935_p2);

assign and_ln65_1_fu_781_p2 = (or_ln23_1_reg_1203 & grp_fu_289_p2);

assign and_ln65_2_fu_786_p2 = (or_ln23_reg_1188 & grp_fu_192_p2);

assign and_ln65_fu_791_p2 = (and_ln65_2_fu_786_p2 & and_ln65_1_fu_781_p2);

assign and_ln68_1_fu_540_p2 = (or_ln23_reg_1188 & grp_fu_173_p2);

assign and_ln68_2_fu_545_p2 = (or_ln23_1_reg_1203 & grp_fu_202_p2);

assign and_ln68_fu_550_p2 = (and_ln68_2_fu_545_p2 & and_ln68_1_fu_540_p2);

assign and_ln71_1_fu_556_p2 = (or_ln23_1_reg_1203 & grp_fu_208_p2);

assign and_ln71_fu_561_p2 = (grp_fu_213_p2 & and_ln71_1_fu_556_p2);

assign and_ln74_1_fu_982_p2 = (tmp_157_reg_1359 & or_ln23_1_reg_1203);

assign and_ln74_fu_986_p2 = (tmp_158_reg_1364 & and_ln74_1_fu_982_p2);

assign and_ln77_1_fu_797_p2 = (or_ln23_1_reg_1203 & grp_fu_304_p2);

assign and_ln77_fu_802_p2 = (grp_fu_309_p2 & and_ln77_1_fu_797_p2);

assign and_ln80_1_fu_502_p2 = (or_ln23_1_reg_1203 & grp_fu_202_p2);

assign and_ln80_2_fu_507_p2 = (or_ln23_reg_1188 & grp_fu_173_p2);

assign and_ln80_fu_512_p2 = (and_ln80_2_fu_507_p2 & and_ln80_1_fu_502_p2);

assign and_ln83_1_fu_518_p2 = (or_ln23_reg_1188 & grp_fu_178_p2);

assign and_ln83_2_fu_523_p2 = (or_ln23_1_reg_1203 & grp_fu_208_p2);

assign and_ln83_fu_528_p2 = (and_ln83_2_fu_523_p2 & and_ln83_1_fu_518_p2);

assign and_ln86_1_fu_1025_p2 = (tmp_165_reg_1375 & or_ln23_1_reg_1203);

assign and_ln86_fu_1029_p2 = (tmp_166_reg_1380 & and_ln86_1_fu_1025_p2);

assign and_ln89_1_fu_808_p2 = (or_ln23_1_reg_1203 & grp_fu_324_p2);

assign and_ln89_fu_813_p2 = (grp_fu_329_p2 & and_ln89_1_fu_808_p2);

assign and_ln92_1_fu_1053_p2 = (tmp_169_reg_1391 & or_ln23_1_reg_1203);

assign and_ln92_fu_1057_p2 = (tmp_170_reg_1396 & and_ln92_1_fu_1053_p2);

assign and_ln95_1_fu_819_p2 = (or_ln23_1_reg_1203 & grp_fu_344_p2);

assign and_ln95_2_fu_824_p2 = (or_ln23_reg_1188 & grp_fu_197_p2);

assign and_ln95_fu_829_p2 = (and_ln95_2_fu_824_p2 & and_ln95_1_fu_819_p2);

assign and_ln98_1_fu_469_p2 = (or_ln23_reg_1188 & grp_fu_173_p2);

assign and_ln98_2_fu_474_p2 = (or_ln23_1_reg_1203 & grp_fu_202_p2);

assign and_ln98_fu_479_p2 = (and_ln98_2_fu_474_p2 & and_ln98_1_fu_469_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_condition_153 = ((or_ln83_reg_1261 == 1'd0) & (or_ln101_reg_1251 == 1'd0) & (or_ln113_reg_1241 == 1'd0) & (or_ln41_reg_1291 == 1'd0) & (or_ln53_reg_1281 == 1'd0) & (or_ln71_reg_1271 == 1'd0));
end

assign ap_return = sigmoid_lut_q0;

assign bitcast_ln23_1_fu_404_p1 = conv1_i_reg_1153;

assign bitcast_ln23_fu_369_p1 = p_read;

assign icmp_ln23_1_fu_392_p2 = ((trunc_ln23_fu_382_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_2_fu_421_p2 = ((tmp_123_fu_407_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln23_3_fu_427_p2 = ((trunc_ln23_1_fu_417_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_386_p2 = ((tmp_fu_372_p4 != 8'd255) ? 1'b1 : 1'b0);

assign lut_i_31_fu_699_p3 = ((or_ln29_reg_1301[0:0] == 1'b1) ? select_ln29_fu_692_p3 : zext_ln13_fu_688_p1);

assign lut_i_32_fu_751_p3 = ((or_ln35_fu_745_p2[0:0] == 1'b1) ? select_ln35_fu_737_p3 : zext_ln13_1_fu_706_p1);

assign lut_i_33_fu_853_p3 = ((or_ln41_reg_1291[0:0] == 1'b1) ? select_ln41_fu_846_p3 : lut_i_32_reg_1306);

assign lut_i_34_fu_884_p3 = ((or_ln47_fu_879_p2[0:0] == 1'b1) ? select_ln47_fu_872_p3 : zext_ln13_2_fu_859_p1);

assign lut_i_35_fu_899_p3 = ((or_ln53_reg_1281[0:0] == 1'b1) ? select_ln53_fu_892_p3 : lut_i_34_fu_884_p3);

assign lut_i_36_fu_927_p3 = ((or_ln59_fu_922_p2[0:0] == 1'b1) ? select_ln59_fu_915_p3 : lut_i_35_fu_899_p3);

assign lut_i_37_fu_956_p3 = ((or_ln65_fu_951_p2[0:0] == 1'b1) ? select_ln65_fu_944_p3 : lut_i_36_fu_927_p3);

assign lut_i_38_fu_975_p3 = ((or_ln71_reg_1271[0:0] == 1'b1) ? select_ln71_fu_968_p3 : zext_ln13_3_fu_964_p1);

assign lut_i_39_fu_1003_p3 = ((or_ln77_fu_998_p2[0:0] == 1'b1) ? select_ln77_fu_991_p3 : lut_i_38_fu_975_p3);

assign lut_i_40_fu_1018_p3 = ((or_ln83_reg_1261[0:0] == 1'b1) ? select_ln83_fu_1011_p3 : lut_i_39_fu_1003_p3);

assign lut_i_41_fu_1046_p3 = ((or_ln89_fu_1041_p2[0:0] == 1'b1) ? select_ln89_fu_1034_p3 : lut_i_40_reg_1423);

assign lut_i_42_fu_1074_p3 = ((or_ln95_fu_1069_p2[0:0] == 1'b1) ? select_ln95_fu_1062_p3 : lut_i_41_fu_1046_p3);

assign lut_i_43_fu_1089_p3 = ((or_ln101_reg_1251[0:0] == 1'b1) ? select_ln101_fu_1082_p3 : lut_i_42_fu_1074_p3);

assign lut_i_44_fu_1117_p3 = ((or_ln107_fu_1112_p2[0:0] == 1'b1) ? select_ln107_fu_1105_p3 : lut_i_43_fu_1089_p3);

assign lut_i_45_fu_1132_p3 = ((or_ln113_reg_1241[0:0] == 1'b1) ? select_ln113_fu_1125_p3 : lut_i_44_fu_1117_p3);

assign lut_i_fu_682_p2 = (and_ln23_fu_672_p2 & and_ln23_1_fu_677_p2);

assign or_ln101_fu_496_p2 = (and_ln98_fu_479_p2 | and_ln101_fu_490_p2);

assign or_ln107_fu_1112_p2 = (and_ln107_reg_1417 | and_ln104_fu_1100_p2);

assign or_ln113_fu_463_p2 = (and_ln113_fu_457_p2 | and_ln110_fu_451_p2);

assign or_ln23_1_fu_433_p2 = (icmp_ln23_3_fu_427_p2 | icmp_ln23_2_fu_421_p2);

assign or_ln23_fu_398_p2 = (icmp_ln23_fu_386_p2 | icmp_ln23_1_fu_392_p2);

assign or_ln29_fu_666_p2 = (and_ln29_fu_660_p2 | and_ln26_fu_649_p2);

assign or_ln35_fu_745_p2 = (and_ln35_fu_731_p2 | and_ln32_fu_715_p2);

assign or_ln41_fu_638_p2 = (and_ln41_fu_632_p2 | and_ln38_fu_621_p2);

assign or_ln47_fu_879_p2 = (and_ln47_reg_1321 | and_ln44_fu_867_p2);

assign or_ln53_fu_605_p2 = (and_ln53_fu_599_p2 | and_ln50_fu_583_p2);

assign or_ln59_fu_922_p2 = (and_ln59_reg_1337 | and_ln56_fu_910_p2);

assign or_ln65_fu_951_p2 = (and_ln65_reg_1353 | and_ln62_fu_939_p2);

assign or_ln71_fu_567_p2 = (and_ln71_fu_561_p2 | and_ln68_fu_550_p2);

assign or_ln77_fu_998_p2 = (and_ln77_reg_1369 | and_ln74_fu_986_p2);

assign or_ln83_fu_534_p2 = (and_ln83_fu_528_p2 | and_ln80_fu_512_p2);

assign or_ln89_fu_1041_p2 = (and_ln89_reg_1385 | and_ln86_fu_1029_p2);

assign or_ln95_fu_1069_p2 = (and_ln95_reg_1401 | and_ln92_fu_1057_p2);

assign select_ln101_fu_1082_p3 = ((and_ln101_reg_1246[0:0] == 1'b1) ? 5'd27 : 5'd26);

assign select_ln107_fu_1105_p3 = ((and_ln107_reg_1417[0:0] == 1'b1) ? 5'd29 : 5'd28);

assign select_ln113_fu_1125_p3 = ((and_ln113_reg_1236[0:0] == 1'b1) ? 5'd31 : 5'd30);

assign select_ln29_fu_692_p3 = ((and_ln29_reg_1296[0:0] == 1'b1) ? 2'd3 : 2'd2);

assign select_ln35_fu_737_p3 = ((and_ln35_fu_731_p2[0:0] == 1'b1) ? 3'd5 : 3'd4);

assign select_ln41_fu_846_p3 = ((and_ln41_reg_1286[0:0] == 1'b1) ? 3'd7 : 3'd6);

assign select_ln47_fu_872_p3 = ((and_ln47_reg_1321[0:0] == 1'b1) ? 4'd9 : 4'd8);

assign select_ln53_fu_892_p3 = ((and_ln53_reg_1276[0:0] == 1'b1) ? 4'd11 : 4'd10);

assign select_ln59_fu_915_p3 = ((and_ln59_reg_1337[0:0] == 1'b1) ? 4'd13 : 4'd12);

assign select_ln65_fu_944_p3 = ((and_ln65_reg_1353[0:0] == 1'b1) ? 4'd15 : 4'd14);

assign select_ln71_fu_968_p3 = ((and_ln71_reg_1266[0:0] == 1'b1) ? 5'd17 : 5'd16);

assign select_ln77_fu_991_p3 = ((and_ln77_reg_1369[0:0] == 1'b1) ? 5'd19 : 5'd18);

assign select_ln83_fu_1011_p3 = ((and_ln83_reg_1256[0:0] == 1'b1) ? 5'd21 : 5'd20);

assign select_ln89_fu_1034_p3 = ((and_ln89_reg_1385[0:0] == 1'b1) ? 5'd23 : 5'd22);

assign select_ln95_fu_1062_p3 = ((and_ln95_reg_1401[0:0] == 1'b1) ? 5'd25 : 5'd24);

assign sigmoid_lut_address0 = zext_ln13_4_fu_1139_p1;

assign tmp_123_fu_407_p4 = {{bitcast_ln23_1_fu_404_p1[62:52]}};

assign tmp_fu_372_p4 = {{bitcast_ln23_fu_369_p1[30:23]}};

assign trunc_ln23_1_fu_417_p1 = bitcast_ln23_1_fu_404_p1[51:0];

assign trunc_ln23_fu_382_p1 = bitcast_ln23_fu_369_p1[22:0];

assign zext_ln13_1_fu_706_p1 = lut_i_31_fu_699_p3;

assign zext_ln13_2_fu_859_p1 = lut_i_33_fu_853_p3;

assign zext_ln13_3_fu_964_p1 = lut_i_37_fu_956_p3;

assign zext_ln13_4_fu_1139_p1 = lut_i_45_reg_1428;

assign zext_ln13_fu_688_p1 = lut_i_fu_682_p2;

endmodule //krnl_lstm_krnl_lut_sigmoid36
