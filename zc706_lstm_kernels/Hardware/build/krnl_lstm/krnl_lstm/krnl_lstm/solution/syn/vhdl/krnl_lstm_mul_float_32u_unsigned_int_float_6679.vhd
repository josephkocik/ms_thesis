-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_lstm_mul_float_32u_unsigned_int_float_6679 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    str_in12_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    str_in12_empty_n : IN STD_LOGIC;
    str_in12_read : OUT STD_LOGIC;
    str_in23_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    str_in23_empty_n : IN STD_LOGIC;
    str_in23_read : OUT STD_LOGIC;
    l_mulStr1_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    l_mulStr1_full_n : IN STD_LOGIC;
    l_mulStr1_write : OUT STD_LOGIC );
end;


architecture behav of krnl_lstm_mul_float_32u_unsigned_int_float_6679 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal str_in12_blk_n : STD_LOGIC;
    signal str_in23_blk_n : STD_LOGIC;
    signal l_mulStr1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_V_reg_664 : STD_LOGIC_VECTOR (1023 downto 0);
    signal tmp_V_2_reg_669 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_51_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_55_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_59_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_63_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_1009 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_67_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_1014 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_71_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_1019 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_75_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_6_reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_79_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_7_reg_1029 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_83_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_8_reg_1034 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_87_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_9_reg_1039 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_91_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_10_reg_1044 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_95_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_11_reg_1049 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_99_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_12_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_103_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_13_reg_1059 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_107_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_14_reg_1064 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_111_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_15_reg_1069 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_16_reg_1074 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_119_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_17_reg_1079 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_18_reg_1084 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_19_reg_1089 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_131_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_20_reg_1094 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_135_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_21_reg_1099 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_139_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_22_reg_1104 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_143_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_23_reg_1109 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_147_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_24_reg_1114 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_25_reg_1119 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_155_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_26_reg_1124 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_159_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_27_reg_1129 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_163_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_28_reg_1134 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_29_reg_1139 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_30_reg_1144 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_175_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_s_reg_1149 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_ready : STD_LOGIC;
    signal call_ret2_constructor_fu_41_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret2_constructor_fu_41_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_ready : STD_LOGIC;
    signal call_ret_constructor_fu_46_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_constructor_fu_46_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal l_val_V_372_fu_592_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_371_fu_589_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_370_fu_586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_369_fu_583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_368_fu_580_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_367_fu_577_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_366_fu_574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_365_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_364_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_363_fu_565_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_362_fu_562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_361_fu_559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_360_fu_556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_359_fu_553_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_358_fu_550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_357_fu_547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_356_fu_544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_355_fu_541_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_354_fu_538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_353_fu_535_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_352_fu_532_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_351_fu_529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_350_fu_526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_349_fu_523_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_348_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_347_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_346_fu_514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_345_fu_511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_344_fu_508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_343_fu_505_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_342_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_V_fu_499_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component krnl_lstm_constructor IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_val_V_read : IN STD_LOGIC_VECTOR (1023 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    call_ret2_constructor_fu_41 : component krnl_lstm_constructor
    port map (
        ap_ready => call_ret2_constructor_fu_41_ap_ready,
        p_val_V_read => tmp_V_reg_664,
        ap_return_0 => call_ret2_constructor_fu_41_ap_return_0,
        ap_return_1 => call_ret2_constructor_fu_41_ap_return_1,
        ap_return_2 => call_ret2_constructor_fu_41_ap_return_2,
        ap_return_3 => call_ret2_constructor_fu_41_ap_return_3,
        ap_return_4 => call_ret2_constructor_fu_41_ap_return_4,
        ap_return_5 => call_ret2_constructor_fu_41_ap_return_5,
        ap_return_6 => call_ret2_constructor_fu_41_ap_return_6,
        ap_return_7 => call_ret2_constructor_fu_41_ap_return_7,
        ap_return_8 => call_ret2_constructor_fu_41_ap_return_8,
        ap_return_9 => call_ret2_constructor_fu_41_ap_return_9,
        ap_return_10 => call_ret2_constructor_fu_41_ap_return_10,
        ap_return_11 => call_ret2_constructor_fu_41_ap_return_11,
        ap_return_12 => call_ret2_constructor_fu_41_ap_return_12,
        ap_return_13 => call_ret2_constructor_fu_41_ap_return_13,
        ap_return_14 => call_ret2_constructor_fu_41_ap_return_14,
        ap_return_15 => call_ret2_constructor_fu_41_ap_return_15,
        ap_return_16 => call_ret2_constructor_fu_41_ap_return_16,
        ap_return_17 => call_ret2_constructor_fu_41_ap_return_17,
        ap_return_18 => call_ret2_constructor_fu_41_ap_return_18,
        ap_return_19 => call_ret2_constructor_fu_41_ap_return_19,
        ap_return_20 => call_ret2_constructor_fu_41_ap_return_20,
        ap_return_21 => call_ret2_constructor_fu_41_ap_return_21,
        ap_return_22 => call_ret2_constructor_fu_41_ap_return_22,
        ap_return_23 => call_ret2_constructor_fu_41_ap_return_23,
        ap_return_24 => call_ret2_constructor_fu_41_ap_return_24,
        ap_return_25 => call_ret2_constructor_fu_41_ap_return_25,
        ap_return_26 => call_ret2_constructor_fu_41_ap_return_26,
        ap_return_27 => call_ret2_constructor_fu_41_ap_return_27,
        ap_return_28 => call_ret2_constructor_fu_41_ap_return_28,
        ap_return_29 => call_ret2_constructor_fu_41_ap_return_29,
        ap_return_30 => call_ret2_constructor_fu_41_ap_return_30,
        ap_return_31 => call_ret2_constructor_fu_41_ap_return_31);

    call_ret_constructor_fu_46 : component krnl_lstm_constructor
    port map (
        ap_ready => call_ret_constructor_fu_46_ap_ready,
        p_val_V_read => tmp_V_2_reg_669,
        ap_return_0 => call_ret_constructor_fu_46_ap_return_0,
        ap_return_1 => call_ret_constructor_fu_46_ap_return_1,
        ap_return_2 => call_ret_constructor_fu_46_ap_return_2,
        ap_return_3 => call_ret_constructor_fu_46_ap_return_3,
        ap_return_4 => call_ret_constructor_fu_46_ap_return_4,
        ap_return_5 => call_ret_constructor_fu_46_ap_return_5,
        ap_return_6 => call_ret_constructor_fu_46_ap_return_6,
        ap_return_7 => call_ret_constructor_fu_46_ap_return_7,
        ap_return_8 => call_ret_constructor_fu_46_ap_return_8,
        ap_return_9 => call_ret_constructor_fu_46_ap_return_9,
        ap_return_10 => call_ret_constructor_fu_46_ap_return_10,
        ap_return_11 => call_ret_constructor_fu_46_ap_return_11,
        ap_return_12 => call_ret_constructor_fu_46_ap_return_12,
        ap_return_13 => call_ret_constructor_fu_46_ap_return_13,
        ap_return_14 => call_ret_constructor_fu_46_ap_return_14,
        ap_return_15 => call_ret_constructor_fu_46_ap_return_15,
        ap_return_16 => call_ret_constructor_fu_46_ap_return_16,
        ap_return_17 => call_ret_constructor_fu_46_ap_return_17,
        ap_return_18 => call_ret_constructor_fu_46_ap_return_18,
        ap_return_19 => call_ret_constructor_fu_46_ap_return_19,
        ap_return_20 => call_ret_constructor_fu_46_ap_return_20,
        ap_return_21 => call_ret_constructor_fu_46_ap_return_21,
        ap_return_22 => call_ret_constructor_fu_46_ap_return_22,
        ap_return_23 => call_ret_constructor_fu_46_ap_return_23,
        ap_return_24 => call_ret_constructor_fu_46_ap_return_24,
        ap_return_25 => call_ret_constructor_fu_46_ap_return_25,
        ap_return_26 => call_ret_constructor_fu_46_ap_return_26,
        ap_return_27 => call_ret_constructor_fu_46_ap_return_27,
        ap_return_28 => call_ret_constructor_fu_46_ap_return_28,
        ap_return_29 => call_ret_constructor_fu_46_ap_return_29,
        ap_return_30 => call_ret_constructor_fu_46_ap_return_30,
        ap_return_31 => call_ret_constructor_fu_46_ap_return_31);

    fmul_32ns_32ns_32_4_max_dsp_1_U887 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_0,
        din1 => call_ret_constructor_fu_46_ap_return_0,
        ce => ap_const_logic_1,
        dout => grp_fu_51_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U888 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_1,
        din1 => call_ret_constructor_fu_46_ap_return_1,
        ce => ap_const_logic_1,
        dout => grp_fu_55_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U889 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_2,
        din1 => call_ret_constructor_fu_46_ap_return_2,
        ce => ap_const_logic_1,
        dout => grp_fu_59_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U890 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_3,
        din1 => call_ret_constructor_fu_46_ap_return_3,
        ce => ap_const_logic_1,
        dout => grp_fu_63_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U891 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_4,
        din1 => call_ret_constructor_fu_46_ap_return_4,
        ce => ap_const_logic_1,
        dout => grp_fu_67_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U892 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_5,
        din1 => call_ret_constructor_fu_46_ap_return_5,
        ce => ap_const_logic_1,
        dout => grp_fu_71_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U893 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_6,
        din1 => call_ret_constructor_fu_46_ap_return_6,
        ce => ap_const_logic_1,
        dout => grp_fu_75_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U894 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_7,
        din1 => call_ret_constructor_fu_46_ap_return_7,
        ce => ap_const_logic_1,
        dout => grp_fu_79_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U895 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_8,
        din1 => call_ret_constructor_fu_46_ap_return_8,
        ce => ap_const_logic_1,
        dout => grp_fu_83_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U896 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_9,
        din1 => call_ret_constructor_fu_46_ap_return_9,
        ce => ap_const_logic_1,
        dout => grp_fu_87_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U897 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_10,
        din1 => call_ret_constructor_fu_46_ap_return_10,
        ce => ap_const_logic_1,
        dout => grp_fu_91_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U898 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_11,
        din1 => call_ret_constructor_fu_46_ap_return_11,
        ce => ap_const_logic_1,
        dout => grp_fu_95_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U899 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_12,
        din1 => call_ret_constructor_fu_46_ap_return_12,
        ce => ap_const_logic_1,
        dout => grp_fu_99_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U900 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_13,
        din1 => call_ret_constructor_fu_46_ap_return_13,
        ce => ap_const_logic_1,
        dout => grp_fu_103_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U901 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_14,
        din1 => call_ret_constructor_fu_46_ap_return_14,
        ce => ap_const_logic_1,
        dout => grp_fu_107_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U902 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_15,
        din1 => call_ret_constructor_fu_46_ap_return_15,
        ce => ap_const_logic_1,
        dout => grp_fu_111_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U903 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_16,
        din1 => call_ret_constructor_fu_46_ap_return_16,
        ce => ap_const_logic_1,
        dout => grp_fu_115_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U904 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_17,
        din1 => call_ret_constructor_fu_46_ap_return_17,
        ce => ap_const_logic_1,
        dout => grp_fu_119_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U905 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_18,
        din1 => call_ret_constructor_fu_46_ap_return_18,
        ce => ap_const_logic_1,
        dout => grp_fu_123_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U906 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_19,
        din1 => call_ret_constructor_fu_46_ap_return_19,
        ce => ap_const_logic_1,
        dout => grp_fu_127_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U907 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_20,
        din1 => call_ret_constructor_fu_46_ap_return_20,
        ce => ap_const_logic_1,
        dout => grp_fu_131_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U908 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_21,
        din1 => call_ret_constructor_fu_46_ap_return_21,
        ce => ap_const_logic_1,
        dout => grp_fu_135_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U909 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_22,
        din1 => call_ret_constructor_fu_46_ap_return_22,
        ce => ap_const_logic_1,
        dout => grp_fu_139_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U910 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_23,
        din1 => call_ret_constructor_fu_46_ap_return_23,
        ce => ap_const_logic_1,
        dout => grp_fu_143_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U911 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_24,
        din1 => call_ret_constructor_fu_46_ap_return_24,
        ce => ap_const_logic_1,
        dout => grp_fu_147_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U912 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_25,
        din1 => call_ret_constructor_fu_46_ap_return_25,
        ce => ap_const_logic_1,
        dout => grp_fu_151_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U913 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_26,
        din1 => call_ret_constructor_fu_46_ap_return_26,
        ce => ap_const_logic_1,
        dout => grp_fu_155_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U914 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_27,
        din1 => call_ret_constructor_fu_46_ap_return_27,
        ce => ap_const_logic_1,
        dout => grp_fu_159_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U915 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_28,
        din1 => call_ret_constructor_fu_46_ap_return_28,
        ce => ap_const_logic_1,
        dout => grp_fu_163_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U916 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_29,
        din1 => call_ret_constructor_fu_46_ap_return_29,
        ce => ap_const_logic_1,
        dout => grp_fu_167_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U917 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_30,
        din1 => call_ret_constructor_fu_46_ap_return_30,
        ce => ap_const_logic_1,
        dout => grp_fu_171_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U918 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => call_ret2_constructor_fu_41_ap_return_31,
        din1 => call_ret_constructor_fu_46_ap_return_31,
        ce => ap_const_logic_1,
        dout => grp_fu_175_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                mul_10_reg_1044 <= grp_fu_91_p2;
                mul_11_reg_1049 <= grp_fu_95_p2;
                mul_12_reg_1054 <= grp_fu_99_p2;
                mul_13_reg_1059 <= grp_fu_103_p2;
                mul_14_reg_1064 <= grp_fu_107_p2;
                mul_15_reg_1069 <= grp_fu_111_p2;
                mul_16_reg_1074 <= grp_fu_115_p2;
                mul_17_reg_1079 <= grp_fu_119_p2;
                mul_18_reg_1084 <= grp_fu_123_p2;
                mul_19_reg_1089 <= grp_fu_127_p2;
                mul_1_reg_999 <= grp_fu_55_p2;
                mul_20_reg_1094 <= grp_fu_131_p2;
                mul_21_reg_1099 <= grp_fu_135_p2;
                mul_22_reg_1104 <= grp_fu_139_p2;
                mul_23_reg_1109 <= grp_fu_143_p2;
                mul_24_reg_1114 <= grp_fu_147_p2;
                mul_25_reg_1119 <= grp_fu_151_p2;
                mul_26_reg_1124 <= grp_fu_155_p2;
                mul_27_reg_1129 <= grp_fu_159_p2;
                mul_28_reg_1134 <= grp_fu_163_p2;
                mul_29_reg_1139 <= grp_fu_167_p2;
                mul_2_reg_1004 <= grp_fu_59_p2;
                mul_30_reg_1144 <= grp_fu_171_p2;
                mul_3_reg_1009 <= grp_fu_63_p2;
                mul_4_reg_1014 <= grp_fu_67_p2;
                mul_5_reg_1019 <= grp_fu_71_p2;
                mul_6_reg_1024 <= grp_fu_75_p2;
                mul_7_reg_1029 <= grp_fu_79_p2;
                mul_8_reg_1034 <= grp_fu_83_p2;
                mul_9_reg_1039 <= grp_fu_87_p2;
                mul_reg_994 <= grp_fu_51_p2;
                mul_s_reg_1149 <= grp_fu_175_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                tmp_V_2_reg_669 <= str_in23_dout;
                tmp_V_reg_664 <= str_in12_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, str_in12_empty_n, str_in23_empty_n)
    begin
                ap_block_state1 <= ((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, l_mulStr1_full_n, ap_CS_fsm_state6)
    begin
        if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    internal_ap_ready_assign_proc : process(l_mulStr1_full_n, ap_CS_fsm_state6)
    begin
        if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    l_mulStr1_blk_n_assign_proc : process(l_mulStr1_full_n, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            l_mulStr1_blk_n <= l_mulStr1_full_n;
        else 
            l_mulStr1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    l_mulStr1_din <= (((((((((((((((((((((((((((((((l_val_V_372_fu_592_p1 & l_val_V_371_fu_589_p1) & l_val_V_370_fu_586_p1) & l_val_V_369_fu_583_p1) & l_val_V_368_fu_580_p1) & l_val_V_367_fu_577_p1) & l_val_V_366_fu_574_p1) & l_val_V_365_fu_571_p1) & l_val_V_364_fu_568_p1) & l_val_V_363_fu_565_p1) & l_val_V_362_fu_562_p1) & l_val_V_361_fu_559_p1) & l_val_V_360_fu_556_p1) & l_val_V_359_fu_553_p1) & l_val_V_358_fu_550_p1) & l_val_V_357_fu_547_p1) & l_val_V_356_fu_544_p1) & l_val_V_355_fu_541_p1) & l_val_V_354_fu_538_p1) & l_val_V_353_fu_535_p1) & l_val_V_352_fu_532_p1) & l_val_V_351_fu_529_p1) & l_val_V_350_fu_526_p1) & l_val_V_349_fu_523_p1) & l_val_V_348_fu_520_p1) & l_val_V_347_fu_517_p1) & l_val_V_346_fu_514_p1) & l_val_V_345_fu_511_p1) & l_val_V_344_fu_508_p1) & l_val_V_343_fu_505_p1) & l_val_V_342_fu_502_p1) & l_val_V_fu_499_p1);

    l_mulStr1_write_assign_proc : process(l_mulStr1_full_n, ap_CS_fsm_state6)
    begin
        if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            l_mulStr1_write <= ap_const_logic_1;
        else 
            l_mulStr1_write <= ap_const_logic_0;
        end if; 
    end process;

    l_val_V_342_fu_502_p1 <= mul_1_reg_999;
    l_val_V_343_fu_505_p1 <= mul_2_reg_1004;
    l_val_V_344_fu_508_p1 <= mul_3_reg_1009;
    l_val_V_345_fu_511_p1 <= mul_4_reg_1014;
    l_val_V_346_fu_514_p1 <= mul_5_reg_1019;
    l_val_V_347_fu_517_p1 <= mul_6_reg_1024;
    l_val_V_348_fu_520_p1 <= mul_7_reg_1029;
    l_val_V_349_fu_523_p1 <= mul_8_reg_1034;
    l_val_V_350_fu_526_p1 <= mul_9_reg_1039;
    l_val_V_351_fu_529_p1 <= mul_10_reg_1044;
    l_val_V_352_fu_532_p1 <= mul_11_reg_1049;
    l_val_V_353_fu_535_p1 <= mul_12_reg_1054;
    l_val_V_354_fu_538_p1 <= mul_13_reg_1059;
    l_val_V_355_fu_541_p1 <= mul_14_reg_1064;
    l_val_V_356_fu_544_p1 <= mul_15_reg_1069;
    l_val_V_357_fu_547_p1 <= mul_16_reg_1074;
    l_val_V_358_fu_550_p1 <= mul_17_reg_1079;
    l_val_V_359_fu_553_p1 <= mul_18_reg_1084;
    l_val_V_360_fu_556_p1 <= mul_19_reg_1089;
    l_val_V_361_fu_559_p1 <= mul_20_reg_1094;
    l_val_V_362_fu_562_p1 <= mul_21_reg_1099;
    l_val_V_363_fu_565_p1 <= mul_22_reg_1104;
    l_val_V_364_fu_568_p1 <= mul_23_reg_1109;
    l_val_V_365_fu_571_p1 <= mul_24_reg_1114;
    l_val_V_366_fu_574_p1 <= mul_25_reg_1119;
    l_val_V_367_fu_577_p1 <= mul_26_reg_1124;
    l_val_V_368_fu_580_p1 <= mul_27_reg_1129;
    l_val_V_369_fu_583_p1 <= mul_28_reg_1134;
    l_val_V_370_fu_586_p1 <= mul_29_reg_1139;
    l_val_V_371_fu_589_p1 <= mul_30_reg_1144;
    l_val_V_372_fu_592_p1 <= mul_s_reg_1149;
    l_val_V_fu_499_p1 <= mul_reg_994;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    str_in12_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, str_in12_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            str_in12_blk_n <= str_in12_empty_n;
        else 
            str_in12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    str_in12_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, str_in12_empty_n, str_in23_empty_n)
    begin
        if ((not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            str_in12_read <= ap_const_logic_1;
        else 
            str_in12_read <= ap_const_logic_0;
        end if; 
    end process;


    str_in23_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, str_in23_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            str_in23_blk_n <= str_in23_empty_n;
        else 
            str_in23_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    str_in23_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, str_in12_empty_n, str_in23_empty_n)
    begin
        if ((not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            str_in23_read <= ap_const_logic_1;
        else 
            str_in23_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
