-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_lstm_mul_float_4u_unsigned_int_float_5871 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    str_in12_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    str_in12_empty_n : IN STD_LOGIC;
    str_in12_read : OUT STD_LOGIC;
    str_in23_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    str_in23_empty_n : IN STD_LOGIC;
    str_in23_read : OUT STD_LOGIC;
    l_mulStr1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    l_mulStr1_full_n : IN STD_LOGIC;
    l_mulStr1_write : OUT STD_LOGIC );
end;


architecture behav of krnl_lstm_mul_float_4u_unsigned_int_float_5871 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal str_in12_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal str_in23_blk_n : STD_LOGIC;
    signal l_mulStr1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal reg_129 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal ap_block_state10 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal ap_block_state12 : BOOLEAN;
    signal ap_block_state13 : BOOLEAN;
    signal ap_block_state14 : BOOLEAN;
    signal ap_block_state15 : BOOLEAN;
    signal ap_block_state16 : BOOLEAN;
    signal reg_133 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_137 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_141 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_145 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_149 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_53_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_153 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_57_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_157 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_61_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_161 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_65_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_fu_169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_reg_1369 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_32_fu_173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_32_reg_1374 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_fu_177_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_fu_181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_fu_186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_fu_191_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_fu_196_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_130_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_131_fu_205_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_132_fu_210_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_33_fu_215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_33_reg_1419 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_34_fu_219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_34_reg_1424 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_16_fu_223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_16_fu_227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_16_fu_232_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_16_fu_237_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_137_fu_242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_138_fu_246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_139_fu_251_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_140_fu_256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_35_fu_261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_35_reg_1469 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_36_fu_265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_36_reg_1474 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_17_fu_269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_17_fu_273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_17_fu_278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_17_fu_283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_145_fu_288_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_146_fu_292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_147_fu_297_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_148_fu_302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_37_fu_307_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_37_reg_1519 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_38_fu_311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_38_reg_1524 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_18_fu_315_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_18_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_18_fu_324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_18_fu_329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_153_fu_334_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_154_fu_338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_155_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_156_fu_348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_39_fu_353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_39_reg_1569 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_40_fu_357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_40_reg_1574 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_19_fu_390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_19_fu_394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_19_fu_399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_19_fu_404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_161_fu_409_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_162_fu_413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_163_fu_418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_164_fu_423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_41_fu_428_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_41_reg_1619 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_42_fu_432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_42_reg_1624 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_20_fu_465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_20_fu_469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_20_fu_474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_20_fu_479_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_169_fu_484_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_170_fu_488_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_171_fu_493_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_172_fu_498_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_43_fu_503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_43_reg_1669 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_44_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_44_reg_1674 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_21_fu_540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_21_fu_544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_21_fu_549_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_21_fu_554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_177_fu_559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_178_fu_563_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_179_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_180_fu_573_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_45_fu_578_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_45_reg_1719 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_46_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_46_reg_1724 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_22_fu_615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_22_fu_619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_22_fu_624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_22_fu_629_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_185_fu_634_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_186_fu_638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_187_fu_643_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_188_fu_648_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_47_fu_653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_47_reg_1769 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_48_fu_657_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_48_reg_1774 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_23_fu_690_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_23_fu_694_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_23_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_23_fu_704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_193_fu_709_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_194_fu_713_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_195_fu_718_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_196_fu_723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_49_fu_728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_49_reg_1819 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_50_fu_732_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_50_reg_1824 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_24_fu_765_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_24_fu_769_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_24_fu_774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_24_fu_779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_201_fu_784_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_202_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_203_fu_793_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_204_fu_798_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_51_fu_803_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_51_reg_1869 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_52_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_52_reg_1874 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_25_fu_840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_25_fu_844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_25_fu_849_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_25_fu_854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_209_fu_859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_210_fu_863_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_211_fu_868_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_212_fu_873_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_53_fu_878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_53_reg_1919 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_54_fu_882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_54_reg_1924 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_26_fu_915_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_26_fu_919_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_26_fu_924_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_26_fu_929_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_217_fu_934_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_218_fu_938_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_219_fu_943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_220_fu_948_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_55_fu_953_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_55_reg_1969 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_56_fu_957_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_56_reg_1974 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_27_fu_990_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_27_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_27_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_27_fu_1004_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_225_fu_1009_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_226_fu_1013_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_227_fu_1018_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_228_fu_1023_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_57_fu_1028_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_57_reg_2019 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_58_fu_1032_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_58_reg_2024 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_28_fu_1065_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_28_fu_1069_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_28_fu_1074_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_28_fu_1079_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_233_fu_1084_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_234_fu_1088_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_235_fu_1093_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_236_fu_1098_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_59_fu_1103_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_59_reg_2069 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_60_fu_1107_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_60_reg_2074 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_29_fu_1140_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_29_fu_1144_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_29_fu_1149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_29_fu_1154_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_241_fu_1159_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_242_fu_1163_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_243_fu_1168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_244_fu_1173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_61_fu_1178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_61_reg_2119 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_62_fu_1182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_62_reg_2124 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_0_30_fu_1215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_1_30_fu_1219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_2_30_fu_1224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_valX_m_Val_3_30_fu_1229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_249_fu_1234_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_250_fu_1238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_251_fu_1243_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_252_fu_1248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_fu_377_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_1_fu_452_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_2_fu_527_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_3_fu_602_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_4_fu_677_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_5_fu_752_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_6_fu_827_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_7_fu_902_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_8_fu_977_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_9_fu_1052_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_10_fu_1127_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_11_fu_1202_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_12_fu_1269_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_13_fu_1298_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_14_fu_1327_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_14_s_fu_1356_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_53_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_53_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_57_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_57_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_61_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_61_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_65_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_65_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_696_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_695_fu_369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_694_fu_365_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_fu_361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_700_fu_448_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_699_fu_444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_698_fu_440_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_697_fu_436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_704_fu_523_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_703_fu_519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_702_fu_515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_701_fu_511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_708_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_707_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_706_fu_590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_705_fu_586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_712_fu_673_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_711_fu_669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_710_fu_665_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_709_fu_661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_716_fu_748_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_715_fu_744_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_714_fu_740_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_713_fu_736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_720_fu_823_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_719_fu_819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_718_fu_815_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_717_fu_811_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_724_fu_898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_723_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_722_fu_890_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_721_fu_886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_728_fu_973_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_727_fu_969_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_726_fu_965_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_725_fu_961_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_732_fu_1048_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_731_fu_1044_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_730_fu_1040_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_729_fu_1036_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_736_fu_1123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_735_fu_1119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_734_fu_1115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_733_fu_1111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_740_fu_1198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_739_fu_1194_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_738_fu_1190_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_737_fu_1186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_744_fu_1265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_743_fu_1261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_742_fu_1257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_741_fu_1253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_748_fu_1294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_747_fu_1290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_746_fu_1286_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_745_fu_1282_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_752_fu_1323_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_751_fu_1319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_750_fu_1315_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_749_fu_1311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_756_fu_1352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_755_fu_1348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_754_fu_1344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_753_fu_1340_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_53_ce : STD_LOGIC;
    signal grp_fu_57_ce : STD_LOGIC;
    signal grp_fu_61_ce : STD_LOGIC;
    signal grp_fu_65_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fmul_32ns_32ns_32_4_max_dsp_1_U1519 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_53_p0,
        din1 => grp_fu_53_p1,
        ce => grp_fu_53_ce,
        dout => grp_fu_53_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1520 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_57_p0,
        din1 => grp_fu_57_p1,
        ce => grp_fu_57_ce,
        dout => grp_fu_57_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1521 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_61_p0,
        din1 => grp_fu_61_p1,
        ce => grp_fu_61_ce,
        dout => grp_fu_61_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1522 : component krnl_lstm_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_65_p0,
        din1 => grp_fu_65_p1,
        ce => grp_fu_65_ce,
        dout => grp_fu_65_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then
                reg_129 <= str_in12_dout(63 downto 32);
                reg_133 <= str_in12_dout(95 downto 64);
                reg_137 <= str_in12_dout(127 downto 96);
                reg_141 <= str_in23_dout(63 downto 32);
                reg_145 <= str_in23_dout(95 downto 64);
                reg_149 <= str_in23_dout(127 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then
                reg_153 <= grp_fu_53_p2;
                reg_157 <= grp_fu_57_p2;
                reg_161 <= grp_fu_61_p2;
                reg_165 <= grp_fu_65_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln674_32_reg_1374 <= trunc_ln674_32_fu_173_p1;
                trunc_ln674_reg_1369 <= trunc_ln674_fu_169_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                trunc_ln674_33_reg_1419 <= trunc_ln674_33_fu_215_p1;
                trunc_ln674_34_reg_1424 <= trunc_ln674_34_fu_219_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                trunc_ln674_35_reg_1469 <= trunc_ln674_35_fu_261_p1;
                trunc_ln674_36_reg_1474 <= trunc_ln674_36_fu_265_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                trunc_ln674_37_reg_1519 <= trunc_ln674_37_fu_307_p1;
                trunc_ln674_38_reg_1524 <= trunc_ln674_38_fu_311_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                trunc_ln674_39_reg_1569 <= trunc_ln674_39_fu_353_p1;
                trunc_ln674_40_reg_1574 <= trunc_ln674_40_fu_357_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                trunc_ln674_41_reg_1619 <= trunc_ln674_41_fu_428_p1;
                trunc_ln674_42_reg_1624 <= trunc_ln674_42_fu_432_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                trunc_ln674_43_reg_1669 <= trunc_ln674_43_fu_503_p1;
                trunc_ln674_44_reg_1674 <= trunc_ln674_44_fu_507_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                trunc_ln674_45_reg_1719 <= trunc_ln674_45_fu_578_p1;
                trunc_ln674_46_reg_1724 <= trunc_ln674_46_fu_582_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                trunc_ln674_47_reg_1769 <= trunc_ln674_47_fu_653_p1;
                trunc_ln674_48_reg_1774 <= trunc_ln674_48_fu_657_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                trunc_ln674_49_reg_1819 <= trunc_ln674_49_fu_728_p1;
                trunc_ln674_50_reg_1824 <= trunc_ln674_50_fu_732_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                trunc_ln674_51_reg_1869 <= trunc_ln674_51_fu_803_p1;
                trunc_ln674_52_reg_1874 <= trunc_ln674_52_fu_807_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                trunc_ln674_53_reg_1919 <= trunc_ln674_53_fu_878_p1;
                trunc_ln674_54_reg_1924 <= trunc_ln674_54_fu_882_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                trunc_ln674_55_reg_1969 <= trunc_ln674_55_fu_953_p1;
                trunc_ln674_56_reg_1974 <= trunc_ln674_56_fu_957_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                trunc_ln674_57_reg_2019 <= trunc_ln674_57_fu_1028_p1;
                trunc_ln674_58_reg_2024 <= trunc_ln674_58_fu_1032_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                trunc_ln674_59_reg_2069 <= trunc_ln674_59_fu_1103_p1;
                trunc_ln674_60_reg_2074 <= trunc_ln674_60_fu_1107_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                trunc_ln674_61_reg_2119 <= trunc_ln674_61_fu_1178_p1;
                trunc_ln674_62_reg_2124 <= trunc_ln674_62_fu_1182_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, str_in12_empty_n, str_in23_empty_n)
    begin
                ap_block_state1 <= ((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state10_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state10 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state11_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state11 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state12_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state12 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state13_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state13 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state14_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state14 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state15_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state15 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state16_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state16 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(str_in12_empty_n, str_in23_empty_n)
    begin
                ap_block_state2 <= ((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(str_in12_empty_n, str_in23_empty_n)
    begin
                ap_block_state3 <= ((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(str_in12_empty_n, str_in23_empty_n)
    begin
                ap_block_state4 <= ((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(str_in12_empty_n, str_in23_empty_n)
    begin
                ap_block_state5 <= ((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state6 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state7 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state8 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n)
    begin
                ap_block_state9 <= ((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, l_mulStr1_full_n, ap_CS_fsm_state21)
    begin
        if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bitcast_ln102_130_fu_200_p1 <= reg_141;
    bitcast_ln102_131_fu_205_p1 <= reg_145;
    bitcast_ln102_132_fu_210_p1 <= reg_149;
    bitcast_ln102_137_fu_242_p1 <= trunc_ln674_34_reg_1424;
    bitcast_ln102_138_fu_246_p1 <= reg_141;
    bitcast_ln102_139_fu_251_p1 <= reg_145;
    bitcast_ln102_140_fu_256_p1 <= reg_149;
    bitcast_ln102_145_fu_288_p1 <= trunc_ln674_36_reg_1474;
    bitcast_ln102_146_fu_292_p1 <= reg_141;
    bitcast_ln102_147_fu_297_p1 <= reg_145;
    bitcast_ln102_148_fu_302_p1 <= reg_149;
    bitcast_ln102_153_fu_334_p1 <= trunc_ln674_38_reg_1524;
    bitcast_ln102_154_fu_338_p1 <= reg_141;
    bitcast_ln102_155_fu_343_p1 <= reg_145;
    bitcast_ln102_156_fu_348_p1 <= reg_149;
    bitcast_ln102_161_fu_409_p1 <= trunc_ln674_40_reg_1574;
    bitcast_ln102_162_fu_413_p1 <= reg_141;
    bitcast_ln102_163_fu_418_p1 <= reg_145;
    bitcast_ln102_164_fu_423_p1 <= reg_149;
    bitcast_ln102_169_fu_484_p1 <= trunc_ln674_42_reg_1624;
    bitcast_ln102_170_fu_488_p1 <= reg_141;
    bitcast_ln102_171_fu_493_p1 <= reg_145;
    bitcast_ln102_172_fu_498_p1 <= reg_149;
    bitcast_ln102_177_fu_559_p1 <= trunc_ln674_44_reg_1674;
    bitcast_ln102_178_fu_563_p1 <= reg_141;
    bitcast_ln102_179_fu_568_p1 <= reg_145;
    bitcast_ln102_180_fu_573_p1 <= reg_149;
    bitcast_ln102_185_fu_634_p1 <= trunc_ln674_46_reg_1724;
    bitcast_ln102_186_fu_638_p1 <= reg_141;
    bitcast_ln102_187_fu_643_p1 <= reg_145;
    bitcast_ln102_188_fu_648_p1 <= reg_149;
    bitcast_ln102_193_fu_709_p1 <= trunc_ln674_48_reg_1774;
    bitcast_ln102_194_fu_713_p1 <= reg_141;
    bitcast_ln102_195_fu_718_p1 <= reg_145;
    bitcast_ln102_196_fu_723_p1 <= reg_149;
    bitcast_ln102_201_fu_784_p1 <= trunc_ln674_50_reg_1824;
    bitcast_ln102_202_fu_788_p1 <= reg_141;
    bitcast_ln102_203_fu_793_p1 <= reg_145;
    bitcast_ln102_204_fu_798_p1 <= reg_149;
    bitcast_ln102_209_fu_859_p1 <= trunc_ln674_52_reg_1874;
    bitcast_ln102_210_fu_863_p1 <= reg_141;
    bitcast_ln102_211_fu_868_p1 <= reg_145;
    bitcast_ln102_212_fu_873_p1 <= reg_149;
    bitcast_ln102_217_fu_934_p1 <= trunc_ln674_54_reg_1924;
    bitcast_ln102_218_fu_938_p1 <= reg_141;
    bitcast_ln102_219_fu_943_p1 <= reg_145;
    bitcast_ln102_220_fu_948_p1 <= reg_149;
    bitcast_ln102_225_fu_1009_p1 <= trunc_ln674_56_reg_1974;
    bitcast_ln102_226_fu_1013_p1 <= reg_141;
    bitcast_ln102_227_fu_1018_p1 <= reg_145;
    bitcast_ln102_228_fu_1023_p1 <= reg_149;
    bitcast_ln102_233_fu_1084_p1 <= trunc_ln674_58_reg_2024;
    bitcast_ln102_234_fu_1088_p1 <= reg_141;
    bitcast_ln102_235_fu_1093_p1 <= reg_145;
    bitcast_ln102_236_fu_1098_p1 <= reg_149;
    bitcast_ln102_241_fu_1159_p1 <= trunc_ln674_60_reg_2074;
    bitcast_ln102_242_fu_1163_p1 <= reg_141;
    bitcast_ln102_243_fu_1168_p1 <= reg_145;
    bitcast_ln102_244_fu_1173_p1 <= reg_149;
    bitcast_ln102_249_fu_1234_p1 <= trunc_ln674_62_reg_2124;
    bitcast_ln102_250_fu_1238_p1 <= reg_141;
    bitcast_ln102_251_fu_1243_p1 <= reg_145;
    bitcast_ln102_252_fu_1248_p1 <= reg_149;
    bitcast_ln102_fu_196_p1 <= trunc_ln674_32_reg_1374;
    bitcast_ln123_694_fu_365_p1 <= reg_157;
    bitcast_ln123_695_fu_369_p1 <= reg_161;
    bitcast_ln123_696_fu_373_p1 <= reg_165;
    bitcast_ln123_697_fu_436_p1 <= reg_153;
    bitcast_ln123_698_fu_440_p1 <= reg_157;
    bitcast_ln123_699_fu_444_p1 <= reg_161;
    bitcast_ln123_700_fu_448_p1 <= reg_165;
    bitcast_ln123_701_fu_511_p1 <= reg_153;
    bitcast_ln123_702_fu_515_p1 <= reg_157;
    bitcast_ln123_703_fu_519_p1 <= reg_161;
    bitcast_ln123_704_fu_523_p1 <= reg_165;
    bitcast_ln123_705_fu_586_p1 <= reg_153;
    bitcast_ln123_706_fu_590_p1 <= reg_157;
    bitcast_ln123_707_fu_594_p1 <= reg_161;
    bitcast_ln123_708_fu_598_p1 <= reg_165;
    bitcast_ln123_709_fu_661_p1 <= reg_153;
    bitcast_ln123_710_fu_665_p1 <= reg_157;
    bitcast_ln123_711_fu_669_p1 <= reg_161;
    bitcast_ln123_712_fu_673_p1 <= reg_165;
    bitcast_ln123_713_fu_736_p1 <= reg_153;
    bitcast_ln123_714_fu_740_p1 <= reg_157;
    bitcast_ln123_715_fu_744_p1 <= reg_161;
    bitcast_ln123_716_fu_748_p1 <= reg_165;
    bitcast_ln123_717_fu_811_p1 <= reg_153;
    bitcast_ln123_718_fu_815_p1 <= reg_157;
    bitcast_ln123_719_fu_819_p1 <= reg_161;
    bitcast_ln123_720_fu_823_p1 <= reg_165;
    bitcast_ln123_721_fu_886_p1 <= reg_153;
    bitcast_ln123_722_fu_890_p1 <= reg_157;
    bitcast_ln123_723_fu_894_p1 <= reg_161;
    bitcast_ln123_724_fu_898_p1 <= reg_165;
    bitcast_ln123_725_fu_961_p1 <= reg_153;
    bitcast_ln123_726_fu_965_p1 <= reg_157;
    bitcast_ln123_727_fu_969_p1 <= reg_161;
    bitcast_ln123_728_fu_973_p1 <= reg_165;
    bitcast_ln123_729_fu_1036_p1 <= reg_153;
    bitcast_ln123_730_fu_1040_p1 <= reg_157;
    bitcast_ln123_731_fu_1044_p1 <= reg_161;
    bitcast_ln123_732_fu_1048_p1 <= reg_165;
    bitcast_ln123_733_fu_1111_p1 <= reg_153;
    bitcast_ln123_734_fu_1115_p1 <= reg_157;
    bitcast_ln123_735_fu_1119_p1 <= reg_161;
    bitcast_ln123_736_fu_1123_p1 <= reg_165;
    bitcast_ln123_737_fu_1186_p1 <= reg_153;
    bitcast_ln123_738_fu_1190_p1 <= reg_157;
    bitcast_ln123_739_fu_1194_p1 <= reg_161;
    bitcast_ln123_740_fu_1198_p1 <= reg_165;
    bitcast_ln123_741_fu_1253_p1 <= reg_153;
    bitcast_ln123_742_fu_1257_p1 <= reg_157;
    bitcast_ln123_743_fu_1261_p1 <= reg_161;
    bitcast_ln123_744_fu_1265_p1 <= reg_165;
    bitcast_ln123_745_fu_1282_p1 <= reg_153;
    bitcast_ln123_746_fu_1286_p1 <= reg_157;
    bitcast_ln123_747_fu_1290_p1 <= reg_161;
    bitcast_ln123_748_fu_1294_p1 <= reg_165;
    bitcast_ln123_749_fu_1311_p1 <= reg_153;
    bitcast_ln123_750_fu_1315_p1 <= reg_157;
    bitcast_ln123_751_fu_1319_p1 <= reg_161;
    bitcast_ln123_752_fu_1323_p1 <= reg_165;
    bitcast_ln123_753_fu_1340_p1 <= reg_153;
    bitcast_ln123_754_fu_1344_p1 <= reg_157;
    bitcast_ln123_755_fu_1348_p1 <= reg_161;
    bitcast_ln123_756_fu_1352_p1 <= reg_165;
    bitcast_ln123_fu_361_p1 <= reg_153;

    grp_fu_53_ce_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20)
    begin
        if ((((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_53_ce <= ap_const_logic_1;
        else 
            grp_fu_53_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_53_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, l_valX_m_Val_0_fu_177_p1, l_valX_m_Val_0_16_fu_223_p1, l_valX_m_Val_0_17_fu_269_p1, l_valX_m_Val_0_18_fu_315_p1, l_valX_m_Val_0_19_fu_390_p1, l_valX_m_Val_0_20_fu_465_p1, l_valX_m_Val_0_21_fu_540_p1, l_valX_m_Val_0_22_fu_615_p1, l_valX_m_Val_0_23_fu_690_p1, l_valX_m_Val_0_24_fu_765_p1, l_valX_m_Val_0_25_fu_840_p1, l_valX_m_Val_0_26_fu_915_p1, l_valX_m_Val_0_27_fu_990_p1, l_valX_m_Val_0_28_fu_1065_p1, l_valX_m_Val_0_29_fu_1140_p1, l_valX_m_Val_0_30_fu_1215_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_30_fu_1215_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_29_fu_1140_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_28_fu_1065_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_27_fu_990_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_26_fu_915_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_25_fu_840_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_24_fu_765_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_23_fu_690_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_22_fu_615_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_21_fu_540_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_20_fu_465_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_19_fu_390_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_18_fu_315_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_17_fu_269_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_16_fu_223_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_53_p0 <= l_valX_m_Val_0_fu_177_p1;
        else 
            grp_fu_53_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_53_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, bitcast_ln102_fu_196_p1, bitcast_ln102_137_fu_242_p1, bitcast_ln102_145_fu_288_p1, bitcast_ln102_153_fu_334_p1, bitcast_ln102_161_fu_409_p1, bitcast_ln102_169_fu_484_p1, bitcast_ln102_177_fu_559_p1, bitcast_ln102_185_fu_634_p1, bitcast_ln102_193_fu_709_p1, bitcast_ln102_201_fu_784_p1, bitcast_ln102_209_fu_859_p1, bitcast_ln102_217_fu_934_p1, bitcast_ln102_225_fu_1009_p1, bitcast_ln102_233_fu_1084_p1, bitcast_ln102_241_fu_1159_p1, bitcast_ln102_249_fu_1234_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_53_p1 <= bitcast_ln102_249_fu_1234_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_53_p1 <= bitcast_ln102_241_fu_1159_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_53_p1 <= bitcast_ln102_233_fu_1084_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_53_p1 <= bitcast_ln102_225_fu_1009_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_53_p1 <= bitcast_ln102_217_fu_934_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_53_p1 <= bitcast_ln102_209_fu_859_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_53_p1 <= bitcast_ln102_201_fu_784_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_53_p1 <= bitcast_ln102_193_fu_709_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_53_p1 <= bitcast_ln102_185_fu_634_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_53_p1 <= bitcast_ln102_177_fu_559_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_53_p1 <= bitcast_ln102_169_fu_484_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_53_p1 <= bitcast_ln102_161_fu_409_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_53_p1 <= bitcast_ln102_153_fu_334_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_53_p1 <= bitcast_ln102_145_fu_288_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_53_p1 <= bitcast_ln102_137_fu_242_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_53_p1 <= bitcast_ln102_fu_196_p1;
        else 
            grp_fu_53_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_57_ce_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20)
    begin
        if ((((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_57_ce <= ap_const_logic_1;
        else 
            grp_fu_57_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_57_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, l_valX_m_Val_1_fu_181_p1, l_valX_m_Val_1_16_fu_227_p1, l_valX_m_Val_1_17_fu_273_p1, l_valX_m_Val_1_18_fu_319_p1, l_valX_m_Val_1_19_fu_394_p1, l_valX_m_Val_1_20_fu_469_p1, l_valX_m_Val_1_21_fu_544_p1, l_valX_m_Val_1_22_fu_619_p1, l_valX_m_Val_1_23_fu_694_p1, l_valX_m_Val_1_24_fu_769_p1, l_valX_m_Val_1_25_fu_844_p1, l_valX_m_Val_1_26_fu_919_p1, l_valX_m_Val_1_27_fu_994_p1, l_valX_m_Val_1_28_fu_1069_p1, l_valX_m_Val_1_29_fu_1144_p1, l_valX_m_Val_1_30_fu_1219_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_30_fu_1219_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_29_fu_1144_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_28_fu_1069_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_27_fu_994_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_26_fu_919_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_25_fu_844_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_24_fu_769_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_23_fu_694_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_22_fu_619_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_21_fu_544_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_20_fu_469_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_19_fu_394_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_18_fu_319_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_17_fu_273_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_16_fu_227_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_57_p0 <= l_valX_m_Val_1_fu_181_p1;
        else 
            grp_fu_57_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_57_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, bitcast_ln102_130_fu_200_p1, bitcast_ln102_138_fu_246_p1, bitcast_ln102_146_fu_292_p1, bitcast_ln102_154_fu_338_p1, bitcast_ln102_162_fu_413_p1, bitcast_ln102_170_fu_488_p1, bitcast_ln102_178_fu_563_p1, bitcast_ln102_186_fu_638_p1, bitcast_ln102_194_fu_713_p1, bitcast_ln102_202_fu_788_p1, bitcast_ln102_210_fu_863_p1, bitcast_ln102_218_fu_938_p1, bitcast_ln102_226_fu_1013_p1, bitcast_ln102_234_fu_1088_p1, bitcast_ln102_242_fu_1163_p1, bitcast_ln102_250_fu_1238_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_57_p1 <= bitcast_ln102_250_fu_1238_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_57_p1 <= bitcast_ln102_242_fu_1163_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_57_p1 <= bitcast_ln102_234_fu_1088_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_57_p1 <= bitcast_ln102_226_fu_1013_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_57_p1 <= bitcast_ln102_218_fu_938_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_57_p1 <= bitcast_ln102_210_fu_863_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_57_p1 <= bitcast_ln102_202_fu_788_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_57_p1 <= bitcast_ln102_194_fu_713_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_57_p1 <= bitcast_ln102_186_fu_638_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_57_p1 <= bitcast_ln102_178_fu_563_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_57_p1 <= bitcast_ln102_170_fu_488_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_57_p1 <= bitcast_ln102_162_fu_413_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_57_p1 <= bitcast_ln102_154_fu_338_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_57_p1 <= bitcast_ln102_146_fu_292_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_57_p1 <= bitcast_ln102_138_fu_246_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_57_p1 <= bitcast_ln102_130_fu_200_p1;
        else 
            grp_fu_57_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_61_ce_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20)
    begin
        if ((((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_61_ce <= ap_const_logic_1;
        else 
            grp_fu_61_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_61_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, l_valX_m_Val_2_fu_186_p1, l_valX_m_Val_2_16_fu_232_p1, l_valX_m_Val_2_17_fu_278_p1, l_valX_m_Val_2_18_fu_324_p1, l_valX_m_Val_2_19_fu_399_p1, l_valX_m_Val_2_20_fu_474_p1, l_valX_m_Val_2_21_fu_549_p1, l_valX_m_Val_2_22_fu_624_p1, l_valX_m_Val_2_23_fu_699_p1, l_valX_m_Val_2_24_fu_774_p1, l_valX_m_Val_2_25_fu_849_p1, l_valX_m_Val_2_26_fu_924_p1, l_valX_m_Val_2_27_fu_999_p1, l_valX_m_Val_2_28_fu_1074_p1, l_valX_m_Val_2_29_fu_1149_p1, l_valX_m_Val_2_30_fu_1224_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_30_fu_1224_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_29_fu_1149_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_28_fu_1074_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_27_fu_999_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_26_fu_924_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_25_fu_849_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_24_fu_774_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_23_fu_699_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_22_fu_624_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_21_fu_549_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_20_fu_474_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_19_fu_399_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_18_fu_324_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_17_fu_278_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_16_fu_232_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_61_p0 <= l_valX_m_Val_2_fu_186_p1;
        else 
            grp_fu_61_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_61_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, bitcast_ln102_131_fu_205_p1, bitcast_ln102_139_fu_251_p1, bitcast_ln102_147_fu_297_p1, bitcast_ln102_155_fu_343_p1, bitcast_ln102_163_fu_418_p1, bitcast_ln102_171_fu_493_p1, bitcast_ln102_179_fu_568_p1, bitcast_ln102_187_fu_643_p1, bitcast_ln102_195_fu_718_p1, bitcast_ln102_203_fu_793_p1, bitcast_ln102_211_fu_868_p1, bitcast_ln102_219_fu_943_p1, bitcast_ln102_227_fu_1018_p1, bitcast_ln102_235_fu_1093_p1, bitcast_ln102_243_fu_1168_p1, bitcast_ln102_251_fu_1243_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_61_p1 <= bitcast_ln102_251_fu_1243_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_61_p1 <= bitcast_ln102_243_fu_1168_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_61_p1 <= bitcast_ln102_235_fu_1093_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_61_p1 <= bitcast_ln102_227_fu_1018_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_61_p1 <= bitcast_ln102_219_fu_943_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_61_p1 <= bitcast_ln102_211_fu_868_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_61_p1 <= bitcast_ln102_203_fu_793_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_61_p1 <= bitcast_ln102_195_fu_718_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_61_p1 <= bitcast_ln102_187_fu_643_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_61_p1 <= bitcast_ln102_179_fu_568_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_61_p1 <= bitcast_ln102_171_fu_493_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_61_p1 <= bitcast_ln102_163_fu_418_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_61_p1 <= bitcast_ln102_155_fu_343_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_61_p1 <= bitcast_ln102_147_fu_297_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_61_p1 <= bitcast_ln102_139_fu_251_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_61_p1 <= bitcast_ln102_131_fu_205_p1;
        else 
            grp_fu_61_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_65_ce_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20)
    begin
        if ((((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_65_ce <= ap_const_logic_1;
        else 
            grp_fu_65_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_65_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, l_valX_m_Val_3_fu_191_p1, l_valX_m_Val_3_16_fu_237_p1, l_valX_m_Val_3_17_fu_283_p1, l_valX_m_Val_3_18_fu_329_p1, l_valX_m_Val_3_19_fu_404_p1, l_valX_m_Val_3_20_fu_479_p1, l_valX_m_Val_3_21_fu_554_p1, l_valX_m_Val_3_22_fu_629_p1, l_valX_m_Val_3_23_fu_704_p1, l_valX_m_Val_3_24_fu_779_p1, l_valX_m_Val_3_25_fu_854_p1, l_valX_m_Val_3_26_fu_929_p1, l_valX_m_Val_3_27_fu_1004_p1, l_valX_m_Val_3_28_fu_1079_p1, l_valX_m_Val_3_29_fu_1154_p1, l_valX_m_Val_3_30_fu_1229_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_30_fu_1229_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_29_fu_1154_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_28_fu_1079_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_27_fu_1004_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_26_fu_929_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_25_fu_854_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_24_fu_779_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_23_fu_704_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_22_fu_629_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_21_fu_554_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_20_fu_479_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_19_fu_404_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_18_fu_329_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_17_fu_283_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_16_fu_237_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_65_p0 <= l_valX_m_Val_3_fu_191_p1;
        else 
            grp_fu_65_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_65_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, bitcast_ln102_132_fu_210_p1, bitcast_ln102_140_fu_256_p1, bitcast_ln102_148_fu_302_p1, bitcast_ln102_156_fu_348_p1, bitcast_ln102_164_fu_423_p1, bitcast_ln102_172_fu_498_p1, bitcast_ln102_180_fu_573_p1, bitcast_ln102_188_fu_648_p1, bitcast_ln102_196_fu_723_p1, bitcast_ln102_204_fu_798_p1, bitcast_ln102_212_fu_873_p1, bitcast_ln102_220_fu_948_p1, bitcast_ln102_228_fu_1023_p1, bitcast_ln102_236_fu_1098_p1, bitcast_ln102_244_fu_1173_p1, bitcast_ln102_252_fu_1248_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_65_p1 <= bitcast_ln102_252_fu_1248_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_65_p1 <= bitcast_ln102_244_fu_1173_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_65_p1 <= bitcast_ln102_236_fu_1098_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_65_p1 <= bitcast_ln102_228_fu_1023_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_65_p1 <= bitcast_ln102_220_fu_948_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_65_p1 <= bitcast_ln102_212_fu_873_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_65_p1 <= bitcast_ln102_204_fu_798_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_65_p1 <= bitcast_ln102_196_fu_723_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_65_p1 <= bitcast_ln102_188_fu_648_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_65_p1 <= bitcast_ln102_180_fu_573_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_65_p1 <= bitcast_ln102_172_fu_498_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_65_p1 <= bitcast_ln102_164_fu_423_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_65_p1 <= bitcast_ln102_156_fu_348_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_65_p1 <= bitcast_ln102_148_fu_302_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_65_p1 <= bitcast_ln102_140_fu_256_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_65_p1 <= bitcast_ln102_132_fu_210_p1;
        else 
            grp_fu_65_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(l_mulStr1_full_n, ap_CS_fsm_state21)
    begin
        if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    l_mulStr1_blk_n_assign_proc : process(l_mulStr1_full_n, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            l_mulStr1_blk_n <= l_mulStr1_full_n;
        else 
            l_mulStr1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    l_mulStr1_din_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, p_Result_2_fu_377_p5, p_Result_14_1_fu_452_p5, p_Result_14_2_fu_527_p5, p_Result_14_3_fu_602_p5, p_Result_14_4_fu_677_p5, p_Result_14_5_fu_752_p5, p_Result_14_6_fu_827_p5, p_Result_14_7_fu_902_p5, p_Result_14_8_fu_977_p5, p_Result_14_9_fu_1052_p5, p_Result_14_10_fu_1127_p5, p_Result_14_11_fu_1202_p5, p_Result_14_12_fu_1269_p5, p_Result_14_13_fu_1298_p5, p_Result_14_14_fu_1327_p5, p_Result_14_s_fu_1356_p5)
    begin
        if (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            l_mulStr1_din <= p_Result_14_s_fu_1356_p5;
        elsif (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            l_mulStr1_din <= p_Result_14_14_fu_1327_p5;
        elsif (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            l_mulStr1_din <= p_Result_14_13_fu_1298_p5;
        elsif (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            l_mulStr1_din <= p_Result_14_12_fu_1269_p5;
        elsif (((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            l_mulStr1_din <= p_Result_14_11_fu_1202_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            l_mulStr1_din <= p_Result_14_10_fu_1127_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            l_mulStr1_din <= p_Result_14_9_fu_1052_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            l_mulStr1_din <= p_Result_14_8_fu_977_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            l_mulStr1_din <= p_Result_14_7_fu_902_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            l_mulStr1_din <= p_Result_14_6_fu_827_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            l_mulStr1_din <= p_Result_14_5_fu_752_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            l_mulStr1_din <= p_Result_14_4_fu_677_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            l_mulStr1_din <= p_Result_14_3_fu_602_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            l_mulStr1_din <= p_Result_14_2_fu_527_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            l_mulStr1_din <= p_Result_14_1_fu_452_p5;
        elsif ((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            l_mulStr1_din <= p_Result_2_fu_377_p5;
        else 
            l_mulStr1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    l_mulStr1_write_assign_proc : process(str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if ((((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_mulStr1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            l_mulStr1_write <= ap_const_logic_1;
        else 
            l_mulStr1_write <= ap_const_logic_0;
        end if; 
    end process;

    l_valX_m_Val_0_16_fu_223_p1 <= trunc_ln674_33_reg_1419;
    l_valX_m_Val_0_17_fu_269_p1 <= trunc_ln674_35_reg_1469;
    l_valX_m_Val_0_18_fu_315_p1 <= trunc_ln674_37_reg_1519;
    l_valX_m_Val_0_19_fu_390_p1 <= trunc_ln674_39_reg_1569;
    l_valX_m_Val_0_20_fu_465_p1 <= trunc_ln674_41_reg_1619;
    l_valX_m_Val_0_21_fu_540_p1 <= trunc_ln674_43_reg_1669;
    l_valX_m_Val_0_22_fu_615_p1 <= trunc_ln674_45_reg_1719;
    l_valX_m_Val_0_23_fu_690_p1 <= trunc_ln674_47_reg_1769;
    l_valX_m_Val_0_24_fu_765_p1 <= trunc_ln674_49_reg_1819;
    l_valX_m_Val_0_25_fu_840_p1 <= trunc_ln674_51_reg_1869;
    l_valX_m_Val_0_26_fu_915_p1 <= trunc_ln674_53_reg_1919;
    l_valX_m_Val_0_27_fu_990_p1 <= trunc_ln674_55_reg_1969;
    l_valX_m_Val_0_28_fu_1065_p1 <= trunc_ln674_57_reg_2019;
    l_valX_m_Val_0_29_fu_1140_p1 <= trunc_ln674_59_reg_2069;
    l_valX_m_Val_0_30_fu_1215_p1 <= trunc_ln674_61_reg_2119;
    l_valX_m_Val_0_fu_177_p1 <= trunc_ln674_reg_1369;
    l_valX_m_Val_1_16_fu_227_p1 <= reg_129;
    l_valX_m_Val_1_17_fu_273_p1 <= reg_129;
    l_valX_m_Val_1_18_fu_319_p1 <= reg_129;
    l_valX_m_Val_1_19_fu_394_p1 <= reg_129;
    l_valX_m_Val_1_20_fu_469_p1 <= reg_129;
    l_valX_m_Val_1_21_fu_544_p1 <= reg_129;
    l_valX_m_Val_1_22_fu_619_p1 <= reg_129;
    l_valX_m_Val_1_23_fu_694_p1 <= reg_129;
    l_valX_m_Val_1_24_fu_769_p1 <= reg_129;
    l_valX_m_Val_1_25_fu_844_p1 <= reg_129;
    l_valX_m_Val_1_26_fu_919_p1 <= reg_129;
    l_valX_m_Val_1_27_fu_994_p1 <= reg_129;
    l_valX_m_Val_1_28_fu_1069_p1 <= reg_129;
    l_valX_m_Val_1_29_fu_1144_p1 <= reg_129;
    l_valX_m_Val_1_30_fu_1219_p1 <= reg_129;
    l_valX_m_Val_1_fu_181_p1 <= reg_129;
    l_valX_m_Val_2_16_fu_232_p1 <= reg_133;
    l_valX_m_Val_2_17_fu_278_p1 <= reg_133;
    l_valX_m_Val_2_18_fu_324_p1 <= reg_133;
    l_valX_m_Val_2_19_fu_399_p1 <= reg_133;
    l_valX_m_Val_2_20_fu_474_p1 <= reg_133;
    l_valX_m_Val_2_21_fu_549_p1 <= reg_133;
    l_valX_m_Val_2_22_fu_624_p1 <= reg_133;
    l_valX_m_Val_2_23_fu_699_p1 <= reg_133;
    l_valX_m_Val_2_24_fu_774_p1 <= reg_133;
    l_valX_m_Val_2_25_fu_849_p1 <= reg_133;
    l_valX_m_Val_2_26_fu_924_p1 <= reg_133;
    l_valX_m_Val_2_27_fu_999_p1 <= reg_133;
    l_valX_m_Val_2_28_fu_1074_p1 <= reg_133;
    l_valX_m_Val_2_29_fu_1149_p1 <= reg_133;
    l_valX_m_Val_2_30_fu_1224_p1 <= reg_133;
    l_valX_m_Val_2_fu_186_p1 <= reg_133;
    l_valX_m_Val_3_16_fu_237_p1 <= reg_137;
    l_valX_m_Val_3_17_fu_283_p1 <= reg_137;
    l_valX_m_Val_3_18_fu_329_p1 <= reg_137;
    l_valX_m_Val_3_19_fu_404_p1 <= reg_137;
    l_valX_m_Val_3_20_fu_479_p1 <= reg_137;
    l_valX_m_Val_3_21_fu_554_p1 <= reg_137;
    l_valX_m_Val_3_22_fu_629_p1 <= reg_137;
    l_valX_m_Val_3_23_fu_704_p1 <= reg_137;
    l_valX_m_Val_3_24_fu_779_p1 <= reg_137;
    l_valX_m_Val_3_25_fu_854_p1 <= reg_137;
    l_valX_m_Val_3_26_fu_929_p1 <= reg_137;
    l_valX_m_Val_3_27_fu_1004_p1 <= reg_137;
    l_valX_m_Val_3_28_fu_1079_p1 <= reg_137;
    l_valX_m_Val_3_29_fu_1154_p1 <= reg_137;
    l_valX_m_Val_3_30_fu_1229_p1 <= reg_137;
    l_valX_m_Val_3_fu_191_p1 <= reg_137;
    p_Result_14_10_fu_1127_p5 <= (((bitcast_ln123_736_fu_1123_p1 & bitcast_ln123_735_fu_1119_p1) & bitcast_ln123_734_fu_1115_p1) & bitcast_ln123_733_fu_1111_p1);
    p_Result_14_11_fu_1202_p5 <= (((bitcast_ln123_740_fu_1198_p1 & bitcast_ln123_739_fu_1194_p1) & bitcast_ln123_738_fu_1190_p1) & bitcast_ln123_737_fu_1186_p1);
    p_Result_14_12_fu_1269_p5 <= (((bitcast_ln123_744_fu_1265_p1 & bitcast_ln123_743_fu_1261_p1) & bitcast_ln123_742_fu_1257_p1) & bitcast_ln123_741_fu_1253_p1);
    p_Result_14_13_fu_1298_p5 <= (((bitcast_ln123_748_fu_1294_p1 & bitcast_ln123_747_fu_1290_p1) & bitcast_ln123_746_fu_1286_p1) & bitcast_ln123_745_fu_1282_p1);
    p_Result_14_14_fu_1327_p5 <= (((bitcast_ln123_752_fu_1323_p1 & bitcast_ln123_751_fu_1319_p1) & bitcast_ln123_750_fu_1315_p1) & bitcast_ln123_749_fu_1311_p1);
    p_Result_14_1_fu_452_p5 <= (((bitcast_ln123_700_fu_448_p1 & bitcast_ln123_699_fu_444_p1) & bitcast_ln123_698_fu_440_p1) & bitcast_ln123_697_fu_436_p1);
    p_Result_14_2_fu_527_p5 <= (((bitcast_ln123_704_fu_523_p1 & bitcast_ln123_703_fu_519_p1) & bitcast_ln123_702_fu_515_p1) & bitcast_ln123_701_fu_511_p1);
    p_Result_14_3_fu_602_p5 <= (((bitcast_ln123_708_fu_598_p1 & bitcast_ln123_707_fu_594_p1) & bitcast_ln123_706_fu_590_p1) & bitcast_ln123_705_fu_586_p1);
    p_Result_14_4_fu_677_p5 <= (((bitcast_ln123_712_fu_673_p1 & bitcast_ln123_711_fu_669_p1) & bitcast_ln123_710_fu_665_p1) & bitcast_ln123_709_fu_661_p1);
    p_Result_14_5_fu_752_p5 <= (((bitcast_ln123_716_fu_748_p1 & bitcast_ln123_715_fu_744_p1) & bitcast_ln123_714_fu_740_p1) & bitcast_ln123_713_fu_736_p1);
    p_Result_14_6_fu_827_p5 <= (((bitcast_ln123_720_fu_823_p1 & bitcast_ln123_719_fu_819_p1) & bitcast_ln123_718_fu_815_p1) & bitcast_ln123_717_fu_811_p1);
    p_Result_14_7_fu_902_p5 <= (((bitcast_ln123_724_fu_898_p1 & bitcast_ln123_723_fu_894_p1) & bitcast_ln123_722_fu_890_p1) & bitcast_ln123_721_fu_886_p1);
    p_Result_14_8_fu_977_p5 <= (((bitcast_ln123_728_fu_973_p1 & bitcast_ln123_727_fu_969_p1) & bitcast_ln123_726_fu_965_p1) & bitcast_ln123_725_fu_961_p1);
    p_Result_14_9_fu_1052_p5 <= (((bitcast_ln123_732_fu_1048_p1 & bitcast_ln123_731_fu_1044_p1) & bitcast_ln123_730_fu_1040_p1) & bitcast_ln123_729_fu_1036_p1);
    p_Result_14_s_fu_1356_p5 <= (((bitcast_ln123_756_fu_1352_p1 & bitcast_ln123_755_fu_1348_p1) & bitcast_ln123_754_fu_1344_p1) & bitcast_ln123_753_fu_1340_p1);
    p_Result_2_fu_377_p5 <= (((bitcast_ln123_696_fu_373_p1 & bitcast_ln123_695_fu_369_p1) & bitcast_ln123_694_fu_365_p1) & bitcast_ln123_fu_361_p1);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    str_in12_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, str_in12_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            str_in12_blk_n <= str_in12_empty_n;
        else 
            str_in12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    str_in12_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            str_in12_read <= ap_const_logic_1;
        else 
            str_in12_read <= ap_const_logic_0;
        end if; 
    end process;


    str_in23_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, str_in23_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            str_in23_blk_n <= str_in23_empty_n;
        else 
            str_in23_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    str_in23_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, str_in12_empty_n, str_in23_empty_n, l_mulStr1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((l_mulStr1_full_n = ap_const_logic_0) or (str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((str_in23_empty_n = ap_const_logic_0) or (str_in12_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            str_in23_read <= ap_const_logic_1;
        else 
            str_in23_read <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln674_32_fu_173_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_33_fu_215_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_34_fu_219_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_35_fu_261_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_36_fu_265_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_37_fu_307_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_38_fu_311_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_39_fu_353_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_40_fu_357_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_41_fu_428_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_42_fu_432_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_43_fu_503_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_44_fu_507_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_45_fu_578_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_46_fu_582_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_47_fu_653_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_48_fu_657_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_49_fu_728_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_50_fu_732_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_51_fu_803_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_52_fu_807_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_53_fu_878_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_54_fu_882_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_55_fu_953_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_56_fu_957_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_57_fu_1028_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_58_fu_1032_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_59_fu_1103_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_60_fu_1107_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_61_fu_1178_p1 <= str_in12_dout(32 - 1 downto 0);
    trunc_ln674_62_fu_1182_p1 <= str_in23_dout(32 - 1 downto 0);
    trunc_ln674_fu_169_p1 <= str_in12_dout(32 - 1 downto 0);
end behav;
