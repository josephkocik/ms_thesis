-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_lstm_krnl_lut_tanh38 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    c_ti_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_ti_out_full_n : IN STD_LOGIC;
    c_ti_out_write : OUT STD_LOGIC );
end;


architecture behav of krnl_lstm_krnl_lut_tanh38 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_40400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_BF800000 : STD_LOGIC_VECTOR (31 downto 0) := "10111111100000000000000000000000";
    constant ap_const_lv32_C0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000000000000000000000000000";
    constant ap_const_lv32_C0400000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000010000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv64_4006666666666668 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000110011001100110011001100110011001100110011001101000";
    constant ap_const_lv64_400199999999999A : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000001100110011001100110011001100110011001100110011010";
    constant ap_const_lv64_3FE999999999999C : STD_LOGIC_VECTOR (63 downto 0) := "0011111111101001100110011001100110011001100110011001100110011100";
    constant ap_const_lv64_3FC99999999999A0 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111001001100110011001100110011001100110011001100110100000";
    constant ap_const_lv64_BFF3333333333333 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110011001100110011001100110011001100110011001100110011";
    constant ap_const_lv64_BFFCCCCCCCCCCCCC : STD_LOGIC_VECTOR (63 downto 0) := "1011111111111100110011001100110011001100110011001100110011001100";
    constant ap_const_lv64_C006666666666666 : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000110011001100110011001100110011001100110011001100110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv64_3FF3333333333334 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110011001100110011001100110011001100110011001100110100";
    constant ap_const_lv64_BFE9999999999998 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111101001100110011001100110011001100110011001100110011000";
    constant ap_const_lv64_C004CCCCCCCCCCCD : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000100110011001100110011001100110011001100110011001101";
    constant ap_const_lv64_C003333333333333 : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000011001100110011001100110011001100110011001100110011";
    constant ap_const_lv64_4003333333333334 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000011001100110011001100110011001100110011001100110100";
    constant ap_const_lv64_3FD99999999999A0 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111011001100110011001100110011001100110011001100110100000";
    constant ap_const_lv64_BFF9999999999999 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111111001100110011001100110011001100110011001100110011001";
    constant ap_const_lv64_C00199999999999A : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000001100110011001100110011001100110011001100110011010";
    constant ap_const_lv64_BFF6666666666666 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110110011001100110011001100110011001100110011001100110";
    constant ap_const_lv64_BFE3333333333330 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111100011001100110011001100110011001100110011001100110000";
    constant ap_const_lv64_BFD9999999999998 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111011001100110011001100110011001100110011001100110011000";
    constant ap_const_lv64_BFC9999999999990 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111001001100110011001100110011001100110011001100110010000";
    constant ap_const_lv64_3FE3333333333334 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100011001100110011001100110011001100110011001100110100";
    constant ap_const_lv64_3FF6666666666668 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110110011001100110011001100110011001100110011001101000";
    constant ap_const_lv64_3FF999999999999C : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111001100110011001100110011001100110011001100110011100";
    constant ap_const_lv64_3FFCCCCCCCCCCCD0 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111100110011001100110011001100110011001100110011010000";
    constant ap_const_lv64_4004CCCCCCCCCCCE : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000100110011001100110011001100110011001100110011001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tanh_lut_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tanh_lut_ce0 : STD_LOGIC;
    signal tanh_lut_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_ti_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1_i_i_reg_1175 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal or_ln130_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_reg_1210 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal or_ln130_1_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_1_reg_1225 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln220_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln220_reg_1258 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln220_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln220_reg_1263 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln208_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln208_reg_1268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal or_ln208_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_reg_1273 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln190_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln190_reg_1278 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal or_ln190_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln190_reg_1283 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln178_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln178_reg_1288 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal or_ln178_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln178_reg_1293 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln160_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln160_reg_1298 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal or_ln160_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln160_reg_1303 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln148_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln148_reg_1308 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal or_ln148_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln148_reg_1313 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal or_ln136_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln136_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_i_2_fu_773_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal lut_i_2_reg_1328 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln154_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln154_reg_1343 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1349 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1354 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln166_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln166_reg_1359 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1365 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_1370 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_reg_1375 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_1381 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_reg_1391 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_1397 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1402 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln196_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln196_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_1413 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln202_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln202_reg_1423 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_1434 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln214_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln214_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_i_10_fu_1040_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_10_reg_1445 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal lut_i_15_fu_1154_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_15_reg_1450 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln120_4_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal grp_fu_195_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln130_fu_391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_394_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_fu_404_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_1_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln130_1_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_429_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln130_1_fu_439_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln130_3_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_2_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln217_1_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln217_2_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln217_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln205_1_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln205_2_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln208_1_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln205_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln187_1_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln187_2_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln190_1_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln190_2_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln187_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln175_1_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln175_2_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln178_1_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln175_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_1_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_2_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln160_1_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln160_2_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln145_1_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln145_2_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln148_1_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln145_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln133_1_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_1_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln133_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_1_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_i_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln136_fu_714_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln120_fu_710_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_i_1_fu_721_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln139_1_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln142_1_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln142_2_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln142_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln142_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln142_fu_759_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln120_1_fu_728_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln154_1_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln166_1_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_1_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_2_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_1_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln196_1_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln202_1_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln202_2_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln214_1_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_fu_868_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal lut_i_3_fu_875_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln151_1_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln154_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln154_fu_894_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln120_2_fu_881_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln160_fu_914_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_i_4_fu_906_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln163_1_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln163_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln166_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln166_fu_937_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_i_5_fu_921_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln169_1_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln169_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln172_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln172_fu_966_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_i_6_fu_949_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_i_7_fu_978_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln178_fu_990_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln120_3_fu_986_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln181_1_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln181_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln184_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln184_fu_1013_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_8_fu_997_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln190_fu_1033_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_9_fu_1025_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln193_1_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln196_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln196_fu_1056_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln199_1_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln199_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln202_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln202_fu_1084_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_11_fu_1068_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln208_fu_1104_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_12_fu_1096_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln211_1_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln211_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln214_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln214_fu_1127_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_13_fu_1111_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln220_fu_1147_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_14_fu_1139_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_191_ce : STD_LOGIC;
    signal grp_fu_195_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_200_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_224_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_230_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_235_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_253_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_162 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component krnl_lstm_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component krnl_lstm_krnl_lut_tanh38_tanh_lut IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    tanh_lut_U : component krnl_lstm_krnl_lut_tanh38_tanh_lut
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tanh_lut_address0,
        ce0 => tanh_lut_ce0,
        q0 => tanh_lut_q0);

    fpext_32ns_64_2_no_dsp_1_U1701 : component krnl_lstm_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read,
        ce => grp_fu_191_ce,
        dout => grp_fu_191_p1);

    fcmp_32ns_32ns_1_2_no_dsp_1_U1702 : component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read,
        din1 => grp_fu_195_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_195_opcode,
        dout => grp_fu_195_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U1703 : component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read,
        din1 => grp_fu_200_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_200_opcode,
        dout => grp_fu_200_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U1704 : component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_214_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U1705 : component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read,
        din1 => ap_const_lv32_40000000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_219_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1706 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => grp_fu_224_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_224_opcode,
        dout => grp_fu_224_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1707 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => grp_fu_230_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_230_opcode,
        dout => grp_fu_230_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1708 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => grp_fu_235_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_235_opcode,
        dout => grp_fu_235_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1709 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => grp_fu_253_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_253_opcode,
        dout => grp_fu_253_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1710 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFF9999999999999,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_261_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1711 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFF6666666666666,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_266_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1712 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFF6666666666666,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_271_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1713 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFF3333333333333,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_276_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1714 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFE9999999999998,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_281_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1715 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFE3333333333330,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_286_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1716 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFE3333333333330,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_291_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1717 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFD9999999999998,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_296_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1718 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFD9999999999998,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_301_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1719 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFC9999999999990,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_306_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1720 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_BFC9999999999990,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_311_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1721 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FD99999999999A0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_316_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1722 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FE3333333333334,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_321_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1723 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FE3333333333334,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_326_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1724 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FE999999999999C,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_331_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1725 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FF3333333333334,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_336_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1726 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FF6666666666668,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_341_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1727 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FF6666666666668,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_346_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1728 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FF999999999999C,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_351_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1729 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FF999999999999C,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_356_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1730 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FFCCCCCCCCCCCD0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_361_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1731 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_3FFCCCCCCCCCCCD0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_366_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1732 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_4003333333333334,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_371_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1733 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_4004CCCCCCCCCCCE,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_376_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1734 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_4004CCCCCCCCCCCE,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_381_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U1735 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_i_reg_1175,
        din1 => ap_const_lv64_4006666666666668,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_386_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((c_ti_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0))) then
                and_ln136_reg_1318 <= and_ln136_fu_682_p2;
                or_ln136_reg_1323 <= or_ln136_fu_688_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0))) then
                and_ln148_reg_1308 <= and_ln148_fu_654_p2;
                or_ln148_reg_1313 <= or_ln148_fu_660_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0))) then
                and_ln154_reg_1343 <= and_ln154_fu_786_p2;
                tmp_15_reg_1333 <= grp_fu_261_p2;
                tmp_16_reg_1338 <= grp_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0))) then
                and_ln160_reg_1298 <= and_ln160_fu_621_p2;
                or_ln160_reg_1303 <= or_ln160_fu_627_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0))) then
                and_ln166_reg_1359 <= and_ln166_fu_797_p2;
                and_ln172_reg_1375 <= and_ln172_fu_813_p2;
                tmp_23_reg_1349 <= grp_fu_281_p2;
                tmp_24_reg_1354 <= grp_fu_286_p2;
                tmp_27_reg_1365 <= grp_fu_301_p2;
                tmp_28_reg_1370 <= grp_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (or_ln190_reg_1283 = ap_const_lv1_0))) then
                and_ln178_reg_1288 <= and_ln178_fu_583_p2;
                or_ln178_reg_1293 <= or_ln178_fu_589_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (or_ln190_reg_1283 = ap_const_lv1_0))) then
                and_ln184_reg_1391 <= and_ln184_fu_824_p2;
                tmp_35_reg_1381 <= grp_fu_316_p2;
                tmp_36_reg_1386 <= grp_fu_321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                and_ln190_reg_1278 <= and_ln190_fu_550_p2;
                or_ln190_reg_1283 <= or_ln190_fu_556_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                and_ln196_reg_1407 <= and_ln196_fu_835_p2;
                and_ln202_reg_1423 <= and_ln202_fu_851_p2;
                tmp_43_reg_1397 <= grp_fu_336_p2;
                tmp_44_reg_1402 <= grp_fu_341_p2;
                tmp_47_reg_1413 <= grp_fu_356_p2;
                tmp_48_reg_1418 <= grp_fu_361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                and_ln208_reg_1268 <= and_ln208_fu_512_p2;
                or_ln208_reg_1273 <= or_ln208_fu_518_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                and_ln214_reg_1439 <= and_ln214_fu_862_p2;
                tmp_55_reg_1429 <= grp_fu_371_p2;
                tmp_56_reg_1434 <= grp_fu_376_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                and_ln220_reg_1258 <= and_ln220_fu_479_p2;
                or_ln130_1_reg_1225 <= or_ln130_1_fu_455_p2;
                or_ln130_reg_1210 <= or_ln130_fu_420_p2;
                or_ln220_reg_1263 <= or_ln220_fu_485_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                conv1_i_i_reg_1175 <= grp_fu_191_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                lut_i_10_reg_1445 <= lut_i_10_fu_1040_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                lut_i_15_reg_1450 <= lut_i_15_fu_1154_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0))) then
                lut_i_2_reg_1328 <= lut_i_2_fu_773_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, c_ti_out_full_n, ap_CS_fsm_state22)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((c_ti_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    and_ln130_1_fu_699_p2 <= (or_ln130_1_reg_1225 and grp_fu_224_p2);
    and_ln130_fu_694_p2 <= (or_ln130_reg_1210 and grp_fu_195_p2);
    and_ln133_1_fu_666_p2 <= (or_ln130_1_reg_1225 and grp_fu_224_p2);
    and_ln133_fu_671_p2 <= (grp_fu_230_p2 and and_ln133_1_fu_666_p2);
    and_ln136_1_fu_677_p2 <= (or_ln130_1_reg_1225 and grp_fu_235_p2);
    and_ln136_fu_682_p2 <= (grp_fu_253_p2 and and_ln136_1_fu_677_p2);
    and_ln139_1_fu_732_p2 <= (or_ln130_1_reg_1225 and grp_fu_230_p2);
    and_ln139_fu_737_p2 <= (grp_fu_235_p2 and and_ln139_1_fu_732_p2);
    and_ln142_1_fu_743_p2 <= (or_ln130_1_reg_1225 and grp_fu_253_p2);
    and_ln142_2_fu_748_p2 <= (or_ln130_reg_1210 and grp_fu_200_p2);
    and_ln142_fu_753_p2 <= (and_ln142_2_fu_748_p2 and and_ln142_1_fu_743_p2);
    and_ln145_1_fu_633_p2 <= (or_ln130_reg_1210 and grp_fu_195_p2);
    and_ln145_2_fu_638_p2 <= (or_ln130_1_reg_1225 and grp_fu_224_p2);
    and_ln145_fu_643_p2 <= (and_ln145_2_fu_638_p2 and and_ln145_1_fu_633_p2);
    and_ln148_1_fu_649_p2 <= (or_ln130_1_reg_1225 and grp_fu_230_p2);
    and_ln148_fu_654_p2 <= (grp_fu_235_p2 and and_ln148_1_fu_649_p2);
    and_ln151_1_fu_885_p2 <= (tmp_15_reg_1333 and or_ln130_1_reg_1225);
    and_ln151_fu_889_p2 <= (tmp_16_reg_1338 and and_ln151_1_fu_885_p2);
    and_ln154_1_fu_781_p2 <= (or_ln130_1_reg_1225 and grp_fu_271_p2);
    and_ln154_fu_786_p2 <= (grp_fu_276_p2 and and_ln154_1_fu_781_p2);
    and_ln157_1_fu_595_p2 <= (or_ln130_1_reg_1225 and grp_fu_224_p2);
    and_ln157_2_fu_600_p2 <= (or_ln130_reg_1210 and grp_fu_195_p2);
    and_ln157_fu_605_p2 <= (and_ln157_2_fu_600_p2 and and_ln157_1_fu_595_p2);
    and_ln160_1_fu_611_p2 <= (or_ln130_reg_1210 and grp_fu_200_p2);
    and_ln160_2_fu_616_p2 <= (or_ln130_1_reg_1225 and grp_fu_230_p2);
    and_ln160_fu_621_p2 <= (and_ln160_2_fu_616_p2 and and_ln160_1_fu_611_p2);
    and_ln163_1_fu_928_p2 <= (tmp_23_reg_1349 and or_ln130_1_reg_1225);
    and_ln163_fu_932_p2 <= (tmp_24_reg_1354 and and_ln163_1_fu_928_p2);
    and_ln166_1_fu_792_p2 <= (or_ln130_1_reg_1225 and grp_fu_291_p2);
    and_ln166_fu_797_p2 <= (grp_fu_296_p2 and and_ln166_1_fu_792_p2);
    and_ln169_1_fu_957_p2 <= (tmp_27_reg_1365 and or_ln130_1_reg_1225);
    and_ln169_fu_961_p2 <= (tmp_28_reg_1370 and and_ln169_1_fu_957_p2);
    and_ln172_1_fu_803_p2 <= (or_ln130_1_reg_1225 and grp_fu_311_p2);
    and_ln172_2_fu_808_p2 <= (or_ln130_reg_1210 and grp_fu_214_p2);
    and_ln172_fu_813_p2 <= (and_ln172_2_fu_808_p2 and and_ln172_1_fu_803_p2);
    and_ln175_1_fu_562_p2 <= (or_ln130_reg_1210 and grp_fu_195_p2);
    and_ln175_2_fu_567_p2 <= (or_ln130_1_reg_1225 and grp_fu_224_p2);
    and_ln175_fu_572_p2 <= (and_ln175_2_fu_567_p2 and and_ln175_1_fu_562_p2);
    and_ln178_1_fu_578_p2 <= (or_ln130_1_reg_1225 and grp_fu_230_p2);
    and_ln178_fu_583_p2 <= (grp_fu_235_p2 and and_ln178_1_fu_578_p2);
    and_ln181_1_fu_1004_p2 <= (tmp_35_reg_1381 and or_ln130_1_reg_1225);
    and_ln181_fu_1008_p2 <= (tmp_36_reg_1386 and and_ln181_1_fu_1004_p2);
    and_ln184_1_fu_819_p2 <= (or_ln130_1_reg_1225 and grp_fu_326_p2);
    and_ln184_fu_824_p2 <= (grp_fu_331_p2 and and_ln184_1_fu_819_p2);
    and_ln187_1_fu_524_p2 <= (or_ln130_1_reg_1225 and grp_fu_224_p2);
    and_ln187_2_fu_529_p2 <= (or_ln130_reg_1210 and grp_fu_195_p2);
    and_ln187_fu_534_p2 <= (and_ln187_2_fu_529_p2 and and_ln187_1_fu_524_p2);
    and_ln190_1_fu_540_p2 <= (or_ln130_reg_1210 and grp_fu_200_p2);
    and_ln190_2_fu_545_p2 <= (or_ln130_1_reg_1225 and grp_fu_230_p2);
    and_ln190_fu_550_p2 <= (and_ln190_2_fu_545_p2 and and_ln190_1_fu_540_p2);
    and_ln193_1_fu_1047_p2 <= (tmp_43_reg_1397 and or_ln130_1_reg_1225);
    and_ln193_fu_1051_p2 <= (tmp_44_reg_1402 and and_ln193_1_fu_1047_p2);
    and_ln196_1_fu_830_p2 <= (or_ln130_1_reg_1225 and grp_fu_346_p2);
    and_ln196_fu_835_p2 <= (grp_fu_351_p2 and and_ln196_1_fu_830_p2);
    and_ln199_1_fu_1075_p2 <= (tmp_47_reg_1413 and or_ln130_1_reg_1225);
    and_ln199_fu_1079_p2 <= (tmp_48_reg_1418 and and_ln199_1_fu_1075_p2);
    and_ln202_1_fu_841_p2 <= (or_ln130_1_reg_1225 and grp_fu_366_p2);
    and_ln202_2_fu_846_p2 <= (or_ln130_reg_1210 and grp_fu_219_p2);
    and_ln202_fu_851_p2 <= (and_ln202_2_fu_846_p2 and and_ln202_1_fu_841_p2);
    and_ln205_1_fu_491_p2 <= (or_ln130_reg_1210 and grp_fu_195_p2);
    and_ln205_2_fu_496_p2 <= (or_ln130_1_reg_1225 and grp_fu_224_p2);
    and_ln205_fu_501_p2 <= (and_ln205_2_fu_496_p2 and and_ln205_1_fu_491_p2);
    and_ln208_1_fu_507_p2 <= (or_ln130_1_reg_1225 and grp_fu_230_p2);
    and_ln208_fu_512_p2 <= (grp_fu_235_p2 and and_ln208_1_fu_507_p2);
    and_ln211_1_fu_1118_p2 <= (tmp_55_reg_1429 and or_ln130_1_reg_1225);
    and_ln211_fu_1122_p2 <= (tmp_56_reg_1434 and and_ln211_1_fu_1118_p2);
    and_ln214_1_fu_857_p2 <= (or_ln130_1_reg_1225 and grp_fu_381_p2);
    and_ln214_fu_862_p2 <= (grp_fu_386_p2 and and_ln214_1_fu_857_p2);
    and_ln217_1_fu_461_p2 <= (or_ln130_1_fu_455_p2 and grp_fu_224_p2);
    and_ln217_2_fu_467_p2 <= (or_ln130_fu_420_p2 and grp_fu_195_p2);
    and_ln217_fu_473_p2 <= (and_ln217_2_fu_467_p2 and and_ln217_1_fu_461_p2);
    and_ln220_fu_479_p2 <= (or_ln130_fu_420_p2 and grp_fu_200_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_condition_162_assign_proc : process(or_ln220_reg_1263, or_ln208_reg_1273, or_ln190_reg_1283, or_ln178_reg_1293, or_ln160_reg_1303, or_ln148_reg_1313)
    begin
                ap_condition_162 <= ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, c_ti_out_full_n, ap_CS_fsm_state22)
    begin
        if (((c_ti_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(c_ti_out_full_n, ap_CS_fsm_state22)
    begin
        if (((c_ti_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln130_1_fu_426_p1 <= conv1_i_i_reg_1175;
    bitcast_ln130_fu_391_p1 <= p_read;

    c_ti_out_blk_n_assign_proc : process(c_ti_out_full_n, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            c_ti_out_blk_n <= c_ti_out_full_n;
        else 
            c_ti_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c_ti_out_din <= tanh_lut_q0;

    c_ti_out_write_assign_proc : process(c_ti_out_full_n, ap_CS_fsm_state22)
    begin
        if (((c_ti_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            c_ti_out_write <= ap_const_logic_1;
        else 
            c_ti_out_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_191_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_191_ce <= ap_const_logic_1;
        else 
            grp_fu_191_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_195_opcode_assign_proc : process(or_ln220_reg_1263, or_ln208_reg_1273, or_ln190_reg_1283, or_ln178_reg_1293, or_ln160_reg_1303, or_ln148_reg_1313, or_ln136_reg_1323, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17)
    begin
        if ((((or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln136_reg_1323 = ap_const_lv1_0) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (or_ln190_reg_1283 = ap_const_lv1_0)))) then 
            grp_fu_195_opcode <= ap_const_lv5_3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_fu_195_opcode <= ap_const_lv5_4;
        else 
            grp_fu_195_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_195_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_195_p1 <= ap_const_lv32_C0400000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_195_p1 <= ap_const_lv32_C0000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_195_p1 <= ap_const_lv32_BF800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_195_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_195_p1 <= ap_const_lv32_3F800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_195_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_195_p1 <= ap_const_lv32_40400000;
        else 
            grp_fu_195_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_200_opcode_assign_proc : process(or_ln220_reg_1263, or_ln208_reg_1273, or_ln190_reg_1283, or_ln178_reg_1293, or_ln160_reg_1303, or_ln148_reg_1313, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state17)
    begin
        if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0))) then 
            grp_fu_200_opcode <= ap_const_lv5_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_fu_200_opcode <= ap_const_lv5_3;
        else 
            grp_fu_200_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_200_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_200_p1 <= ap_const_lv32_C0000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_200_p1 <= ap_const_lv32_BF800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_200_p1 <= ap_const_lv32_3F800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_200_p1 <= ap_const_lv32_40400000;
        else 
            grp_fu_200_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_224_opcode_assign_proc : process(or_ln220_reg_1263, or_ln208_reg_1273, or_ln190_reg_1283, or_ln178_reg_1293, or_ln160_reg_1303, or_ln148_reg_1313, or_ln136_reg_1323, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((((or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln136_reg_1323 = ap_const_lv1_0) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (or_ln190_reg_1283 = ap_const_lv1_0)))) then 
            grp_fu_224_opcode <= ap_const_lv5_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_fu_224_opcode <= ap_const_lv5_3;
        else 
            grp_fu_224_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_224_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_224_p1 <= ap_const_lv64_C006666666666666;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_224_p1 <= ap_const_lv64_BFFCCCCCCCCCCCCC;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_224_p1 <= ap_const_lv64_BFF3333333333333;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_224_p1 <= ap_const_lv64_3FC99999999999A0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_224_p1 <= ap_const_lv64_3FE999999999999C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_224_p1 <= ap_const_lv64_400199999999999A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_224_p1 <= ap_const_lv64_4006666666666668;
        else 
            grp_fu_224_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_230_opcode_assign_proc : process(or_ln220_reg_1263, or_ln208_reg_1273, or_ln190_reg_1283, or_ln178_reg_1293, or_ln160_reg_1303, or_ln148_reg_1313, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_fu_230_opcode <= ap_const_lv5_4;
        elsif ((((or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (or_ln190_reg_1283 = ap_const_lv1_0)))) then 
            grp_fu_230_opcode <= ap_const_lv5_3;
        else 
            grp_fu_230_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_230_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_230_p1 <= ap_const_lv64_C003333333333333;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_230_p1 <= ap_const_lv64_C004CCCCCCCCCCCD;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_230_p1 <= ap_const_lv64_BFFCCCCCCCCCCCCC;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_230_p1 <= ap_const_lv64_BFE9999999999998;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_230_p1 <= ap_const_lv64_3FC99999999999A0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_230_p1 <= ap_const_lv64_3FF3333333333334;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_230_p1 <= ap_const_lv64_400199999999999A;
        else 
            grp_fu_230_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_235_opcode_assign_proc : process(or_ln220_reg_1263, or_ln208_reg_1273, or_ln190_reg_1283, or_ln178_reg_1293, or_ln160_reg_1303, or_ln148_reg_1313, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if (((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0))) then 
            grp_fu_235_opcode <= ap_const_lv5_3;
        elsif ((((or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln148_reg_1313 = ap_const_lv1_0) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (or_ln160_reg_1303 = ap_const_lv1_0) and (or_ln178_reg_1293 = ap_const_lv1_0) and (or_ln190_reg_1283 = ap_const_lv1_0)) or ((or_ln208_reg_1273 = ap_const_lv1_0) and (or_ln220_reg_1263 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (or_ln190_reg_1283 = ap_const_lv1_0)))) then 
            grp_fu_235_opcode <= ap_const_lv5_4;
        else 
            grp_fu_235_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_235_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_235_p1 <= ap_const_lv64_C00199999999999A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_235_p1 <= ap_const_lv64_C004CCCCCCCCCCCD;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_235_p1 <= ap_const_lv64_BFF9999999999999;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_235_p1 <= ap_const_lv64_3FD99999999999A0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_235_p1 <= ap_const_lv64_4003333333333334;
        else 
            grp_fu_235_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_253_opcode_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state15, ap_condition_162)
    begin
        if ((ap_const_boolean_1 = ap_condition_162)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                grp_fu_253_opcode <= ap_const_lv5_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                grp_fu_253_opcode <= ap_const_lv5_4;
            else 
                grp_fu_253_opcode <= "XXXXX";
            end if;
        else 
            grp_fu_253_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_253_p1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_253_p1 <= ap_const_lv64_C00199999999999A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_253_p1 <= ap_const_lv64_C003333333333333;
        else 
            grp_fu_253_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln130_1_fu_414_p2 <= "1" when (trunc_ln130_fu_404_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_2_fu_443_p2 <= "0" when (tmp_2_fu_429_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln130_3_fu_449_p2 <= "1" when (trunc_ln130_1_fu_439_p1 = ap_const_lv52_0) else "0";
    icmp_ln130_fu_408_p2 <= "0" when (tmp_fu_394_p4 = ap_const_lv8_FF) else "1";
    lut_i_10_fu_1040_p3 <= 
        select_ln190_fu_1033_p3 when (or_ln190_reg_1283(0) = '1') else 
        lut_i_9_fu_1025_p3;
    lut_i_11_fu_1068_p3 <= 
        select_ln196_fu_1056_p3 when (or_ln196_fu_1063_p2(0) = '1') else 
        lut_i_10_reg_1445;
    lut_i_12_fu_1096_p3 <= 
        select_ln202_fu_1084_p3 when (or_ln202_fu_1091_p2(0) = '1') else 
        lut_i_11_fu_1068_p3;
    lut_i_13_fu_1111_p3 <= 
        select_ln208_fu_1104_p3 when (or_ln208_reg_1273(0) = '1') else 
        lut_i_12_fu_1096_p3;
    lut_i_14_fu_1139_p3 <= 
        select_ln214_fu_1127_p3 when (or_ln214_fu_1134_p2(0) = '1') else 
        lut_i_13_fu_1111_p3;
    lut_i_15_fu_1154_p3 <= 
        select_ln220_fu_1147_p3 when (or_ln220_reg_1263(0) = '1') else 
        lut_i_14_fu_1139_p3;
    lut_i_1_fu_721_p3 <= 
        select_ln136_fu_714_p3 when (or_ln136_reg_1323(0) = '1') else 
        zext_ln120_fu_710_p1;
    lut_i_2_fu_773_p3 <= 
        select_ln142_fu_759_p3 when (or_ln142_fu_767_p2(0) = '1') else 
        zext_ln120_1_fu_728_p1;
    lut_i_3_fu_875_p3 <= 
        select_ln148_fu_868_p3 when (or_ln148_reg_1313(0) = '1') else 
        lut_i_2_reg_1328;
    lut_i_4_fu_906_p3 <= 
        select_ln154_fu_894_p3 when (or_ln154_fu_901_p2(0) = '1') else 
        zext_ln120_2_fu_881_p1;
    lut_i_5_fu_921_p3 <= 
        select_ln160_fu_914_p3 when (or_ln160_reg_1303(0) = '1') else 
        lut_i_4_fu_906_p3;
    lut_i_6_fu_949_p3 <= 
        select_ln166_fu_937_p3 when (or_ln166_fu_944_p2(0) = '1') else 
        lut_i_5_fu_921_p3;
    lut_i_7_fu_978_p3 <= 
        select_ln172_fu_966_p3 when (or_ln172_fu_973_p2(0) = '1') else 
        lut_i_6_fu_949_p3;
    lut_i_8_fu_997_p3 <= 
        select_ln178_fu_990_p3 when (or_ln178_reg_1293(0) = '1') else 
        zext_ln120_3_fu_986_p1;
    lut_i_9_fu_1025_p3 <= 
        select_ln184_fu_1013_p3 when (or_ln184_fu_1020_p2(0) = '1') else 
        lut_i_8_fu_997_p3;
    lut_i_fu_704_p2 <= (and_ln130_fu_694_p2 and and_ln130_1_fu_699_p2);
    or_ln130_1_fu_455_p2 <= (icmp_ln130_3_fu_449_p2 or icmp_ln130_2_fu_443_p2);
    or_ln130_fu_420_p2 <= (icmp_ln130_fu_408_p2 or icmp_ln130_1_fu_414_p2);
    or_ln136_fu_688_p2 <= (and_ln136_fu_682_p2 or and_ln133_fu_671_p2);
    or_ln142_fu_767_p2 <= (and_ln142_fu_753_p2 or and_ln139_fu_737_p2);
    or_ln148_fu_660_p2 <= (and_ln148_fu_654_p2 or and_ln145_fu_643_p2);
    or_ln154_fu_901_p2 <= (and_ln154_reg_1343 or and_ln151_fu_889_p2);
    or_ln160_fu_627_p2 <= (and_ln160_fu_621_p2 or and_ln157_fu_605_p2);
    or_ln166_fu_944_p2 <= (and_ln166_reg_1359 or and_ln163_fu_932_p2);
    or_ln172_fu_973_p2 <= (and_ln172_reg_1375 or and_ln169_fu_961_p2);
    or_ln178_fu_589_p2 <= (and_ln178_fu_583_p2 or and_ln175_fu_572_p2);
    or_ln184_fu_1020_p2 <= (and_ln184_reg_1391 or and_ln181_fu_1008_p2);
    or_ln190_fu_556_p2 <= (and_ln190_fu_550_p2 or and_ln187_fu_534_p2);
    or_ln196_fu_1063_p2 <= (and_ln196_reg_1407 or and_ln193_fu_1051_p2);
    or_ln202_fu_1091_p2 <= (and_ln202_reg_1423 or and_ln199_fu_1079_p2);
    or_ln208_fu_518_p2 <= (and_ln208_fu_512_p2 or and_ln205_fu_501_p2);
    or_ln214_fu_1134_p2 <= (and_ln214_reg_1439 or and_ln211_fu_1122_p2);
    or_ln220_fu_485_p2 <= (and_ln220_fu_479_p2 or and_ln217_fu_473_p2);
    select_ln136_fu_714_p3 <= 
        ap_const_lv2_3 when (and_ln136_reg_1318(0) = '1') else 
        ap_const_lv2_2;
    select_ln142_fu_759_p3 <= 
        ap_const_lv3_5 when (and_ln142_fu_753_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln148_fu_868_p3 <= 
        ap_const_lv3_7 when (and_ln148_reg_1308(0) = '1') else 
        ap_const_lv3_6;
    select_ln154_fu_894_p3 <= 
        ap_const_lv4_9 when (and_ln154_reg_1343(0) = '1') else 
        ap_const_lv4_8;
    select_ln160_fu_914_p3 <= 
        ap_const_lv4_B when (and_ln160_reg_1298(0) = '1') else 
        ap_const_lv4_A;
    select_ln166_fu_937_p3 <= 
        ap_const_lv4_D when (and_ln166_reg_1359(0) = '1') else 
        ap_const_lv4_C;
    select_ln172_fu_966_p3 <= 
        ap_const_lv4_F when (and_ln172_reg_1375(0) = '1') else 
        ap_const_lv4_E;
    select_ln178_fu_990_p3 <= 
        ap_const_lv5_11 when (and_ln178_reg_1288(0) = '1') else 
        ap_const_lv5_10;
    select_ln184_fu_1013_p3 <= 
        ap_const_lv5_13 when (and_ln184_reg_1391(0) = '1') else 
        ap_const_lv5_12;
    select_ln190_fu_1033_p3 <= 
        ap_const_lv5_15 when (and_ln190_reg_1278(0) = '1') else 
        ap_const_lv5_14;
    select_ln196_fu_1056_p3 <= 
        ap_const_lv5_17 when (and_ln196_reg_1407(0) = '1') else 
        ap_const_lv5_16;
    select_ln202_fu_1084_p3 <= 
        ap_const_lv5_19 when (and_ln202_reg_1423(0) = '1') else 
        ap_const_lv5_18;
    select_ln208_fu_1104_p3 <= 
        ap_const_lv5_1B when (and_ln208_reg_1268(0) = '1') else 
        ap_const_lv5_1A;
    select_ln214_fu_1127_p3 <= 
        ap_const_lv5_1D when (and_ln214_reg_1439(0) = '1') else 
        ap_const_lv5_1C;
    select_ln220_fu_1147_p3 <= 
        ap_const_lv5_1F when (and_ln220_reg_1258(0) = '1') else 
        ap_const_lv5_1E;
    tanh_lut_address0 <= zext_ln120_4_fu_1161_p1(5 - 1 downto 0);

    tanh_lut_ce0_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            tanh_lut_ce0 <= ap_const_logic_1;
        else 
            tanh_lut_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_429_p4 <= bitcast_ln130_1_fu_426_p1(62 downto 52);
    tmp_fu_394_p4 <= bitcast_ln130_fu_391_p1(30 downto 23);
    trunc_ln130_1_fu_439_p1 <= bitcast_ln130_1_fu_426_p1(52 - 1 downto 0);
    trunc_ln130_fu_404_p1 <= bitcast_ln130_fu_391_p1(23 - 1 downto 0);
    zext_ln120_1_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_1_fu_721_p3),3));
    zext_ln120_2_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_3_fu_875_p3),4));
    zext_ln120_3_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_7_fu_978_p3),5));
    zext_ln120_4_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_15_reg_1450),32));
    zext_ln120_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_fu_704_p2),2));
end behav;
