// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_lstm_readVec2Stream_float_32u_155 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        str_in12_din,
        str_in12_full_n,
        str_in12_write,
        p_in_offset_dout,
        p_in_offset_empty_n,
        p_in_offset_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [1023:0] str_in12_din;
input   str_in12_full_n;
output   str_in12_write;
input  [5:0] p_in_offset_dout;
input   p_in_offset_empty_n;
output   p_in_offset_read;

reg ap_done;
reg ap_idle;
reg start_write;
reg str_in12_write;
reg p_in_offset_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [5:0] W_hc_0_address0;
reg    W_hc_0_ce0;
wire   [31:0] W_hc_0_q0;
wire   [5:0] W_hc_1_address0;
reg    W_hc_1_ce0;
wire   [31:0] W_hc_1_q0;
wire   [5:0] W_hc_2_address0;
reg    W_hc_2_ce0;
wire   [31:0] W_hc_2_q0;
wire   [5:0] W_hc_3_address0;
reg    W_hc_3_ce0;
wire   [31:0] W_hc_3_q0;
wire   [5:0] W_hc_4_address0;
reg    W_hc_4_ce0;
wire   [31:0] W_hc_4_q0;
wire   [5:0] W_hc_5_address0;
reg    W_hc_5_ce0;
wire   [31:0] W_hc_5_q0;
wire   [5:0] W_hc_6_address0;
reg    W_hc_6_ce0;
wire   [31:0] W_hc_6_q0;
wire   [5:0] W_hc_7_address0;
reg    W_hc_7_ce0;
wire   [31:0] W_hc_7_q0;
wire   [5:0] W_hc_8_address0;
reg    W_hc_8_ce0;
wire   [31:0] W_hc_8_q0;
wire   [5:0] W_hc_9_address0;
reg    W_hc_9_ce0;
wire   [31:0] W_hc_9_q0;
wire   [5:0] W_hc_10_address0;
reg    W_hc_10_ce0;
wire   [31:0] W_hc_10_q0;
wire   [5:0] W_hc_11_address0;
reg    W_hc_11_ce0;
wire   [31:0] W_hc_11_q0;
wire   [5:0] W_hc_12_address0;
reg    W_hc_12_ce0;
wire   [31:0] W_hc_12_q0;
wire   [5:0] W_hc_13_address0;
reg    W_hc_13_ce0;
wire   [31:0] W_hc_13_q0;
wire   [5:0] W_hc_14_address0;
reg    W_hc_14_ce0;
wire   [31:0] W_hc_14_q0;
wire   [5:0] W_hc_15_address0;
reg    W_hc_15_ce0;
wire   [31:0] W_hc_15_q0;
wire   [5:0] W_hc_16_address0;
reg    W_hc_16_ce0;
wire   [31:0] W_hc_16_q0;
wire   [5:0] W_hc_17_address0;
reg    W_hc_17_ce0;
wire   [31:0] W_hc_17_q0;
wire   [5:0] W_hc_18_address0;
reg    W_hc_18_ce0;
wire   [31:0] W_hc_18_q0;
wire   [5:0] W_hc_19_address0;
reg    W_hc_19_ce0;
wire   [31:0] W_hc_19_q0;
wire   [5:0] W_hc_20_address0;
reg    W_hc_20_ce0;
wire   [31:0] W_hc_20_q0;
wire   [5:0] W_hc_21_address0;
reg    W_hc_21_ce0;
wire   [31:0] W_hc_21_q0;
wire   [5:0] W_hc_22_address0;
reg    W_hc_22_ce0;
wire   [31:0] W_hc_22_q0;
wire   [5:0] W_hc_23_address0;
reg    W_hc_23_ce0;
wire   [31:0] W_hc_23_q0;
wire   [5:0] W_hc_24_address0;
reg    W_hc_24_ce0;
wire   [31:0] W_hc_24_q0;
wire   [5:0] W_hc_25_address0;
reg    W_hc_25_ce0;
wire   [31:0] W_hc_25_q0;
wire   [5:0] W_hc_26_address0;
reg    W_hc_26_ce0;
wire   [31:0] W_hc_26_q0;
wire   [5:0] W_hc_27_address0;
reg    W_hc_27_ce0;
wire   [31:0] W_hc_27_q0;
wire   [5:0] W_hc_28_address0;
reg    W_hc_28_ce0;
wire   [31:0] W_hc_28_q0;
wire   [5:0] W_hc_29_address0;
reg    W_hc_29_ce0;
wire   [31:0] W_hc_29_q0;
wire   [5:0] W_hc_30_address0;
reg    W_hc_30_ce0;
wire   [31:0] W_hc_30_q0;
wire   [5:0] W_hc_31_address0;
reg    W_hc_31_ce0;
wire   [31:0] W_hc_31_q0;
reg    str_in12_blk_n;
wire    ap_CS_fsm_state2;
reg    p_in_offset_blk_n;
wire   [31:0] p_in_offset_cast_i_fu_521_p1;
reg    ap_block_state1;
wire   [31:0] l_val_V_217_fu_681_p1;
wire   [31:0] l_val_V_216_fu_677_p1;
wire   [31:0] l_val_V_215_fu_673_p1;
wire   [31:0] l_val_V_214_fu_669_p1;
wire   [31:0] l_val_V_213_fu_665_p1;
wire   [31:0] l_val_V_212_fu_661_p1;
wire   [31:0] l_val_V_211_fu_657_p1;
wire   [31:0] l_val_V_210_fu_653_p1;
wire   [31:0] l_val_V_209_fu_649_p1;
wire   [31:0] l_val_V_208_fu_645_p1;
wire   [31:0] l_val_V_207_fu_641_p1;
wire   [31:0] l_val_V_206_fu_637_p1;
wire   [31:0] l_val_V_205_fu_633_p1;
wire   [31:0] l_val_V_204_fu_629_p1;
wire   [31:0] l_val_V_203_fu_625_p1;
wire   [31:0] l_val_V_202_fu_621_p1;
wire   [31:0] l_val_V_201_fu_617_p1;
wire   [31:0] l_val_V_200_fu_613_p1;
wire   [31:0] l_val_V_199_fu_609_p1;
wire   [31:0] l_val_V_198_fu_605_p1;
wire   [31:0] l_val_V_197_fu_601_p1;
wire   [31:0] l_val_V_196_fu_597_p1;
wire   [31:0] l_val_V_195_fu_593_p1;
wire   [31:0] l_val_V_194_fu_589_p1;
wire   [31:0] l_val_V_193_fu_585_p1;
wire   [31:0] l_val_V_192_fu_581_p1;
wire   [31:0] l_val_V_191_fu_577_p1;
wire   [31:0] l_val_V_190_fu_573_p1;
wire   [31:0] l_val_V_189_fu_569_p1;
wire   [31:0] l_val_V_188_fu_565_p1;
wire   [31:0] l_val_V_187_fu_561_p1;
wire   [31:0] l_val_V_fu_557_p1;
reg   [1:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
end

krnl_lstm_readVec2Stream_float_32u_155_W_hc_0 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_0_address0),
    .ce0(W_hc_0_ce0),
    .q0(W_hc_0_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_1 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_1_address0),
    .ce0(W_hc_1_ce0),
    .q0(W_hc_1_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_2_address0),
    .ce0(W_hc_2_ce0),
    .q0(W_hc_2_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_3 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_3_address0),
    .ce0(W_hc_3_ce0),
    .q0(W_hc_3_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_4 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_4_address0),
    .ce0(W_hc_4_ce0),
    .q0(W_hc_4_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_5 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_5_address0),
    .ce0(W_hc_5_ce0),
    .q0(W_hc_5_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_6 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_6_address0),
    .ce0(W_hc_6_ce0),
    .q0(W_hc_6_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_7 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_7_address0),
    .ce0(W_hc_7_ce0),
    .q0(W_hc_7_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_8 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_8_address0),
    .ce0(W_hc_8_ce0),
    .q0(W_hc_8_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_9 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_9_address0),
    .ce0(W_hc_9_ce0),
    .q0(W_hc_9_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_10 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_10_address0),
    .ce0(W_hc_10_ce0),
    .q0(W_hc_10_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_11 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_11_address0),
    .ce0(W_hc_11_ce0),
    .q0(W_hc_11_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_12 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_12_address0),
    .ce0(W_hc_12_ce0),
    .q0(W_hc_12_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_13 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_13_address0),
    .ce0(W_hc_13_ce0),
    .q0(W_hc_13_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_14 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_14_address0),
    .ce0(W_hc_14_ce0),
    .q0(W_hc_14_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_15 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_15_address0),
    .ce0(W_hc_15_ce0),
    .q0(W_hc_15_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_16 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_16_address0),
    .ce0(W_hc_16_ce0),
    .q0(W_hc_16_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_17 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_17_address0),
    .ce0(W_hc_17_ce0),
    .q0(W_hc_17_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_18 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_18_address0),
    .ce0(W_hc_18_ce0),
    .q0(W_hc_18_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_19 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_19_address0),
    .ce0(W_hc_19_ce0),
    .q0(W_hc_19_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_20 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_20_address0),
    .ce0(W_hc_20_ce0),
    .q0(W_hc_20_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_21 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_21_address0),
    .ce0(W_hc_21_ce0),
    .q0(W_hc_21_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_22 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_22_address0),
    .ce0(W_hc_22_ce0),
    .q0(W_hc_22_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_23 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_23_address0),
    .ce0(W_hc_23_ce0),
    .q0(W_hc_23_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_24 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_24_address0),
    .ce0(W_hc_24_ce0),
    .q0(W_hc_24_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_25 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_25_address0),
    .ce0(W_hc_25_ce0),
    .q0(W_hc_25_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_26 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_26_address0),
    .ce0(W_hc_26_ce0),
    .q0(W_hc_26_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_27 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_27_address0),
    .ce0(W_hc_27_ce0),
    .q0(W_hc_27_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_28 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_28_address0),
    .ce0(W_hc_28_ce0),
    .q0(W_hc_28_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_29 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_29_address0),
    .ce0(W_hc_29_ce0),
    .q0(W_hc_29_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_30 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_30_address0),
    .ce0(W_hc_30_ce0),
    .q0(W_hc_30_q0)
);

krnl_lstm_readVec2Stream_float_32u_155_W_hc_31 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
W_hc_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_hc_31_address0),
    .ce0(W_hc_31_ce0),
    .q0(W_hc_31_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_0_ce0 = 1'b1;
    end else begin
        W_hc_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_10_ce0 = 1'b1;
    end else begin
        W_hc_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_11_ce0 = 1'b1;
    end else begin
        W_hc_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_12_ce0 = 1'b1;
    end else begin
        W_hc_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_13_ce0 = 1'b1;
    end else begin
        W_hc_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_14_ce0 = 1'b1;
    end else begin
        W_hc_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_15_ce0 = 1'b1;
    end else begin
        W_hc_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_16_ce0 = 1'b1;
    end else begin
        W_hc_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_17_ce0 = 1'b1;
    end else begin
        W_hc_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_18_ce0 = 1'b1;
    end else begin
        W_hc_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_19_ce0 = 1'b1;
    end else begin
        W_hc_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_1_ce0 = 1'b1;
    end else begin
        W_hc_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_20_ce0 = 1'b1;
    end else begin
        W_hc_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_21_ce0 = 1'b1;
    end else begin
        W_hc_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_22_ce0 = 1'b1;
    end else begin
        W_hc_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_23_ce0 = 1'b1;
    end else begin
        W_hc_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_24_ce0 = 1'b1;
    end else begin
        W_hc_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_25_ce0 = 1'b1;
    end else begin
        W_hc_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_26_ce0 = 1'b1;
    end else begin
        W_hc_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_27_ce0 = 1'b1;
    end else begin
        W_hc_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_28_ce0 = 1'b1;
    end else begin
        W_hc_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_29_ce0 = 1'b1;
    end else begin
        W_hc_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_2_ce0 = 1'b1;
    end else begin
        W_hc_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_30_ce0 = 1'b1;
    end else begin
        W_hc_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_31_ce0 = 1'b1;
    end else begin
        W_hc_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_3_ce0 = 1'b1;
    end else begin
        W_hc_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_4_ce0 = 1'b1;
    end else begin
        W_hc_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_5_ce0 = 1'b1;
    end else begin
        W_hc_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_6_ce0 = 1'b1;
    end else begin
        W_hc_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_7_ce0 = 1'b1;
    end else begin
        W_hc_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_8_ce0 = 1'b1;
    end else begin
        W_hc_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        W_hc_9_ce0 = 1'b1;
    end else begin
        W_hc_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_in_offset_blk_n = p_in_offset_empty_n;
    end else begin
        p_in_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_in_offset_read = 1'b1;
    end else begin
        p_in_offset_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        str_in12_blk_n = str_in12_full_n;
    end else begin
        str_in12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        str_in12_write = 1'b1;
    end else begin
        str_in12_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((str_in12_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_hc_0_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_10_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_11_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_12_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_13_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_14_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_15_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_16_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_17_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_18_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_19_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_1_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_20_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_21_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_22_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_23_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_24_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_25_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_26_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_27_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_28_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_29_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_2_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_30_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_31_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_3_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_4_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_5_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_6_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_7_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_8_address0 = p_in_offset_cast_i_fu_521_p1;

assign W_hc_9_address0 = p_in_offset_cast_i_fu_521_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (p_in_offset_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign l_val_V_187_fu_561_p1 = W_hc_1_q0;

assign l_val_V_188_fu_565_p1 = W_hc_2_q0;

assign l_val_V_189_fu_569_p1 = W_hc_3_q0;

assign l_val_V_190_fu_573_p1 = W_hc_4_q0;

assign l_val_V_191_fu_577_p1 = W_hc_5_q0;

assign l_val_V_192_fu_581_p1 = W_hc_6_q0;

assign l_val_V_193_fu_585_p1 = W_hc_7_q0;

assign l_val_V_194_fu_589_p1 = W_hc_8_q0;

assign l_val_V_195_fu_593_p1 = W_hc_9_q0;

assign l_val_V_196_fu_597_p1 = W_hc_10_q0;

assign l_val_V_197_fu_601_p1 = W_hc_11_q0;

assign l_val_V_198_fu_605_p1 = W_hc_12_q0;

assign l_val_V_199_fu_609_p1 = W_hc_13_q0;

assign l_val_V_200_fu_613_p1 = W_hc_14_q0;

assign l_val_V_201_fu_617_p1 = W_hc_15_q0;

assign l_val_V_202_fu_621_p1 = W_hc_16_q0;

assign l_val_V_203_fu_625_p1 = W_hc_17_q0;

assign l_val_V_204_fu_629_p1 = W_hc_18_q0;

assign l_val_V_205_fu_633_p1 = W_hc_19_q0;

assign l_val_V_206_fu_637_p1 = W_hc_20_q0;

assign l_val_V_207_fu_641_p1 = W_hc_21_q0;

assign l_val_V_208_fu_645_p1 = W_hc_22_q0;

assign l_val_V_209_fu_649_p1 = W_hc_23_q0;

assign l_val_V_210_fu_653_p1 = W_hc_24_q0;

assign l_val_V_211_fu_657_p1 = W_hc_25_q0;

assign l_val_V_212_fu_661_p1 = W_hc_26_q0;

assign l_val_V_213_fu_665_p1 = W_hc_27_q0;

assign l_val_V_214_fu_669_p1 = W_hc_28_q0;

assign l_val_V_215_fu_673_p1 = W_hc_29_q0;

assign l_val_V_216_fu_677_p1 = W_hc_30_q0;

assign l_val_V_217_fu_681_p1 = W_hc_31_q0;

assign l_val_V_fu_557_p1 = W_hc_0_q0;

assign p_in_offset_cast_i_fu_521_p1 = p_in_offset_dout;

assign start_out = real_start;

assign str_in12_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{l_val_V_217_fu_681_p1}, {l_val_V_216_fu_677_p1}}, {l_val_V_215_fu_673_p1}}, {l_val_V_214_fu_669_p1}}, {l_val_V_213_fu_665_p1}}, {l_val_V_212_fu_661_p1}}, {l_val_V_211_fu_657_p1}}, {l_val_V_210_fu_653_p1}}, {l_val_V_209_fu_649_p1}}, {l_val_V_208_fu_645_p1}}, {l_val_V_207_fu_641_p1}}, {l_val_V_206_fu_637_p1}}, {l_val_V_205_fu_633_p1}}, {l_val_V_204_fu_629_p1}}, {l_val_V_203_fu_625_p1}}, {l_val_V_202_fu_621_p1}}, {l_val_V_201_fu_617_p1}}, {l_val_V_200_fu_613_p1}}, {l_val_V_199_fu_609_p1}}, {l_val_V_198_fu_605_p1}}, {l_val_V_197_fu_601_p1}}, {l_val_V_196_fu_597_p1}}, {l_val_V_195_fu_593_p1}}, {l_val_V_194_fu_589_p1}}, {l_val_V_193_fu_585_p1}}, {l_val_V_192_fu_581_p1}}, {l_val_V_191_fu_577_p1}}, {l_val_V_190_fu_573_p1}}, {l_val_V_189_fu_569_p1}}, {l_val_V_188_fu_565_p1}}, {l_val_V_187_fu_561_p1}}, {l_val_V_fu_557_p1}};

endmodule //krnl_lstm_readVec2Stream_float_32u_155
