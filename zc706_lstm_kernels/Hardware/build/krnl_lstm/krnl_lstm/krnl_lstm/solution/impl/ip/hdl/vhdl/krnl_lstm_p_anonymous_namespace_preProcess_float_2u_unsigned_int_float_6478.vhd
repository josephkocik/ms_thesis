-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_lstm_p_anonymous_namespace_preProcess_float_2u_unsigned_int_float_6478 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    l_mulStr1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    l_mulStr1_empty_n : IN STD_LOGIC;
    l_mulStr1_read : OUT STD_LOGIC;
    l_data2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    l_data2_full_n : IN STD_LOGIC;
    l_data2_write : OUT STD_LOGIC );
end;


architecture behav of krnl_lstm_p_anonymous_namespace_preProcess_float_2u_unsigned_int_float_6478 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal l_mulStr1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal l_data2_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal reg_85 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state12 : BOOLEAN;
    signal ap_block_state13 : BOOLEAN;
    signal ap_block_state14 : BOOLEAN;
    signal ap_block_state15 : BOOLEAN;
    signal ap_block_state16 : BOOLEAN;
    signal reg_89 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_93 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_43_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_97 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_47_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_51_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_137 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_147 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_fu_157_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_reg_605 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_fu_161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_727_fu_165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_728_fu_170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_729_fu_175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_186_fu_180_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_186_reg_630 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_1_fu_184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_730_fu_188_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_731_fu_193_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_732_fu_198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_187_fu_203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_187_reg_655 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_2_fu_207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_733_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_734_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_735_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_188_fu_226_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_188_reg_680 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_3_fu_230_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_736_fu_234_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_737_fu_239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_738_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_189_fu_249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_189_reg_705 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_4_fu_253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_739_fu_257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_740_fu_262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_741_fu_267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_190_fu_272_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_190_reg_730 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_i_i_1_reg_735 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_5_fu_276_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_742_fu_280_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_743_fu_285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_744_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_191_fu_295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_191_reg_760 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_i_i_2_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_6_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_745_fu_303_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_746_fu_308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_747_fu_313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_192_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_192_reg_790 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_i_i_3_reg_795 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_7_fu_322_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_748_fu_326_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_749_fu_331_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_750_fu_336_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_193_fu_341_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_193_reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_i_i_4_reg_825 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_82_fu_345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_751_fu_349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_752_fu_354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_753_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_194_fu_364_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_194_reg_850 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_93_fu_368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_754_fu_372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_755_fu_377_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_756_fu_382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_195_fu_387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_195_reg_875 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_104_fu_396_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_757_fu_400_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_758_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_759_fu_410_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_196_fu_415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_196_reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_11_fu_424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_760_fu_428_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_761_fu_433_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_762_fu_438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_197_fu_443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_197_reg_925 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_12_fu_452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_763_fu_456_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_764_fu_461_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_765_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_198_fu_471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_198_reg_950 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_13_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_766_fu_484_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_767_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_768_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_199_fu_499_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_199_reg_975 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_14_fu_508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_769_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_770_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_771_fu_522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_200_fu_527_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_200_reg_1000 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_15_fu_536_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_772_fu_540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_773_fu_545_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_774_fu_550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_fu_391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_1_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_2_fu_447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_3_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_4_fu_503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_5_fu_531_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_6_fu_555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_7_fu_560_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_8_fu_565_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_9_fu_570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_10_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_11_fu_580_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_12_fu_585_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_13_fu_590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_14_fu_595_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_15_fu_600_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_43_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_43_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_47_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_47_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_51_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_51_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_43_ce : STD_LOGIC;
    signal grp_fu_47_ce : STD_LOGIC;
    signal grp_fu_51_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component krnl_lstm_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fadd_32ns_32ns_32_5_full_dsp_1_U1047 : component krnl_lstm_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_43_p0,
        din1 => grp_fu_43_p1,
        ce => grp_fu_43_ce,
        dout => grp_fu_43_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U1048 : component krnl_lstm_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_47_p0,
        din1 => grp_fu_47_p1,
        ce => grp_fu_47_ce,
        dout => grp_fu_47_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U1049 : component krnl_lstm_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_51_p0,
        din1 => grp_fu_51_p1,
        ce => grp_fu_51_ce,
        dout => grp_fu_51_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_i_i_1_reg_735 <= grp_fu_43_p2;
                trunc_ln674_191_reg_760 <= trunc_ln674_191_fu_295_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_i_i_2_reg_765 <= grp_fu_43_p2;
                trunc_ln674_192_reg_790 <= trunc_ln674_192_fu_318_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_i_i_3_reg_795 <= grp_fu_43_p2;
                trunc_ln674_193_reg_820 <= trunc_ln674_193_fu_341_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_i_i_4_reg_825 <= grp_fu_43_p2;
                trunc_ln674_194_reg_850 <= trunc_ln674_194_fu_364_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then
                reg_102 <= grp_fu_47_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then
                reg_108 <= grp_fu_47_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then
                reg_114 <= grp_fu_47_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then
                reg_120 <= grp_fu_47_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then
                reg_126 <= grp_fu_47_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then
                reg_132 <= grp_fu_51_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then
                reg_137 <= grp_fu_51_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then
                reg_142 <= grp_fu_51_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then
                reg_147 <= grp_fu_51_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then
                reg_152 <= grp_fu_51_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((l_mulStr1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then
                reg_85 <= l_mulStr1_dout(63 downto 32);
                reg_89 <= l_mulStr1_dout(95 downto 64);
                reg_93 <= l_mulStr1_dout(127 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then
                reg_97 <= grp_fu_43_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                trunc_ln674_186_reg_630 <= trunc_ln674_186_fu_180_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                trunc_ln674_187_reg_655 <= trunc_ln674_187_fu_203_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                trunc_ln674_188_reg_680 <= trunc_ln674_188_fu_226_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                trunc_ln674_189_reg_705 <= trunc_ln674_189_fu_249_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                trunc_ln674_190_reg_730 <= trunc_ln674_190_fu_272_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                trunc_ln674_195_reg_875 <= trunc_ln674_195_fu_387_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                trunc_ln674_196_reg_900 <= trunc_ln674_196_fu_415_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                trunc_ln674_197_reg_925 <= trunc_ln674_197_fu_443_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                trunc_ln674_198_reg_950 <= trunc_ln674_198_fu_471_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                trunc_ln674_199_reg_975 <= trunc_ln674_199_fu_499_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                trunc_ln674_200_reg_1000 <= trunc_ln674_200_fu_527_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln674_reg_605 <= trunc_ln674_fu_157_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, l_mulStr1_empty_n, l_data2_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((l_mulStr1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, l_mulStr1_empty_n)
    begin
                ap_block_state1 <= ((l_mulStr1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state12_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n)
    begin
                ap_block_state12 <= ((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0));
    end process;


    ap_block_state13_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n)
    begin
                ap_block_state13 <= ((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0));
    end process;


    ap_block_state14_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n)
    begin
                ap_block_state14 <= ((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0));
    end process;


    ap_block_state15_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n)
    begin
                ap_block_state15 <= ((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0));
    end process;


    ap_block_state16_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n)
    begin
                ap_block_state16 <= ((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, l_data2_full_n, ap_CS_fsm_state27)
    begin
        if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bitcast_ln102_104_fu_396_p1 <= trunc_ln674_195_reg_875;
    bitcast_ln102_11_fu_424_p1 <= trunc_ln674_196_reg_900;
    bitcast_ln102_12_fu_452_p1 <= trunc_ln674_197_reg_925;
    bitcast_ln102_13_fu_480_p1 <= trunc_ln674_198_reg_950;
    bitcast_ln102_14_fu_508_p1 <= trunc_ln674_199_reg_975;
    bitcast_ln102_15_fu_536_p1 <= trunc_ln674_200_reg_1000;
    bitcast_ln102_1_fu_184_p1 <= trunc_ln674_186_reg_630;
    bitcast_ln102_2_fu_207_p1 <= trunc_ln674_187_reg_655;
    bitcast_ln102_3_fu_230_p1 <= trunc_ln674_188_reg_680;
    bitcast_ln102_4_fu_253_p1 <= trunc_ln674_189_reg_705;
    bitcast_ln102_5_fu_276_p1 <= trunc_ln674_190_reg_730;
    bitcast_ln102_6_fu_299_p1 <= trunc_ln674_191_reg_760;
    bitcast_ln102_727_fu_165_p1 <= reg_85;
    bitcast_ln102_728_fu_170_p1 <= reg_89;
    bitcast_ln102_729_fu_175_p1 <= reg_93;
    bitcast_ln102_730_fu_188_p1 <= reg_85;
    bitcast_ln102_731_fu_193_p1 <= reg_89;
    bitcast_ln102_732_fu_198_p1 <= reg_93;
    bitcast_ln102_733_fu_211_p1 <= reg_85;
    bitcast_ln102_734_fu_216_p1 <= reg_89;
    bitcast_ln102_735_fu_221_p1 <= reg_93;
    bitcast_ln102_736_fu_234_p1 <= reg_85;
    bitcast_ln102_737_fu_239_p1 <= reg_89;
    bitcast_ln102_738_fu_244_p1 <= reg_93;
    bitcast_ln102_739_fu_257_p1 <= reg_85;
    bitcast_ln102_740_fu_262_p1 <= reg_89;
    bitcast_ln102_741_fu_267_p1 <= reg_93;
    bitcast_ln102_742_fu_280_p1 <= reg_85;
    bitcast_ln102_743_fu_285_p1 <= reg_89;
    bitcast_ln102_744_fu_290_p1 <= reg_93;
    bitcast_ln102_745_fu_303_p1 <= reg_85;
    bitcast_ln102_746_fu_308_p1 <= reg_89;
    bitcast_ln102_747_fu_313_p1 <= reg_93;
    bitcast_ln102_748_fu_326_p1 <= reg_85;
    bitcast_ln102_749_fu_331_p1 <= reg_89;
    bitcast_ln102_750_fu_336_p1 <= reg_93;
    bitcast_ln102_751_fu_349_p1 <= reg_85;
    bitcast_ln102_752_fu_354_p1 <= reg_89;
    bitcast_ln102_753_fu_359_p1 <= reg_93;
    bitcast_ln102_754_fu_372_p1 <= reg_85;
    bitcast_ln102_755_fu_377_p1 <= reg_89;
    bitcast_ln102_756_fu_382_p1 <= reg_93;
    bitcast_ln102_757_fu_400_p1 <= reg_85;
    bitcast_ln102_758_fu_405_p1 <= reg_89;
    bitcast_ln102_759_fu_410_p1 <= reg_93;
    bitcast_ln102_760_fu_428_p1 <= reg_85;
    bitcast_ln102_761_fu_433_p1 <= reg_89;
    bitcast_ln102_762_fu_438_p1 <= reg_93;
    bitcast_ln102_763_fu_456_p1 <= reg_85;
    bitcast_ln102_764_fu_461_p1 <= reg_89;
    bitcast_ln102_765_fu_466_p1 <= reg_93;
    bitcast_ln102_766_fu_484_p1 <= reg_85;
    bitcast_ln102_767_fu_489_p1 <= reg_89;
    bitcast_ln102_768_fu_494_p1 <= reg_93;
    bitcast_ln102_769_fu_512_p1 <= reg_85;
    bitcast_ln102_770_fu_517_p1 <= reg_89;
    bitcast_ln102_771_fu_522_p1 <= reg_93;
    bitcast_ln102_772_fu_540_p1 <= reg_85;
    bitcast_ln102_773_fu_545_p1 <= reg_89;
    bitcast_ln102_774_fu_550_p1 <= reg_93;
    bitcast_ln102_7_fu_322_p1 <= trunc_ln674_192_reg_790;
    bitcast_ln102_82_fu_345_p1 <= trunc_ln674_193_reg_820;
    bitcast_ln102_93_fu_368_p1 <= trunc_ln674_194_reg_850;
    bitcast_ln102_fu_161_p1 <= trunc_ln674_reg_605;
    bitcast_ln174_10_fu_575_p1 <= reg_97;
    bitcast_ln174_11_fu_580_p1 <= reg_97;
    bitcast_ln174_12_fu_585_p1 <= reg_97;
    bitcast_ln174_13_fu_590_p1 <= reg_97;
    bitcast_ln174_14_fu_595_p1 <= reg_97;
    bitcast_ln174_15_fu_600_p1 <= reg_97;
    bitcast_ln174_1_fu_419_p1 <= reg_97;
    bitcast_ln174_2_fu_447_p1 <= reg_97;
    bitcast_ln174_3_fu_475_p1 <= reg_97;
    bitcast_ln174_4_fu_503_p1 <= reg_97;
    bitcast_ln174_5_fu_531_p1 <= reg_97;
    bitcast_ln174_6_fu_555_p1 <= reg_97;
    bitcast_ln174_7_fu_560_p1 <= reg_97;
    bitcast_ln174_8_fu_565_p1 <= reg_97;
    bitcast_ln174_9_fu_570_p1 <= reg_97;
    bitcast_ln174_fu_391_p1 <= reg_97;

    grp_fu_43_ce_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_fu_43_ce <= ap_const_logic_1;
        else 
            grp_fu_43_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_43_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, reg_97, reg_102, reg_108, reg_114, reg_120, reg_126, bitcast_ln102_fu_161_p1, bitcast_ln102_1_fu_184_p1, bitcast_ln102_2_fu_207_p1, bitcast_ln102_3_fu_230_p1, bitcast_ln102_4_fu_253_p1, add_i_i_1_reg_735, add_i_i_2_reg_765, add_i_i_3_reg_795, add_i_i_4_reg_825)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_fu_43_p0 <= reg_126;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_fu_43_p0 <= reg_120;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_fu_43_p0 <= reg_114;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_43_p0 <= reg_108;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_43_p0 <= reg_102;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_43_p0 <= add_i_i_4_reg_825;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_43_p0 <= add_i_i_3_reg_795;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_43_p0 <= add_i_i_2_reg_765;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_43_p0 <= add_i_i_1_reg_735;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_43_p0 <= reg_97;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_43_p0 <= bitcast_ln102_4_fu_253_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_43_p0 <= bitcast_ln102_3_fu_230_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_43_p0 <= bitcast_ln102_2_fu_207_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_43_p0 <= bitcast_ln102_1_fu_184_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_43_p0 <= bitcast_ln102_fu_161_p1;
        else 
            grp_fu_43_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_43_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, reg_102, reg_108, reg_114, reg_120, reg_126, reg_132, reg_137, reg_142, reg_147, reg_152, bitcast_ln102_727_fu_165_p1, bitcast_ln102_730_fu_188_p1, bitcast_ln102_733_fu_211_p1, bitcast_ln102_736_fu_234_p1, bitcast_ln102_739_fu_257_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_fu_43_p1 <= reg_152;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_fu_43_p1 <= reg_147;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_fu_43_p1 <= reg_142;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_43_p1 <= reg_137;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_fu_43_p1 <= reg_132;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_43_p1 <= reg_126;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_43_p1 <= reg_120;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_43_p1 <= reg_114;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_43_p1 <= reg_108;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_43_p1 <= reg_102;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_43_p1 <= bitcast_ln102_739_fu_257_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_43_p1 <= bitcast_ln102_736_fu_234_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_43_p1 <= bitcast_ln102_733_fu_211_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_43_p1 <= bitcast_ln102_730_fu_188_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_43_p1 <= bitcast_ln102_727_fu_165_p1;
        else 
            grp_fu_43_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_47_ce_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            grp_fu_47_ce <= ap_const_logic_1;
        else 
            grp_fu_47_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_47_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, bitcast_ln102_728_fu_170_p1, bitcast_ln102_731_fu_193_p1, bitcast_ln102_734_fu_216_p1, bitcast_ln102_737_fu_239_p1, bitcast_ln102_740_fu_262_p1, bitcast_ln102_5_fu_276_p1, bitcast_ln102_6_fu_299_p1, bitcast_ln102_7_fu_322_p1, bitcast_ln102_82_fu_345_p1, bitcast_ln102_93_fu_368_p1, bitcast_ln102_104_fu_396_p1, bitcast_ln102_11_fu_424_p1, bitcast_ln102_12_fu_452_p1, bitcast_ln102_13_fu_480_p1, bitcast_ln102_14_fu_508_p1, bitcast_ln102_15_fu_536_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_47_p0 <= bitcast_ln102_15_fu_536_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_47_p0 <= bitcast_ln102_14_fu_508_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_47_p0 <= bitcast_ln102_13_fu_480_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_47_p0 <= bitcast_ln102_12_fu_452_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_47_p0 <= bitcast_ln102_11_fu_424_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_47_p0 <= bitcast_ln102_104_fu_396_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_47_p0 <= bitcast_ln102_93_fu_368_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_47_p0 <= bitcast_ln102_82_fu_345_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_47_p0 <= bitcast_ln102_7_fu_322_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_47_p0 <= bitcast_ln102_6_fu_299_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_47_p0 <= bitcast_ln102_5_fu_276_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_47_p0 <= bitcast_ln102_740_fu_262_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_47_p0 <= bitcast_ln102_737_fu_239_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_47_p0 <= bitcast_ln102_734_fu_216_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_47_p0 <= bitcast_ln102_731_fu_193_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_47_p0 <= bitcast_ln102_728_fu_170_p1;
        else 
            grp_fu_47_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_47_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, bitcast_ln102_729_fu_175_p1, bitcast_ln102_732_fu_198_p1, bitcast_ln102_735_fu_221_p1, bitcast_ln102_738_fu_244_p1, bitcast_ln102_741_fu_267_p1, bitcast_ln102_742_fu_280_p1, bitcast_ln102_745_fu_303_p1, bitcast_ln102_748_fu_326_p1, bitcast_ln102_751_fu_349_p1, bitcast_ln102_754_fu_372_p1, bitcast_ln102_757_fu_400_p1, bitcast_ln102_760_fu_428_p1, bitcast_ln102_763_fu_456_p1, bitcast_ln102_766_fu_484_p1, bitcast_ln102_769_fu_512_p1, bitcast_ln102_772_fu_540_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_47_p1 <= bitcast_ln102_772_fu_540_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_47_p1 <= bitcast_ln102_769_fu_512_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_47_p1 <= bitcast_ln102_766_fu_484_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_47_p1 <= bitcast_ln102_763_fu_456_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_47_p1 <= bitcast_ln102_760_fu_428_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_47_p1 <= bitcast_ln102_757_fu_400_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_47_p1 <= bitcast_ln102_754_fu_372_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_47_p1 <= bitcast_ln102_751_fu_349_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_47_p1 <= bitcast_ln102_748_fu_326_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_47_p1 <= bitcast_ln102_745_fu_303_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_47_p1 <= bitcast_ln102_742_fu_280_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_47_p1 <= bitcast_ln102_741_fu_267_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_47_p1 <= bitcast_ln102_738_fu_244_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_47_p1 <= bitcast_ln102_735_fu_221_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_47_p1 <= bitcast_ln102_732_fu_198_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_47_p1 <= bitcast_ln102_729_fu_175_p1;
        else 
            grp_fu_47_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_51_ce_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_fu_51_ce <= ap_const_logic_1;
        else 
            grp_fu_51_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_51_p0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, bitcast_ln102_743_fu_285_p1, bitcast_ln102_746_fu_308_p1, bitcast_ln102_749_fu_331_p1, bitcast_ln102_752_fu_354_p1, bitcast_ln102_755_fu_377_p1, bitcast_ln102_758_fu_405_p1, bitcast_ln102_761_fu_433_p1, bitcast_ln102_764_fu_461_p1, bitcast_ln102_767_fu_489_p1, bitcast_ln102_770_fu_517_p1, bitcast_ln102_773_fu_545_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_51_p0 <= bitcast_ln102_773_fu_545_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_51_p0 <= bitcast_ln102_770_fu_517_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_51_p0 <= bitcast_ln102_767_fu_489_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_51_p0 <= bitcast_ln102_764_fu_461_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_51_p0 <= bitcast_ln102_761_fu_433_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_51_p0 <= bitcast_ln102_758_fu_405_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_51_p0 <= bitcast_ln102_755_fu_377_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_51_p0 <= bitcast_ln102_752_fu_354_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_51_p0 <= bitcast_ln102_749_fu_331_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_51_p0 <= bitcast_ln102_746_fu_308_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_51_p0 <= bitcast_ln102_743_fu_285_p1;
        else 
            grp_fu_51_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_51_p1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, bitcast_ln102_744_fu_290_p1, bitcast_ln102_747_fu_313_p1, bitcast_ln102_750_fu_336_p1, bitcast_ln102_753_fu_359_p1, bitcast_ln102_756_fu_382_p1, bitcast_ln102_759_fu_410_p1, bitcast_ln102_762_fu_438_p1, bitcast_ln102_765_fu_466_p1, bitcast_ln102_768_fu_494_p1, bitcast_ln102_771_fu_522_p1, bitcast_ln102_774_fu_550_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_51_p1 <= bitcast_ln102_774_fu_550_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_51_p1 <= bitcast_ln102_771_fu_522_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_51_p1 <= bitcast_ln102_768_fu_494_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_51_p1 <= bitcast_ln102_765_fu_466_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_51_p1 <= bitcast_ln102_762_fu_438_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_51_p1 <= bitcast_ln102_759_fu_410_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_51_p1 <= bitcast_ln102_756_fu_382_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_51_p1 <= bitcast_ln102_753_fu_359_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_51_p1 <= bitcast_ln102_750_fu_336_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_51_p1 <= bitcast_ln102_747_fu_313_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_51_p1 <= bitcast_ln102_744_fu_290_p1;
        else 
            grp_fu_51_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(l_data2_full_n, ap_CS_fsm_state27)
    begin
        if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    l_data2_blk_n_assign_proc : process(l_data2_full_n, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            l_data2_blk_n <= l_data2_full_n;
        else 
            l_data2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    l_data2_din_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, bitcast_ln174_fu_391_p1, bitcast_ln174_1_fu_419_p1, bitcast_ln174_2_fu_447_p1, bitcast_ln174_3_fu_475_p1, bitcast_ln174_4_fu_503_p1, bitcast_ln174_5_fu_531_p1, bitcast_ln174_6_fu_555_p1, bitcast_ln174_7_fu_560_p1, bitcast_ln174_8_fu_565_p1, bitcast_ln174_9_fu_570_p1, bitcast_ln174_10_fu_575_p1, bitcast_ln174_11_fu_580_p1, bitcast_ln174_12_fu_585_p1, bitcast_ln174_13_fu_590_p1, bitcast_ln174_14_fu_595_p1, bitcast_ln174_15_fu_600_p1)
    begin
        if (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            l_data2_din <= bitcast_ln174_15_fu_600_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            l_data2_din <= bitcast_ln174_14_fu_595_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            l_data2_din <= bitcast_ln174_13_fu_590_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            l_data2_din <= bitcast_ln174_12_fu_585_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            l_data2_din <= bitcast_ln174_11_fu_580_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            l_data2_din <= bitcast_ln174_10_fu_575_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            l_data2_din <= bitcast_ln174_9_fu_570_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            l_data2_din <= bitcast_ln174_8_fu_565_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            l_data2_din <= bitcast_ln174_7_fu_560_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            l_data2_din <= bitcast_ln174_6_fu_555_p1;
        elsif (((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            l_data2_din <= bitcast_ln174_5_fu_531_p1;
        elsif ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            l_data2_din <= bitcast_ln174_4_fu_503_p1;
        elsif ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            l_data2_din <= bitcast_ln174_3_fu_475_p1;
        elsif ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            l_data2_din <= bitcast_ln174_2_fu_447_p1;
        elsif ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            l_data2_din <= bitcast_ln174_1_fu_419_p1;
        elsif ((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            l_data2_din <= bitcast_ln174_fu_391_p1;
        else 
            l_data2_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    l_data2_write_assign_proc : process(l_mulStr1_empty_n, l_data2_full_n, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((l_data2_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            l_data2_write <= ap_const_logic_1;
        else 
            l_data2_write <= ap_const_logic_0;
        end if; 
    end process;


    l_mulStr1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, l_mulStr1_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            l_mulStr1_blk_n <= l_mulStr1_empty_n;
        else 
            l_mulStr1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    l_mulStr1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, l_mulStr1_empty_n, l_data2_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((l_data2_full_n = ap_const_logic_0) or (l_mulStr1_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((l_mulStr1_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((l_mulStr1_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            l_mulStr1_read <= ap_const_logic_1;
        else 
            l_mulStr1_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln674_186_fu_180_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_187_fu_203_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_188_fu_226_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_189_fu_249_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_190_fu_272_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_191_fu_295_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_192_fu_318_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_193_fu_341_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_194_fu_364_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_195_fu_387_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_196_fu_415_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_197_fu_443_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_198_fu_471_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_199_fu_499_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_200_fu_527_p1 <= l_mulStr1_dout(32 - 1 downto 0);
    trunc_ln674_fu_157_p1 <= l_mulStr1_dout(32 - 1 downto 0);
end behav;
