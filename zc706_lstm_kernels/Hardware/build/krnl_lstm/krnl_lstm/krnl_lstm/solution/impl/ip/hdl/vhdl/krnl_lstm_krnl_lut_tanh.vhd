-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_lstm_krnl_lut_tanh is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of krnl_lstm_krnl_lut_tanh is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_40400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_BF800000 : STD_LOGIC_VECTOR (31 downto 0) := "10111111100000000000000000000000";
    constant ap_const_lv32_C0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000000000000000000000000000";
    constant ap_const_lv32_C0400000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000010000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv64_4006666666666668 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000110011001100110011001100110011001100110011001101000";
    constant ap_const_lv64_400199999999999A : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000001100110011001100110011001100110011001100110011010";
    constant ap_const_lv64_3FE999999999999C : STD_LOGIC_VECTOR (63 downto 0) := "0011111111101001100110011001100110011001100110011001100110011100";
    constant ap_const_lv64_3FC99999999999A0 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111001001100110011001100110011001100110011001100110100000";
    constant ap_const_lv64_BFF3333333333333 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110011001100110011001100110011001100110011001100110011";
    constant ap_const_lv64_BFFCCCCCCCCCCCCC : STD_LOGIC_VECTOR (63 downto 0) := "1011111111111100110011001100110011001100110011001100110011001100";
    constant ap_const_lv64_C006666666666666 : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000110011001100110011001100110011001100110011001100110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv64_3FF3333333333334 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110011001100110011001100110011001100110011001100110100";
    constant ap_const_lv64_BFE9999999999998 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111101001100110011001100110011001100110011001100110011000";
    constant ap_const_lv64_C004CCCCCCCCCCCD : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000100110011001100110011001100110011001100110011001101";
    constant ap_const_lv64_C003333333333333 : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000011001100110011001100110011001100110011001100110011";
    constant ap_const_lv64_4003333333333334 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000011001100110011001100110011001100110011001100110100";
    constant ap_const_lv64_3FD99999999999A0 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111011001100110011001100110011001100110011001100110100000";
    constant ap_const_lv64_BFF9999999999999 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111111001100110011001100110011001100110011001100110011001";
    constant ap_const_lv64_C00199999999999A : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000001100110011001100110011001100110011001100110011010";
    constant ap_const_lv64_BFF6666666666666 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110110011001100110011001100110011001100110011001100110";
    constant ap_const_lv64_BFE3333333333330 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111100011001100110011001100110011001100110011001100110000";
    constant ap_const_lv64_BFD9999999999998 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111011001100110011001100110011001100110011001100110011000";
    constant ap_const_lv64_BFC9999999999990 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111001001100110011001100110011001100110011001100110010000";
    constant ap_const_lv64_3FE3333333333334 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100011001100110011001100110011001100110011001100110100";
    constant ap_const_lv64_3FF6666666666668 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110110011001100110011001100110011001100110011001101000";
    constant ap_const_lv64_3FF999999999999C : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111001100110011001100110011001100110011001100110011100";
    constant ap_const_lv64_3FFCCCCCCCCCCCD0 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111100110011001100110011001100110011001100110011010000";
    constant ap_const_lv64_4004CCCCCCCCCCCE : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000100110011001100110011001100110011001100110011001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tanh_lut100_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tanh_lut100_ce0 : STD_LOGIC;
    signal tanh_lut100_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1_i_reg_1153 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal or_ln130_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_reg_1188 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal or_ln130_2_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_2_reg_1203 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln220_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln220_reg_1236 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln220_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln220_reg_1241 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln208_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln208_reg_1246 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal or_ln208_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_reg_1251 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln190_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln190_reg_1256 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal or_ln190_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln190_reg_1261 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln178_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln178_reg_1266 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal or_ln178_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln178_reg_1271 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln160_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln160_reg_1276 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal or_ln160_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln160_reg_1281 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln148_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln148_reg_1286 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal or_ln148_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln148_reg_1291 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_reg_1296 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal or_ln136_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln136_reg_1301 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_i_17_fu_751_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal lut_i_17_reg_1306 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_1311 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_1316 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln154_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln154_reg_1321 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_reg_1327 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_reg_1332 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln166_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln166_reg_1337 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_reg_1343 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_reg_1348 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_reg_1359 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_1364 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_reg_1369 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_reg_1375 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_reg_1380 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln196_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln196_reg_1385 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_reg_1391 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln202_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln202_reg_1401 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_reg_1412 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln214_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln214_reg_1417 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_i_25_fu_1018_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_25_reg_1423 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal lut_i_30_fu_1132_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_30_reg_1428 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln120_8_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal grp_fu_173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fu_178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_208_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln130_fu_369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_372_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_fu_382_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_4_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln130_2_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_fu_407_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln130_2_fu_417_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln130_6_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_5_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln217_3_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln217_4_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln217_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln205_3_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln205_4_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln208_2_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln205_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln187_3_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln187_4_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln190_3_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln190_4_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln187_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln175_3_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln175_4_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln178_2_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln175_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_3_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_4_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln160_3_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln160_4_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln145_3_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln145_4_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln148_2_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln145_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln133_2_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_2_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln133_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_3_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_i_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln136_fu_692_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln120_fu_688_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_i_16_fu_699_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln139_2_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln142_3_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln142_4_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln142_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln142_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln142_fu_737_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln120_5_fu_706_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln154_2_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln166_2_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_3_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_4_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_2_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln196_2_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln202_3_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln202_4_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln214_2_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_fu_846_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal lut_i_18_fu_853_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln151_2_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln154_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln154_fu_872_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln120_6_fu_859_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln160_fu_892_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_i_19_fu_884_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln163_2_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln163_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln166_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln166_fu_915_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_i_20_fu_899_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln169_2_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln169_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln172_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln172_fu_944_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_i_21_fu_927_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_i_22_fu_956_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln178_fu_968_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln120_7_fu_964_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln181_2_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln181_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln184_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln184_fu_991_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_23_fu_975_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln190_fu_1011_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_24_fu_1003_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln193_2_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln196_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln196_fu_1034_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln199_2_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln199_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln202_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln202_fu_1062_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_26_fu_1046_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln208_fu_1082_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_27_fu_1074_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln211_2_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln211_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln214_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln214_fu_1105_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_28_fu_1089_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln220_fu_1125_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lut_i_29_fu_1117_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_169_ce : STD_LOGIC;
    signal grp_fu_173_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_178_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_202_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_208_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_213_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_231_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_153 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component krnl_lstm_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component krnl_lstm_krnl_lut_tanh38_tanh_lut IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    tanh_lut100_U : component krnl_lstm_krnl_lut_tanh38_tanh_lut
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tanh_lut100_address0,
        ce0 => tanh_lut100_ce0,
        q0 => tanh_lut100_q0);

    fpext_32ns_64_2_no_dsp_1_U2229 : component krnl_lstm_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => n,
        ce => grp_fu_169_ce,
        dout => grp_fu_169_p1);

    fcmp_32ns_32ns_1_2_no_dsp_1_U2230 : component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => n,
        din1 => grp_fu_173_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_173_opcode,
        dout => grp_fu_173_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U2231 : component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => n,
        din1 => grp_fu_178_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_178_opcode,
        dout => grp_fu_178_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U2232 : component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => n,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_192_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U2233 : component krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => n,
        din1 => ap_const_lv32_40000000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_197_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2234 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => grp_fu_202_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_202_opcode,
        dout => grp_fu_202_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2235 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => grp_fu_208_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_208_opcode,
        dout => grp_fu_208_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2236 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => grp_fu_213_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_213_opcode,
        dout => grp_fu_213_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2237 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => grp_fu_231_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_231_opcode,
        dout => grp_fu_231_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2238 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFF9999999999999,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_239_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2239 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFF6666666666666,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_244_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2240 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFF6666666666666,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_249_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2241 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFF3333333333333,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_254_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2242 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFE9999999999998,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_259_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2243 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFE3333333333330,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_264_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2244 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFE3333333333330,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_269_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2245 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFD9999999999998,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_274_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2246 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFD9999999999998,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_279_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2247 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFC9999999999990,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_284_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2248 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_BFC9999999999990,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_289_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2249 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FD99999999999A0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_294_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2250 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FE3333333333334,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_299_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2251 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FE3333333333334,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_304_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2252 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FE999999999999C,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_309_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2253 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FF3333333333334,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_314_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2254 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FF6666666666668,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_319_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2255 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FF6666666666668,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_324_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2256 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FF999999999999C,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_329_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2257 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FF999999999999C,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_334_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2258 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FFCCCCCCCCCCCD0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_339_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2259 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_3FFCCCCCCCCCCCD0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_344_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2260 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_4003333333333334,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_349_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2261 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_4004CCCCCCCCCCCE,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_354_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2262 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_4004CCCCCCCCCCCE,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_359_p2);

    dcmp_64ns_64ns_1_2_no_dsp_1_U2263 : component krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_i_reg_1153,
        din1 => ap_const_lv64_4006666666666668,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_364_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0))) then
                and_ln136_reg_1296 <= and_ln136_fu_660_p2;
                or_ln136_reg_1301 <= or_ln136_fu_666_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0))) then
                and_ln148_reg_1286 <= and_ln148_fu_632_p2;
                or_ln148_reg_1291 <= or_ln148_fu_638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0))) then
                and_ln154_reg_1321 <= and_ln154_fu_764_p2;
                tmp_76_reg_1311 <= grp_fu_239_p2;
                tmp_77_reg_1316 <= grp_fu_244_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (or_ln178_reg_1271 = ap_const_lv1_0))) then
                and_ln160_reg_1276 <= and_ln160_fu_599_p2;
                or_ln160_reg_1281 <= or_ln160_fu_605_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (or_ln178_reg_1271 = ap_const_lv1_0))) then
                and_ln166_reg_1337 <= and_ln166_fu_775_p2;
                and_ln172_reg_1353 <= and_ln172_fu_791_p2;
                tmp_84_reg_1327 <= grp_fu_259_p2;
                tmp_85_reg_1332 <= grp_fu_264_p2;
                tmp_88_reg_1343 <= grp_fu_279_p2;
                tmp_89_reg_1348 <= grp_fu_284_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                and_ln178_reg_1266 <= and_ln178_fu_561_p2;
                or_ln178_reg_1271 <= or_ln178_fu_567_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                and_ln184_reg_1369 <= and_ln184_fu_802_p2;
                tmp_96_reg_1359 <= grp_fu_294_p2;
                tmp_97_reg_1364 <= grp_fu_299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                and_ln190_reg_1256 <= and_ln190_fu_528_p2;
                or_ln190_reg_1261 <= or_ln190_fu_534_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                and_ln196_reg_1385 <= and_ln196_fu_813_p2;
                and_ln202_reg_1401 <= and_ln202_fu_829_p2;
                tmp_104_reg_1375 <= grp_fu_314_p2;
                tmp_105_reg_1380 <= grp_fu_319_p2;
                tmp_108_reg_1391 <= grp_fu_334_p2;
                tmp_109_reg_1396 <= grp_fu_339_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                and_ln208_reg_1246 <= and_ln208_fu_490_p2;
                or_ln208_reg_1251 <= or_ln208_fu_496_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                and_ln214_reg_1417 <= and_ln214_fu_840_p2;
                tmp_116_reg_1407 <= grp_fu_349_p2;
                tmp_117_reg_1412 <= grp_fu_354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                and_ln220_reg_1236 <= and_ln220_fu_457_p2;
                or_ln130_2_reg_1203 <= or_ln130_2_fu_433_p2;
                or_ln130_reg_1188 <= or_ln130_fu_398_p2;
                or_ln220_reg_1241 <= or_ln220_fu_463_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                conv1_i_reg_1153 <= grp_fu_169_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0))) then
                lut_i_17_reg_1306 <= lut_i_17_fu_751_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                lut_i_25_reg_1423 <= lut_i_25_fu_1018_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                lut_i_30_reg_1428 <= lut_i_30_fu_1132_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    and_ln130_3_fu_677_p2 <= (or_ln130_2_reg_1203 and grp_fu_202_p2);
    and_ln130_fu_672_p2 <= (or_ln130_reg_1188 and grp_fu_173_p2);
    and_ln133_2_fu_644_p2 <= (or_ln130_2_reg_1203 and grp_fu_202_p2);
    and_ln133_fu_649_p2 <= (grp_fu_208_p2 and and_ln133_2_fu_644_p2);
    and_ln136_2_fu_655_p2 <= (or_ln130_2_reg_1203 and grp_fu_213_p2);
    and_ln136_fu_660_p2 <= (grp_fu_231_p2 and and_ln136_2_fu_655_p2);
    and_ln139_2_fu_710_p2 <= (or_ln130_2_reg_1203 and grp_fu_208_p2);
    and_ln139_fu_715_p2 <= (grp_fu_213_p2 and and_ln139_2_fu_710_p2);
    and_ln142_3_fu_721_p2 <= (or_ln130_2_reg_1203 and grp_fu_231_p2);
    and_ln142_4_fu_726_p2 <= (or_ln130_reg_1188 and grp_fu_178_p2);
    and_ln142_fu_731_p2 <= (and_ln142_4_fu_726_p2 and and_ln142_3_fu_721_p2);
    and_ln145_3_fu_611_p2 <= (or_ln130_reg_1188 and grp_fu_173_p2);
    and_ln145_4_fu_616_p2 <= (or_ln130_2_reg_1203 and grp_fu_202_p2);
    and_ln145_fu_621_p2 <= (and_ln145_4_fu_616_p2 and and_ln145_3_fu_611_p2);
    and_ln148_2_fu_627_p2 <= (or_ln130_2_reg_1203 and grp_fu_208_p2);
    and_ln148_fu_632_p2 <= (grp_fu_213_p2 and and_ln148_2_fu_627_p2);
    and_ln151_2_fu_863_p2 <= (tmp_76_reg_1311 and or_ln130_2_reg_1203);
    and_ln151_fu_867_p2 <= (tmp_77_reg_1316 and and_ln151_2_fu_863_p2);
    and_ln154_2_fu_759_p2 <= (or_ln130_2_reg_1203 and grp_fu_249_p2);
    and_ln154_fu_764_p2 <= (grp_fu_254_p2 and and_ln154_2_fu_759_p2);
    and_ln157_3_fu_573_p2 <= (or_ln130_2_reg_1203 and grp_fu_202_p2);
    and_ln157_4_fu_578_p2 <= (or_ln130_reg_1188 and grp_fu_173_p2);
    and_ln157_fu_583_p2 <= (and_ln157_4_fu_578_p2 and and_ln157_3_fu_573_p2);
    and_ln160_3_fu_589_p2 <= (or_ln130_reg_1188 and grp_fu_178_p2);
    and_ln160_4_fu_594_p2 <= (or_ln130_2_reg_1203 and grp_fu_208_p2);
    and_ln160_fu_599_p2 <= (and_ln160_4_fu_594_p2 and and_ln160_3_fu_589_p2);
    and_ln163_2_fu_906_p2 <= (tmp_84_reg_1327 and or_ln130_2_reg_1203);
    and_ln163_fu_910_p2 <= (tmp_85_reg_1332 and and_ln163_2_fu_906_p2);
    and_ln166_2_fu_770_p2 <= (or_ln130_2_reg_1203 and grp_fu_269_p2);
    and_ln166_fu_775_p2 <= (grp_fu_274_p2 and and_ln166_2_fu_770_p2);
    and_ln169_2_fu_935_p2 <= (tmp_88_reg_1343 and or_ln130_2_reg_1203);
    and_ln169_fu_939_p2 <= (tmp_89_reg_1348 and and_ln169_2_fu_935_p2);
    and_ln172_3_fu_781_p2 <= (or_ln130_2_reg_1203 and grp_fu_289_p2);
    and_ln172_4_fu_786_p2 <= (or_ln130_reg_1188 and grp_fu_192_p2);
    and_ln172_fu_791_p2 <= (and_ln172_4_fu_786_p2 and and_ln172_3_fu_781_p2);
    and_ln175_3_fu_540_p2 <= (or_ln130_reg_1188 and grp_fu_173_p2);
    and_ln175_4_fu_545_p2 <= (or_ln130_2_reg_1203 and grp_fu_202_p2);
    and_ln175_fu_550_p2 <= (and_ln175_4_fu_545_p2 and and_ln175_3_fu_540_p2);
    and_ln178_2_fu_556_p2 <= (or_ln130_2_reg_1203 and grp_fu_208_p2);
    and_ln178_fu_561_p2 <= (grp_fu_213_p2 and and_ln178_2_fu_556_p2);
    and_ln181_2_fu_982_p2 <= (tmp_96_reg_1359 and or_ln130_2_reg_1203);
    and_ln181_fu_986_p2 <= (tmp_97_reg_1364 and and_ln181_2_fu_982_p2);
    and_ln184_2_fu_797_p2 <= (or_ln130_2_reg_1203 and grp_fu_304_p2);
    and_ln184_fu_802_p2 <= (grp_fu_309_p2 and and_ln184_2_fu_797_p2);
    and_ln187_3_fu_502_p2 <= (or_ln130_2_reg_1203 and grp_fu_202_p2);
    and_ln187_4_fu_507_p2 <= (or_ln130_reg_1188 and grp_fu_173_p2);
    and_ln187_fu_512_p2 <= (and_ln187_4_fu_507_p2 and and_ln187_3_fu_502_p2);
    and_ln190_3_fu_518_p2 <= (or_ln130_reg_1188 and grp_fu_178_p2);
    and_ln190_4_fu_523_p2 <= (or_ln130_2_reg_1203 and grp_fu_208_p2);
    and_ln190_fu_528_p2 <= (and_ln190_4_fu_523_p2 and and_ln190_3_fu_518_p2);
    and_ln193_2_fu_1025_p2 <= (tmp_104_reg_1375 and or_ln130_2_reg_1203);
    and_ln193_fu_1029_p2 <= (tmp_105_reg_1380 and and_ln193_2_fu_1025_p2);
    and_ln196_2_fu_808_p2 <= (or_ln130_2_reg_1203 and grp_fu_324_p2);
    and_ln196_fu_813_p2 <= (grp_fu_329_p2 and and_ln196_2_fu_808_p2);
    and_ln199_2_fu_1053_p2 <= (tmp_108_reg_1391 and or_ln130_2_reg_1203);
    and_ln199_fu_1057_p2 <= (tmp_109_reg_1396 and and_ln199_2_fu_1053_p2);
    and_ln202_3_fu_819_p2 <= (or_ln130_2_reg_1203 and grp_fu_344_p2);
    and_ln202_4_fu_824_p2 <= (or_ln130_reg_1188 and grp_fu_197_p2);
    and_ln202_fu_829_p2 <= (and_ln202_4_fu_824_p2 and and_ln202_3_fu_819_p2);
    and_ln205_3_fu_469_p2 <= (or_ln130_reg_1188 and grp_fu_173_p2);
    and_ln205_4_fu_474_p2 <= (or_ln130_2_reg_1203 and grp_fu_202_p2);
    and_ln205_fu_479_p2 <= (and_ln205_4_fu_474_p2 and and_ln205_3_fu_469_p2);
    and_ln208_2_fu_485_p2 <= (or_ln130_2_reg_1203 and grp_fu_208_p2);
    and_ln208_fu_490_p2 <= (grp_fu_213_p2 and and_ln208_2_fu_485_p2);
    and_ln211_2_fu_1096_p2 <= (tmp_116_reg_1407 and or_ln130_2_reg_1203);
    and_ln211_fu_1100_p2 <= (tmp_117_reg_1412 and and_ln211_2_fu_1096_p2);
    and_ln214_2_fu_835_p2 <= (or_ln130_2_reg_1203 and grp_fu_359_p2);
    and_ln214_fu_840_p2 <= (grp_fu_364_p2 and and_ln214_2_fu_835_p2);
    and_ln217_3_fu_439_p2 <= (or_ln130_2_fu_433_p2 and grp_fu_202_p2);
    and_ln217_4_fu_445_p2 <= (or_ln130_fu_398_p2 and grp_fu_173_p2);
    and_ln217_fu_451_p2 <= (and_ln217_4_fu_445_p2 and and_ln217_3_fu_439_p2);
    and_ln220_fu_457_p2 <= (or_ln130_fu_398_p2 and grp_fu_178_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_condition_153_assign_proc : process(or_ln220_reg_1241, or_ln208_reg_1251, or_ln190_reg_1261, or_ln178_reg_1271, or_ln160_reg_1281, or_ln148_reg_1291)
    begin
                ap_condition_153 <= ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= tanh_lut100_q0;
    bitcast_ln130_2_fu_404_p1 <= conv1_i_reg_1153;
    bitcast_ln130_fu_369_p1 <= n;

    grp_fu_169_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_169_ce <= ap_const_logic_1;
        else 
            grp_fu_169_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_173_opcode_assign_proc : process(or_ln220_reg_1241, or_ln208_reg_1251, or_ln190_reg_1261, or_ln178_reg_1271, or_ln160_reg_1281, or_ln148_reg_1291, or_ln136_reg_1301, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17)
    begin
        if ((((or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln136_reg_1301 = ap_const_lv1_0) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            grp_fu_173_opcode <= ap_const_lv5_3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln178_reg_1271 = ap_const_lv1_0)))) then 
            grp_fu_173_opcode <= ap_const_lv5_4;
        else 
            grp_fu_173_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_173_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_173_p1 <= ap_const_lv32_C0400000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_173_p1 <= ap_const_lv32_C0000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_173_p1 <= ap_const_lv32_BF800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_173_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_173_p1 <= ap_const_lv32_3F800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_173_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_173_p1 <= ap_const_lv32_40400000;
        else 
            grp_fu_173_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_178_opcode_assign_proc : process(or_ln220_reg_1241, or_ln208_reg_1251, or_ln190_reg_1261, or_ln178_reg_1271, or_ln160_reg_1281, or_ln148_reg_1291, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state17)
    begin
        if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0))) then 
            grp_fu_178_opcode <= ap_const_lv5_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln178_reg_1271 = ap_const_lv1_0)))) then 
            grp_fu_178_opcode <= ap_const_lv5_3;
        else 
            grp_fu_178_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_178_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_178_p1 <= ap_const_lv32_C0000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_178_p1 <= ap_const_lv32_BF800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_178_p1 <= ap_const_lv32_3F800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_178_p1 <= ap_const_lv32_40400000;
        else 
            grp_fu_178_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_202_opcode_assign_proc : process(or_ln220_reg_1241, or_ln208_reg_1251, or_ln190_reg_1261, or_ln178_reg_1271, or_ln160_reg_1281, or_ln148_reg_1291, or_ln136_reg_1301, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((((or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln136_reg_1301 = ap_const_lv1_0) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            grp_fu_202_opcode <= ap_const_lv5_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln178_reg_1271 = ap_const_lv1_0)))) then 
            grp_fu_202_opcode <= ap_const_lv5_3;
        else 
            grp_fu_202_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_202_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_202_p1 <= ap_const_lv64_C006666666666666;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_202_p1 <= ap_const_lv64_BFFCCCCCCCCCCCCC;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_202_p1 <= ap_const_lv64_BFF3333333333333;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_202_p1 <= ap_const_lv64_3FC99999999999A0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_202_p1 <= ap_const_lv64_3FE999999999999C;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_202_p1 <= ap_const_lv64_400199999999999A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_202_p1 <= ap_const_lv64_4006666666666668;
        else 
            grp_fu_202_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_208_opcode_assign_proc : process(or_ln220_reg_1241, or_ln208_reg_1251, or_ln190_reg_1261, or_ln178_reg_1271, or_ln160_reg_1281, or_ln148_reg_1291, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((((or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (or_ln178_reg_1271 = ap_const_lv1_0)))) then 
            grp_fu_208_opcode <= ap_const_lv5_4;
        elsif ((((or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            grp_fu_208_opcode <= ap_const_lv5_3;
        else 
            grp_fu_208_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_208_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_208_p1 <= ap_const_lv64_C003333333333333;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_208_p1 <= ap_const_lv64_C004CCCCCCCCCCCD;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_208_p1 <= ap_const_lv64_BFFCCCCCCCCCCCCC;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_208_p1 <= ap_const_lv64_BFE9999999999998;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_208_p1 <= ap_const_lv64_3FC99999999999A0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_208_p1 <= ap_const_lv64_3FF3333333333334;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_208_p1 <= ap_const_lv64_400199999999999A;
        else 
            grp_fu_208_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_213_opcode_assign_proc : process(or_ln220_reg_1241, or_ln208_reg_1251, or_ln190_reg_1261, or_ln178_reg_1271, or_ln160_reg_1281, or_ln148_reg_1291, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if (((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0))) then 
            grp_fu_213_opcode <= ap_const_lv5_3;
        elsif ((((or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln148_reg_1291 = ap_const_lv1_0) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (or_ln160_reg_1281 = ap_const_lv1_0) and (or_ln178_reg_1271 = ap_const_lv1_0)) or ((or_ln190_reg_1261 = ap_const_lv1_0) and (or_ln208_reg_1251 = ap_const_lv1_0) and (or_ln220_reg_1241 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            grp_fu_213_opcode <= ap_const_lv5_4;
        else 
            grp_fu_213_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_213_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_213_p1 <= ap_const_lv64_C00199999999999A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_213_p1 <= ap_const_lv64_C004CCCCCCCCCCCD;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_213_p1 <= ap_const_lv64_BFF9999999999999;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_213_p1 <= ap_const_lv64_3FD99999999999A0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_213_p1 <= ap_const_lv64_4003333333333334;
        else 
            grp_fu_213_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_231_opcode_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state15, ap_condition_153)
    begin
        if ((ap_const_boolean_1 = ap_condition_153)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                grp_fu_231_opcode <= ap_const_lv5_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                grp_fu_231_opcode <= ap_const_lv5_4;
            else 
                grp_fu_231_opcode <= "XXXXX";
            end if;
        else 
            grp_fu_231_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_231_p1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_231_p1 <= ap_const_lv64_C00199999999999A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_231_p1 <= ap_const_lv64_C003333333333333;
        else 
            grp_fu_231_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln130_4_fu_392_p2 <= "1" when (trunc_ln130_fu_382_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_5_fu_421_p2 <= "0" when (tmp_62_fu_407_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln130_6_fu_427_p2 <= "1" when (trunc_ln130_2_fu_417_p1 = ap_const_lv52_0) else "0";
    icmp_ln130_fu_386_p2 <= "0" when (tmp_fu_372_p4 = ap_const_lv8_FF) else "1";
    lut_i_16_fu_699_p3 <= 
        select_ln136_fu_692_p3 when (or_ln136_reg_1301(0) = '1') else 
        zext_ln120_fu_688_p1;
    lut_i_17_fu_751_p3 <= 
        select_ln142_fu_737_p3 when (or_ln142_fu_745_p2(0) = '1') else 
        zext_ln120_5_fu_706_p1;
    lut_i_18_fu_853_p3 <= 
        select_ln148_fu_846_p3 when (or_ln148_reg_1291(0) = '1') else 
        lut_i_17_reg_1306;
    lut_i_19_fu_884_p3 <= 
        select_ln154_fu_872_p3 when (or_ln154_fu_879_p2(0) = '1') else 
        zext_ln120_6_fu_859_p1;
    lut_i_20_fu_899_p3 <= 
        select_ln160_fu_892_p3 when (or_ln160_reg_1281(0) = '1') else 
        lut_i_19_fu_884_p3;
    lut_i_21_fu_927_p3 <= 
        select_ln166_fu_915_p3 when (or_ln166_fu_922_p2(0) = '1') else 
        lut_i_20_fu_899_p3;
    lut_i_22_fu_956_p3 <= 
        select_ln172_fu_944_p3 when (or_ln172_fu_951_p2(0) = '1') else 
        lut_i_21_fu_927_p3;
    lut_i_23_fu_975_p3 <= 
        select_ln178_fu_968_p3 when (or_ln178_reg_1271(0) = '1') else 
        zext_ln120_7_fu_964_p1;
    lut_i_24_fu_1003_p3 <= 
        select_ln184_fu_991_p3 when (or_ln184_fu_998_p2(0) = '1') else 
        lut_i_23_fu_975_p3;
    lut_i_25_fu_1018_p3 <= 
        select_ln190_fu_1011_p3 when (or_ln190_reg_1261(0) = '1') else 
        lut_i_24_fu_1003_p3;
    lut_i_26_fu_1046_p3 <= 
        select_ln196_fu_1034_p3 when (or_ln196_fu_1041_p2(0) = '1') else 
        lut_i_25_reg_1423;
    lut_i_27_fu_1074_p3 <= 
        select_ln202_fu_1062_p3 when (or_ln202_fu_1069_p2(0) = '1') else 
        lut_i_26_fu_1046_p3;
    lut_i_28_fu_1089_p3 <= 
        select_ln208_fu_1082_p3 when (or_ln208_reg_1251(0) = '1') else 
        lut_i_27_fu_1074_p3;
    lut_i_29_fu_1117_p3 <= 
        select_ln214_fu_1105_p3 when (or_ln214_fu_1112_p2(0) = '1') else 
        lut_i_28_fu_1089_p3;
    lut_i_30_fu_1132_p3 <= 
        select_ln220_fu_1125_p3 when (or_ln220_reg_1241(0) = '1') else 
        lut_i_29_fu_1117_p3;
    lut_i_fu_682_p2 <= (and_ln130_fu_672_p2 and and_ln130_3_fu_677_p2);
    or_ln130_2_fu_433_p2 <= (icmp_ln130_6_fu_427_p2 or icmp_ln130_5_fu_421_p2);
    or_ln130_fu_398_p2 <= (icmp_ln130_fu_386_p2 or icmp_ln130_4_fu_392_p2);
    or_ln136_fu_666_p2 <= (and_ln136_fu_660_p2 or and_ln133_fu_649_p2);
    or_ln142_fu_745_p2 <= (and_ln142_fu_731_p2 or and_ln139_fu_715_p2);
    or_ln148_fu_638_p2 <= (and_ln148_fu_632_p2 or and_ln145_fu_621_p2);
    or_ln154_fu_879_p2 <= (and_ln154_reg_1321 or and_ln151_fu_867_p2);
    or_ln160_fu_605_p2 <= (and_ln160_fu_599_p2 or and_ln157_fu_583_p2);
    or_ln166_fu_922_p2 <= (and_ln166_reg_1337 or and_ln163_fu_910_p2);
    or_ln172_fu_951_p2 <= (and_ln172_reg_1353 or and_ln169_fu_939_p2);
    or_ln178_fu_567_p2 <= (and_ln178_fu_561_p2 or and_ln175_fu_550_p2);
    or_ln184_fu_998_p2 <= (and_ln184_reg_1369 or and_ln181_fu_986_p2);
    or_ln190_fu_534_p2 <= (and_ln190_fu_528_p2 or and_ln187_fu_512_p2);
    or_ln196_fu_1041_p2 <= (and_ln196_reg_1385 or and_ln193_fu_1029_p2);
    or_ln202_fu_1069_p2 <= (and_ln202_reg_1401 or and_ln199_fu_1057_p2);
    or_ln208_fu_496_p2 <= (and_ln208_fu_490_p2 or and_ln205_fu_479_p2);
    or_ln214_fu_1112_p2 <= (and_ln214_reg_1417 or and_ln211_fu_1100_p2);
    or_ln220_fu_463_p2 <= (and_ln220_fu_457_p2 or and_ln217_fu_451_p2);
    select_ln136_fu_692_p3 <= 
        ap_const_lv2_3 when (and_ln136_reg_1296(0) = '1') else 
        ap_const_lv2_2;
    select_ln142_fu_737_p3 <= 
        ap_const_lv3_5 when (and_ln142_fu_731_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln148_fu_846_p3 <= 
        ap_const_lv3_7 when (and_ln148_reg_1286(0) = '1') else 
        ap_const_lv3_6;
    select_ln154_fu_872_p3 <= 
        ap_const_lv4_9 when (and_ln154_reg_1321(0) = '1') else 
        ap_const_lv4_8;
    select_ln160_fu_892_p3 <= 
        ap_const_lv4_B when (and_ln160_reg_1276(0) = '1') else 
        ap_const_lv4_A;
    select_ln166_fu_915_p3 <= 
        ap_const_lv4_D when (and_ln166_reg_1337(0) = '1') else 
        ap_const_lv4_C;
    select_ln172_fu_944_p3 <= 
        ap_const_lv4_F when (and_ln172_reg_1353(0) = '1') else 
        ap_const_lv4_E;
    select_ln178_fu_968_p3 <= 
        ap_const_lv5_11 when (and_ln178_reg_1266(0) = '1') else 
        ap_const_lv5_10;
    select_ln184_fu_991_p3 <= 
        ap_const_lv5_13 when (and_ln184_reg_1369(0) = '1') else 
        ap_const_lv5_12;
    select_ln190_fu_1011_p3 <= 
        ap_const_lv5_15 when (and_ln190_reg_1256(0) = '1') else 
        ap_const_lv5_14;
    select_ln196_fu_1034_p3 <= 
        ap_const_lv5_17 when (and_ln196_reg_1385(0) = '1') else 
        ap_const_lv5_16;
    select_ln202_fu_1062_p3 <= 
        ap_const_lv5_19 when (and_ln202_reg_1401(0) = '1') else 
        ap_const_lv5_18;
    select_ln208_fu_1082_p3 <= 
        ap_const_lv5_1B when (and_ln208_reg_1246(0) = '1') else 
        ap_const_lv5_1A;
    select_ln214_fu_1105_p3 <= 
        ap_const_lv5_1D when (and_ln214_reg_1417(0) = '1') else 
        ap_const_lv5_1C;
    select_ln220_fu_1125_p3 <= 
        ap_const_lv5_1F when (and_ln220_reg_1236(0) = '1') else 
        ap_const_lv5_1E;
    tanh_lut100_address0 <= zext_ln120_8_fu_1139_p1(5 - 1 downto 0);

    tanh_lut100_ce0_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            tanh_lut100_ce0 <= ap_const_logic_1;
        else 
            tanh_lut100_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_62_fu_407_p4 <= bitcast_ln130_2_fu_404_p1(62 downto 52);
    tmp_fu_372_p4 <= bitcast_ln130_fu_369_p1(30 downto 23);
    trunc_ln130_2_fu_417_p1 <= bitcast_ln130_2_fu_404_p1(52 - 1 downto 0);
    trunc_ln130_fu_382_p1 <= bitcast_ln130_fu_369_p1(23 - 1 downto 0);
    zext_ln120_5_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_16_fu_699_p3),3));
    zext_ln120_6_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_18_fu_853_p3),4));
    zext_ln120_7_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_22_fu_956_p3),5));
    zext_ln120_8_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_30_reg_1428),32));
    zext_ln120_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_i_fu_682_p2),2));
end behav;
