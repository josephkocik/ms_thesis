// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_lstm_p_anonymous_namespace_preProcess_float_2u_unsigned_int_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        l_mulStr1_dout,
        l_mulStr1_empty_n,
        l_mulStr1_read,
        l_data2_din,
        l_data2_full_n,
        l_data2_write
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [127:0] l_mulStr1_dout;
input   l_mulStr1_empty_n;
output   l_mulStr1_read;
output  [31:0] l_data2_din;
input   l_data2_full_n;
output   l_data2_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg l_mulStr1_read;
reg[31:0] l_data2_din;
reg l_data2_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    l_mulStr1_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg    l_data2_blk_n;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
reg   [31:0] reg_85;
reg    ap_block_state1;
reg    ap_block_state12;
reg    ap_block_state13;
reg    ap_block_state14;
reg    ap_block_state15;
reg    ap_block_state16;
reg   [31:0] reg_89;
reg   [31:0] reg_93;
wire   [31:0] grp_fu_43_p2;
reg   [31:0] reg_97;
wire   [31:0] grp_fu_47_p2;
reg   [31:0] reg_102;
reg   [31:0] reg_108;
reg   [31:0] reg_114;
reg   [31:0] reg_120;
reg   [31:0] reg_126;
wire   [31:0] grp_fu_51_p2;
reg   [31:0] reg_132;
reg   [31:0] reg_137;
reg   [31:0] reg_142;
reg   [31:0] reg_147;
reg   [31:0] reg_152;
wire   [31:0] trunc_ln674_fu_157_p1;
reg   [31:0] trunc_ln674_reg_605;
wire   [31:0] bitcast_ln102_fu_161_p1;
wire   [31:0] bitcast_ln102_823_fu_165_p1;
wire   [31:0] bitcast_ln102_824_fu_170_p1;
wire   [31:0] bitcast_ln102_825_fu_175_p1;
wire   [31:0] trunc_ln674_216_fu_180_p1;
reg   [31:0] trunc_ln674_216_reg_630;
wire   [31:0] bitcast_ln102_1_fu_184_p1;
wire   [31:0] bitcast_ln102_826_fu_188_p1;
wire   [31:0] bitcast_ln102_827_fu_193_p1;
wire   [31:0] bitcast_ln102_828_fu_198_p1;
wire   [31:0] trunc_ln674_217_fu_203_p1;
reg   [31:0] trunc_ln674_217_reg_655;
wire   [31:0] bitcast_ln102_2_fu_207_p1;
wire   [31:0] bitcast_ln102_829_fu_211_p1;
wire   [31:0] bitcast_ln102_830_fu_216_p1;
wire   [31:0] bitcast_ln102_831_fu_221_p1;
wire   [31:0] trunc_ln674_218_fu_226_p1;
reg   [31:0] trunc_ln674_218_reg_680;
wire   [31:0] bitcast_ln102_3_fu_230_p1;
wire   [31:0] bitcast_ln102_832_fu_234_p1;
wire   [31:0] bitcast_ln102_833_fu_239_p1;
wire   [31:0] bitcast_ln102_834_fu_244_p1;
wire   [31:0] trunc_ln674_219_fu_249_p1;
reg   [31:0] trunc_ln674_219_reg_705;
wire   [31:0] bitcast_ln102_4_fu_253_p1;
wire   [31:0] bitcast_ln102_835_fu_257_p1;
wire   [31:0] bitcast_ln102_836_fu_262_p1;
wire   [31:0] bitcast_ln102_837_fu_267_p1;
wire   [31:0] trunc_ln674_220_fu_272_p1;
reg   [31:0] trunc_ln674_220_reg_730;
reg   [31:0] add_i_i_1_reg_735;
wire   [31:0] bitcast_ln102_5_fu_276_p1;
wire   [31:0] bitcast_ln102_838_fu_280_p1;
wire   [31:0] bitcast_ln102_839_fu_285_p1;
wire   [31:0] bitcast_ln102_840_fu_290_p1;
wire   [31:0] trunc_ln674_221_fu_295_p1;
reg   [31:0] trunc_ln674_221_reg_760;
reg   [31:0] add_i_i_2_reg_765;
wire   [31:0] bitcast_ln102_6_fu_299_p1;
wire   [31:0] bitcast_ln102_841_fu_303_p1;
wire   [31:0] bitcast_ln102_842_fu_308_p1;
wire   [31:0] bitcast_ln102_843_fu_313_p1;
wire   [31:0] trunc_ln674_222_fu_318_p1;
reg   [31:0] trunc_ln674_222_reg_790;
reg   [31:0] add_i_i_3_reg_795;
wire   [31:0] bitcast_ln102_7_fu_322_p1;
wire   [31:0] bitcast_ln102_844_fu_326_p1;
wire   [31:0] bitcast_ln102_845_fu_331_p1;
wire   [31:0] bitcast_ln102_846_fu_336_p1;
wire   [31:0] trunc_ln674_223_fu_341_p1;
reg   [31:0] trunc_ln674_223_reg_820;
reg   [31:0] add_i_i_4_reg_825;
wire   [31:0] bitcast_ln102_82_fu_345_p1;
wire   [31:0] bitcast_ln102_847_fu_349_p1;
wire   [31:0] bitcast_ln102_848_fu_354_p1;
wire   [31:0] bitcast_ln102_849_fu_359_p1;
wire   [31:0] trunc_ln674_224_fu_364_p1;
reg   [31:0] trunc_ln674_224_reg_850;
wire   [31:0] bitcast_ln102_93_fu_368_p1;
wire   [31:0] bitcast_ln102_850_fu_372_p1;
wire   [31:0] bitcast_ln102_851_fu_377_p1;
wire   [31:0] bitcast_ln102_852_fu_382_p1;
wire   [31:0] trunc_ln674_225_fu_387_p1;
reg   [31:0] trunc_ln674_225_reg_875;
wire   [31:0] bitcast_ln102_104_fu_396_p1;
wire   [31:0] bitcast_ln102_853_fu_400_p1;
wire   [31:0] bitcast_ln102_854_fu_405_p1;
wire   [31:0] bitcast_ln102_855_fu_410_p1;
wire   [31:0] trunc_ln674_226_fu_415_p1;
reg   [31:0] trunc_ln674_226_reg_900;
wire   [31:0] bitcast_ln102_11_fu_424_p1;
wire   [31:0] bitcast_ln102_856_fu_428_p1;
wire   [31:0] bitcast_ln102_857_fu_433_p1;
wire   [31:0] bitcast_ln102_858_fu_438_p1;
wire   [31:0] trunc_ln674_227_fu_443_p1;
reg   [31:0] trunc_ln674_227_reg_925;
wire   [31:0] bitcast_ln102_12_fu_452_p1;
wire   [31:0] bitcast_ln102_859_fu_456_p1;
wire   [31:0] bitcast_ln102_860_fu_461_p1;
wire   [31:0] bitcast_ln102_861_fu_466_p1;
wire   [31:0] trunc_ln674_228_fu_471_p1;
reg   [31:0] trunc_ln674_228_reg_950;
wire   [31:0] bitcast_ln102_13_fu_480_p1;
wire   [31:0] bitcast_ln102_862_fu_484_p1;
wire   [31:0] bitcast_ln102_863_fu_489_p1;
wire   [31:0] bitcast_ln102_864_fu_494_p1;
wire   [31:0] trunc_ln674_229_fu_499_p1;
reg   [31:0] trunc_ln674_229_reg_975;
wire   [31:0] bitcast_ln102_14_fu_508_p1;
wire   [31:0] bitcast_ln102_865_fu_512_p1;
wire   [31:0] bitcast_ln102_866_fu_517_p1;
wire   [31:0] bitcast_ln102_867_fu_522_p1;
wire   [31:0] trunc_ln674_230_fu_527_p1;
reg   [31:0] trunc_ln674_230_reg_1000;
wire   [31:0] bitcast_ln102_15_fu_536_p1;
wire   [31:0] bitcast_ln102_868_fu_540_p1;
wire   [31:0] bitcast_ln102_869_fu_545_p1;
wire   [31:0] bitcast_ln102_870_fu_550_p1;
wire   [31:0] bitcast_ln174_fu_391_p1;
wire   [31:0] bitcast_ln174_1_fu_419_p1;
wire   [31:0] bitcast_ln174_2_fu_447_p1;
wire   [31:0] bitcast_ln174_3_fu_475_p1;
wire   [31:0] bitcast_ln174_4_fu_503_p1;
wire   [31:0] bitcast_ln174_5_fu_531_p1;
wire   [31:0] bitcast_ln174_6_fu_555_p1;
wire   [31:0] bitcast_ln174_7_fu_560_p1;
wire   [31:0] bitcast_ln174_8_fu_565_p1;
wire   [31:0] bitcast_ln174_9_fu_570_p1;
wire   [31:0] bitcast_ln174_10_fu_575_p1;
wire   [31:0] bitcast_ln174_11_fu_580_p1;
wire   [31:0] bitcast_ln174_12_fu_585_p1;
wire   [31:0] bitcast_ln174_13_fu_590_p1;
wire   [31:0] bitcast_ln174_14_fu_595_p1;
wire   [31:0] bitcast_ln174_15_fu_600_p1;
reg   [31:0] grp_fu_43_p0;
reg   [31:0] grp_fu_43_p1;
reg   [31:0] grp_fu_47_p0;
reg   [31:0] grp_fu_47_p1;
reg   [31:0] grp_fu_51_p0;
reg   [31:0] grp_fu_51_p1;
reg    grp_fu_43_ce;
reg    grp_fu_47_ce;
reg    grp_fu_51_ce;
reg   [26:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 27'd1;
end

krnl_lstm_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U3030(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_43_p0),
    .din1(grp_fu_43_p1),
    .ce(grp_fu_43_ce),
    .dout(grp_fu_43_p2)
);

krnl_lstm_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U3031(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_47_p0),
    .din1(grp_fu_47_p1),
    .ce(grp_fu_47_ce),
    .dout(grp_fu_47_p2)
);

krnl_lstm_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U3032(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_51_p0),
    .din1(grp_fu_51_p1),
    .ce(grp_fu_51_ce),
    .dout(grp_fu_51_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_i_i_1_reg_735 <= grp_fu_43_p2;
        trunc_ln674_221_reg_760 <= trunc_ln674_221_fu_295_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_i_i_2_reg_765 <= grp_fu_43_p2;
        trunc_ln674_222_reg_790 <= trunc_ln674_222_fu_318_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_i_i_3_reg_795 <= grp_fu_43_p2;
        trunc_ln674_223_reg_820 <= trunc_ln674_223_fu_341_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_i_i_4_reg_825 <= grp_fu_43_p2;
        trunc_ln674_224_reg_850 <= trunc_ln674_224_fu_364_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        reg_102 <= grp_fu_47_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_108 <= grp_fu_47_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_114 <= grp_fu_47_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        reg_120 <= grp_fu_47_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_126 <= grp_fu_47_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        reg_132 <= grp_fu_51_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)))) begin
        reg_137 <= grp_fu_51_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)))) begin
        reg_142 <= grp_fu_51_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)))) begin
        reg_147 <= grp_fu_51_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)))) begin
        reg_152 <= grp_fu_51_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~((l_mulStr1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_85 <= {{l_mulStr1_dout[63:32]}};
        reg_89 <= {{l_mulStr1_dout[95:64]}};
        reg_93 <= {{l_mulStr1_dout[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        reg_97 <= grp_fu_43_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        trunc_ln674_216_reg_630 <= trunc_ln674_216_fu_180_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        trunc_ln674_217_reg_655 <= trunc_ln674_217_fu_203_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        trunc_ln674_218_reg_680 <= trunc_ln674_218_fu_226_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        trunc_ln674_219_reg_705 <= trunc_ln674_219_fu_249_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        trunc_ln674_220_reg_730 <= trunc_ln674_220_fu_272_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln674_225_reg_875 <= trunc_ln674_225_fu_387_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln674_226_reg_900 <= trunc_ln674_226_fu_415_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        trunc_ln674_227_reg_925 <= trunc_ln674_227_fu_443_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln674_228_reg_950 <= trunc_ln674_228_fu_471_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln674_229_reg_975 <= trunc_ln674_229_fu_499_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        trunc_ln674_230_reg_1000 <= trunc_ln674_230_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln674_reg_605 <= trunc_ln674_fu_157_p1;
    end
end

always @ (*) begin
    if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        grp_fu_43_ce = 1'b1;
    end else begin
        grp_fu_43_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_43_p0 = reg_126;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_43_p0 = reg_120;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_43_p0 = reg_114;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_43_p0 = reg_108;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_43_p0 = reg_102;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_43_p0 = add_i_i_4_reg_825;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_43_p0 = add_i_i_3_reg_795;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_43_p0 = add_i_i_2_reg_765;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_43_p0 = add_i_i_1_reg_735;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_43_p0 = reg_97;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_43_p0 = bitcast_ln102_4_fu_253_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_43_p0 = bitcast_ln102_3_fu_230_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_43_p0 = bitcast_ln102_2_fu_207_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_43_p0 = bitcast_ln102_1_fu_184_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_43_p0 = bitcast_ln102_fu_161_p1;
    end else begin
        grp_fu_43_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_43_p1 = reg_152;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_43_p1 = reg_147;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_43_p1 = reg_142;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_43_p1 = reg_137;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_43_p1 = reg_132;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_43_p1 = reg_126;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_43_p1 = reg_120;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_43_p1 = reg_114;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_43_p1 = reg_108;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_43_p1 = reg_102;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_43_p1 = bitcast_ln102_835_fu_257_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_43_p1 = bitcast_ln102_832_fu_234_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_43_p1 = bitcast_ln102_829_fu_211_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_43_p1 = bitcast_ln102_826_fu_188_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_43_p1 = bitcast_ln102_823_fu_165_p1;
    end else begin
        grp_fu_43_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        grp_fu_47_ce = 1'b1;
    end else begin
        grp_fu_47_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_47_p0 = bitcast_ln102_15_fu_536_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_47_p0 = bitcast_ln102_14_fu_508_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_47_p0 = bitcast_ln102_13_fu_480_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_47_p0 = bitcast_ln102_12_fu_452_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_47_p0 = bitcast_ln102_11_fu_424_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_47_p0 = bitcast_ln102_104_fu_396_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_47_p0 = bitcast_ln102_93_fu_368_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_47_p0 = bitcast_ln102_82_fu_345_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_47_p0 = bitcast_ln102_7_fu_322_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_47_p0 = bitcast_ln102_6_fu_299_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_47_p0 = bitcast_ln102_5_fu_276_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_47_p0 = bitcast_ln102_836_fu_262_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_47_p0 = bitcast_ln102_833_fu_239_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_47_p0 = bitcast_ln102_830_fu_216_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_47_p0 = bitcast_ln102_827_fu_193_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_47_p0 = bitcast_ln102_824_fu_170_p1;
    end else begin
        grp_fu_47_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_47_p1 = bitcast_ln102_868_fu_540_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_47_p1 = bitcast_ln102_865_fu_512_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_47_p1 = bitcast_ln102_862_fu_484_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_47_p1 = bitcast_ln102_859_fu_456_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_47_p1 = bitcast_ln102_856_fu_428_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_47_p1 = bitcast_ln102_853_fu_400_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_47_p1 = bitcast_ln102_850_fu_372_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_47_p1 = bitcast_ln102_847_fu_349_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_47_p1 = bitcast_ln102_844_fu_326_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_47_p1 = bitcast_ln102_841_fu_303_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_47_p1 = bitcast_ln102_838_fu_280_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_47_p1 = bitcast_ln102_837_fu_267_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_47_p1 = bitcast_ln102_834_fu_244_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_47_p1 = bitcast_ln102_831_fu_221_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_47_p1 = bitcast_ln102_828_fu_198_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_47_p1 = bitcast_ln102_825_fu_175_p1;
    end else begin
        grp_fu_47_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_51_ce = 1'b1;
    end else begin
        grp_fu_51_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_51_p0 = bitcast_ln102_869_fu_545_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_51_p0 = bitcast_ln102_866_fu_517_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_51_p0 = bitcast_ln102_863_fu_489_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_51_p0 = bitcast_ln102_860_fu_461_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_51_p0 = bitcast_ln102_857_fu_433_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_51_p0 = bitcast_ln102_854_fu_405_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_51_p0 = bitcast_ln102_851_fu_377_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_51_p0 = bitcast_ln102_848_fu_354_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_51_p0 = bitcast_ln102_845_fu_331_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_51_p0 = bitcast_ln102_842_fu_308_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_51_p0 = bitcast_ln102_839_fu_285_p1;
    end else begin
        grp_fu_51_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_51_p1 = bitcast_ln102_870_fu_550_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_51_p1 = bitcast_ln102_867_fu_522_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_51_p1 = bitcast_ln102_864_fu_494_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_51_p1 = bitcast_ln102_861_fu_466_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_51_p1 = bitcast_ln102_858_fu_438_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_51_p1 = bitcast_ln102_855_fu_410_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_51_p1 = bitcast_ln102_852_fu_382_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_51_p1 = bitcast_ln102_849_fu_359_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_51_p1 = bitcast_ln102_846_fu_336_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_51_p1 = bitcast_ln102_843_fu_313_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_51_p1 = bitcast_ln102_840_fu_290_p1;
    end else begin
        grp_fu_51_p1 = 'bx;
    end
end

always @ (*) begin
    if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        l_data2_blk_n = l_data2_full_n;
    end else begin
        l_data2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        l_data2_din = bitcast_ln174_15_fu_600_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        l_data2_din = bitcast_ln174_14_fu_595_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        l_data2_din = bitcast_ln174_13_fu_590_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        l_data2_din = bitcast_ln174_12_fu_585_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        l_data2_din = bitcast_ln174_11_fu_580_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        l_data2_din = bitcast_ln174_10_fu_575_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        l_data2_din = bitcast_ln174_9_fu_570_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        l_data2_din = bitcast_ln174_8_fu_565_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        l_data2_din = bitcast_ln174_7_fu_560_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        l_data2_din = bitcast_ln174_6_fu_555_p1;
    end else if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        l_data2_din = bitcast_ln174_5_fu_531_p1;
    end else if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        l_data2_din = bitcast_ln174_4_fu_503_p1;
    end else if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
        l_data2_din = bitcast_ln174_3_fu_475_p1;
    end else if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        l_data2_din = bitcast_ln174_2_fu_447_p1;
    end else if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        l_data2_din = bitcast_ln174_1_fu_419_p1;
    end else if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
        l_data2_din = bitcast_ln174_fu_391_p1;
    end else begin
        l_data2_din = 'bx;
    end
end

always @ (*) begin
    if ((((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)))) begin
        l_data2_write = 1'b1;
    end else begin
        l_data2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        l_mulStr1_blk_n = l_mulStr1_empty_n;
    end else begin
        l_mulStr1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~((l_mulStr1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        l_mulStr1_read = 1'b1;
    end else begin
        l_mulStr1_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((l_mulStr1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((l_mulStr1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if ((~((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((l_data2_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((l_mulStr1_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state12 = ((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state13 = ((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14 = ((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state15 = ((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state16 = ((l_data2_full_n == 1'b0) | (l_mulStr1_empty_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign bitcast_ln102_104_fu_396_p1 = trunc_ln674_225_reg_875;

assign bitcast_ln102_11_fu_424_p1 = trunc_ln674_226_reg_900;

assign bitcast_ln102_12_fu_452_p1 = trunc_ln674_227_reg_925;

assign bitcast_ln102_13_fu_480_p1 = trunc_ln674_228_reg_950;

assign bitcast_ln102_14_fu_508_p1 = trunc_ln674_229_reg_975;

assign bitcast_ln102_15_fu_536_p1 = trunc_ln674_230_reg_1000;

assign bitcast_ln102_1_fu_184_p1 = trunc_ln674_216_reg_630;

assign bitcast_ln102_2_fu_207_p1 = trunc_ln674_217_reg_655;

assign bitcast_ln102_3_fu_230_p1 = trunc_ln674_218_reg_680;

assign bitcast_ln102_4_fu_253_p1 = trunc_ln674_219_reg_705;

assign bitcast_ln102_5_fu_276_p1 = trunc_ln674_220_reg_730;

assign bitcast_ln102_6_fu_299_p1 = trunc_ln674_221_reg_760;

assign bitcast_ln102_7_fu_322_p1 = trunc_ln674_222_reg_790;

assign bitcast_ln102_823_fu_165_p1 = reg_85;

assign bitcast_ln102_824_fu_170_p1 = reg_89;

assign bitcast_ln102_825_fu_175_p1 = reg_93;

assign bitcast_ln102_826_fu_188_p1 = reg_85;

assign bitcast_ln102_827_fu_193_p1 = reg_89;

assign bitcast_ln102_828_fu_198_p1 = reg_93;

assign bitcast_ln102_829_fu_211_p1 = reg_85;

assign bitcast_ln102_82_fu_345_p1 = trunc_ln674_223_reg_820;

assign bitcast_ln102_830_fu_216_p1 = reg_89;

assign bitcast_ln102_831_fu_221_p1 = reg_93;

assign bitcast_ln102_832_fu_234_p1 = reg_85;

assign bitcast_ln102_833_fu_239_p1 = reg_89;

assign bitcast_ln102_834_fu_244_p1 = reg_93;

assign bitcast_ln102_835_fu_257_p1 = reg_85;

assign bitcast_ln102_836_fu_262_p1 = reg_89;

assign bitcast_ln102_837_fu_267_p1 = reg_93;

assign bitcast_ln102_838_fu_280_p1 = reg_85;

assign bitcast_ln102_839_fu_285_p1 = reg_89;

assign bitcast_ln102_840_fu_290_p1 = reg_93;

assign bitcast_ln102_841_fu_303_p1 = reg_85;

assign bitcast_ln102_842_fu_308_p1 = reg_89;

assign bitcast_ln102_843_fu_313_p1 = reg_93;

assign bitcast_ln102_844_fu_326_p1 = reg_85;

assign bitcast_ln102_845_fu_331_p1 = reg_89;

assign bitcast_ln102_846_fu_336_p1 = reg_93;

assign bitcast_ln102_847_fu_349_p1 = reg_85;

assign bitcast_ln102_848_fu_354_p1 = reg_89;

assign bitcast_ln102_849_fu_359_p1 = reg_93;

assign bitcast_ln102_850_fu_372_p1 = reg_85;

assign bitcast_ln102_851_fu_377_p1 = reg_89;

assign bitcast_ln102_852_fu_382_p1 = reg_93;

assign bitcast_ln102_853_fu_400_p1 = reg_85;

assign bitcast_ln102_854_fu_405_p1 = reg_89;

assign bitcast_ln102_855_fu_410_p1 = reg_93;

assign bitcast_ln102_856_fu_428_p1 = reg_85;

assign bitcast_ln102_857_fu_433_p1 = reg_89;

assign bitcast_ln102_858_fu_438_p1 = reg_93;

assign bitcast_ln102_859_fu_456_p1 = reg_85;

assign bitcast_ln102_860_fu_461_p1 = reg_89;

assign bitcast_ln102_861_fu_466_p1 = reg_93;

assign bitcast_ln102_862_fu_484_p1 = reg_85;

assign bitcast_ln102_863_fu_489_p1 = reg_89;

assign bitcast_ln102_864_fu_494_p1 = reg_93;

assign bitcast_ln102_865_fu_512_p1 = reg_85;

assign bitcast_ln102_866_fu_517_p1 = reg_89;

assign bitcast_ln102_867_fu_522_p1 = reg_93;

assign bitcast_ln102_868_fu_540_p1 = reg_85;

assign bitcast_ln102_869_fu_545_p1 = reg_89;

assign bitcast_ln102_870_fu_550_p1 = reg_93;

assign bitcast_ln102_93_fu_368_p1 = trunc_ln674_224_reg_850;

assign bitcast_ln102_fu_161_p1 = trunc_ln674_reg_605;

assign bitcast_ln174_10_fu_575_p1 = reg_97;

assign bitcast_ln174_11_fu_580_p1 = reg_97;

assign bitcast_ln174_12_fu_585_p1 = reg_97;

assign bitcast_ln174_13_fu_590_p1 = reg_97;

assign bitcast_ln174_14_fu_595_p1 = reg_97;

assign bitcast_ln174_15_fu_600_p1 = reg_97;

assign bitcast_ln174_1_fu_419_p1 = reg_97;

assign bitcast_ln174_2_fu_447_p1 = reg_97;

assign bitcast_ln174_3_fu_475_p1 = reg_97;

assign bitcast_ln174_4_fu_503_p1 = reg_97;

assign bitcast_ln174_5_fu_531_p1 = reg_97;

assign bitcast_ln174_6_fu_555_p1 = reg_97;

assign bitcast_ln174_7_fu_560_p1 = reg_97;

assign bitcast_ln174_8_fu_565_p1 = reg_97;

assign bitcast_ln174_9_fu_570_p1 = reg_97;

assign bitcast_ln174_fu_391_p1 = reg_97;

assign start_out = real_start;

assign trunc_ln674_216_fu_180_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_217_fu_203_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_218_fu_226_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_219_fu_249_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_220_fu_272_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_221_fu_295_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_222_fu_318_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_223_fu_341_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_224_fu_364_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_225_fu_387_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_226_fu_415_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_227_fu_443_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_228_fu_471_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_229_fu_499_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_230_fu_527_p1 = l_mulStr1_dout[31:0];

assign trunc_ln674_fu_157_p1 = l_mulStr1_dout[31:0];

endmodule //krnl_lstm_p_anonymous_namespace_preProcess_float_2u_unsigned_int_float_s
