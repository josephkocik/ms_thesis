-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_lstm_constructor is
port (
    ap_ready : OUT STD_LOGIC;
    p_val_V_read : IN STD_LOGIC_VECTOR (1023 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of krnl_lstm_constructor is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_21F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011111";
    constant ap_const_lv32_220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_25F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011111";
    constant ap_const_lv32_260 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100000";
    constant ap_const_lv32_27F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001111111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_29F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010011111";
    constant ap_const_lv32_2A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100000";
    constant ap_const_lv32_2BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010111111";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011011111";
    constant ap_const_lv32_2E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011100000";
    constant ap_const_lv32_2FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011111111";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";
    constant ap_const_lv32_31F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100011111";
    constant ap_const_lv32_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    constant ap_const_lv32_33F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100111111";
    constant ap_const_lv32_340 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000000";
    constant ap_const_lv32_35F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101011111";
    constant ap_const_lv32_360 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101100000";
    constant ap_const_lv32_37F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101111111";
    constant ap_const_lv32_380 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000000";
    constant ap_const_lv32_39F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110011111";
    constant ap_const_lv32_3A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110100000";
    constant ap_const_lv32_3BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110111111";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv32_3DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111011111";
    constant ap_const_lv32_3E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111100000";
    constant ap_const_lv32_3FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111111111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal l_val_fu_138_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_1_fu_146_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_2_fu_160_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_3_fu_174_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_4_fu_188_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_5_fu_202_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_6_fu_216_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_7_fu_230_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_8_fu_244_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_9_fu_258_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_10_fu_272_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_11_fu_286_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_12_fu_300_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_13_fu_314_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_14_fu_328_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_15_fu_342_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_16_fu_356_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_17_fu_370_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_18_fu_384_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_19_fu_398_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_20_fu_412_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_21_fu_426_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_22_fu_440_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_23_fu_454_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_24_fu_468_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_25_fu_482_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_26_fu_496_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_27_fu_510_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_28_fu_524_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_29_fu_538_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_30_fu_552_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_val_31_fu_566_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_fu_142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_1_fu_156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_2_fu_170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_3_fu_184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_4_fu_198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_5_fu_212_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_6_fu_226_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_7_fu_240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_8_fu_254_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_9_fu_268_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_10_fu_282_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_11_fu_296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_12_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_13_fu_324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_14_fu_338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_15_fu_352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_16_fu_366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_17_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_18_fu_394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_19_fu_408_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_20_fu_422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_21_fu_436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_22_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_23_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_24_fu_478_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_25_fu_492_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_26_fu_506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_27_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_28_fu_534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_29_fu_548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_30_fu_562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln102_31_fu_576_p1 : STD_LOGIC_VECTOR (31 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= bitcast_ln102_fu_142_p1;
    ap_return_1 <= bitcast_ln102_1_fu_156_p1;
    ap_return_10 <= bitcast_ln102_10_fu_282_p1;
    ap_return_11 <= bitcast_ln102_11_fu_296_p1;
    ap_return_12 <= bitcast_ln102_12_fu_310_p1;
    ap_return_13 <= bitcast_ln102_13_fu_324_p1;
    ap_return_14 <= bitcast_ln102_14_fu_338_p1;
    ap_return_15 <= bitcast_ln102_15_fu_352_p1;
    ap_return_16 <= bitcast_ln102_16_fu_366_p1;
    ap_return_17 <= bitcast_ln102_17_fu_380_p1;
    ap_return_18 <= bitcast_ln102_18_fu_394_p1;
    ap_return_19 <= bitcast_ln102_19_fu_408_p1;
    ap_return_2 <= bitcast_ln102_2_fu_170_p1;
    ap_return_20 <= bitcast_ln102_20_fu_422_p1;
    ap_return_21 <= bitcast_ln102_21_fu_436_p1;
    ap_return_22 <= bitcast_ln102_22_fu_450_p1;
    ap_return_23 <= bitcast_ln102_23_fu_464_p1;
    ap_return_24 <= bitcast_ln102_24_fu_478_p1;
    ap_return_25 <= bitcast_ln102_25_fu_492_p1;
    ap_return_26 <= bitcast_ln102_26_fu_506_p1;
    ap_return_27 <= bitcast_ln102_27_fu_520_p1;
    ap_return_28 <= bitcast_ln102_28_fu_534_p1;
    ap_return_29 <= bitcast_ln102_29_fu_548_p1;
    ap_return_3 <= bitcast_ln102_3_fu_184_p1;
    ap_return_30 <= bitcast_ln102_30_fu_562_p1;
    ap_return_31 <= bitcast_ln102_31_fu_576_p1;
    ap_return_4 <= bitcast_ln102_4_fu_198_p1;
    ap_return_5 <= bitcast_ln102_5_fu_212_p1;
    ap_return_6 <= bitcast_ln102_6_fu_226_p1;
    ap_return_7 <= bitcast_ln102_7_fu_240_p1;
    ap_return_8 <= bitcast_ln102_8_fu_254_p1;
    ap_return_9 <= bitcast_ln102_9_fu_268_p1;
    bitcast_ln102_10_fu_282_p1 <= l_val_10_fu_272_p4;
    bitcast_ln102_11_fu_296_p1 <= l_val_11_fu_286_p4;
    bitcast_ln102_12_fu_310_p1 <= l_val_12_fu_300_p4;
    bitcast_ln102_13_fu_324_p1 <= l_val_13_fu_314_p4;
    bitcast_ln102_14_fu_338_p1 <= l_val_14_fu_328_p4;
    bitcast_ln102_15_fu_352_p1 <= l_val_15_fu_342_p4;
    bitcast_ln102_16_fu_366_p1 <= l_val_16_fu_356_p4;
    bitcast_ln102_17_fu_380_p1 <= l_val_17_fu_370_p4;
    bitcast_ln102_18_fu_394_p1 <= l_val_18_fu_384_p4;
    bitcast_ln102_19_fu_408_p1 <= l_val_19_fu_398_p4;
    bitcast_ln102_1_fu_156_p1 <= l_val_1_fu_146_p4;
    bitcast_ln102_20_fu_422_p1 <= l_val_20_fu_412_p4;
    bitcast_ln102_21_fu_436_p1 <= l_val_21_fu_426_p4;
    bitcast_ln102_22_fu_450_p1 <= l_val_22_fu_440_p4;
    bitcast_ln102_23_fu_464_p1 <= l_val_23_fu_454_p4;
    bitcast_ln102_24_fu_478_p1 <= l_val_24_fu_468_p4;
    bitcast_ln102_25_fu_492_p1 <= l_val_25_fu_482_p4;
    bitcast_ln102_26_fu_506_p1 <= l_val_26_fu_496_p4;
    bitcast_ln102_27_fu_520_p1 <= l_val_27_fu_510_p4;
    bitcast_ln102_28_fu_534_p1 <= l_val_28_fu_524_p4;
    bitcast_ln102_29_fu_548_p1 <= l_val_29_fu_538_p4;
    bitcast_ln102_2_fu_170_p1 <= l_val_2_fu_160_p4;
    bitcast_ln102_30_fu_562_p1 <= l_val_30_fu_552_p4;
    bitcast_ln102_31_fu_576_p1 <= l_val_31_fu_566_p4;
    bitcast_ln102_3_fu_184_p1 <= l_val_3_fu_174_p4;
    bitcast_ln102_4_fu_198_p1 <= l_val_4_fu_188_p4;
    bitcast_ln102_5_fu_212_p1 <= l_val_5_fu_202_p4;
    bitcast_ln102_6_fu_226_p1 <= l_val_6_fu_216_p4;
    bitcast_ln102_7_fu_240_p1 <= l_val_7_fu_230_p4;
    bitcast_ln102_8_fu_254_p1 <= l_val_8_fu_244_p4;
    bitcast_ln102_9_fu_268_p1 <= l_val_9_fu_258_p4;
    bitcast_ln102_fu_142_p1 <= l_val_fu_138_p1;
    l_val_10_fu_272_p4 <= p_val_V_read(351 downto 320);
    l_val_11_fu_286_p4 <= p_val_V_read(383 downto 352);
    l_val_12_fu_300_p4 <= p_val_V_read(415 downto 384);
    l_val_13_fu_314_p4 <= p_val_V_read(447 downto 416);
    l_val_14_fu_328_p4 <= p_val_V_read(479 downto 448);
    l_val_15_fu_342_p4 <= p_val_V_read(511 downto 480);
    l_val_16_fu_356_p4 <= p_val_V_read(543 downto 512);
    l_val_17_fu_370_p4 <= p_val_V_read(575 downto 544);
    l_val_18_fu_384_p4 <= p_val_V_read(607 downto 576);
    l_val_19_fu_398_p4 <= p_val_V_read(639 downto 608);
    l_val_1_fu_146_p4 <= p_val_V_read(63 downto 32);
    l_val_20_fu_412_p4 <= p_val_V_read(671 downto 640);
    l_val_21_fu_426_p4 <= p_val_V_read(703 downto 672);
    l_val_22_fu_440_p4 <= p_val_V_read(735 downto 704);
    l_val_23_fu_454_p4 <= p_val_V_read(767 downto 736);
    l_val_24_fu_468_p4 <= p_val_V_read(799 downto 768);
    l_val_25_fu_482_p4 <= p_val_V_read(831 downto 800);
    l_val_26_fu_496_p4 <= p_val_V_read(863 downto 832);
    l_val_27_fu_510_p4 <= p_val_V_read(895 downto 864);
    l_val_28_fu_524_p4 <= p_val_V_read(927 downto 896);
    l_val_29_fu_538_p4 <= p_val_V_read(959 downto 928);
    l_val_2_fu_160_p4 <= p_val_V_read(95 downto 64);
    l_val_30_fu_552_p4 <= p_val_V_read(991 downto 960);
    l_val_31_fu_566_p4 <= p_val_V_read(1023 downto 992);
    l_val_3_fu_174_p4 <= p_val_V_read(127 downto 96);
    l_val_4_fu_188_p4 <= p_val_V_read(159 downto 128);
    l_val_5_fu_202_p4 <= p_val_V_read(191 downto 160);
    l_val_6_fu_216_p4 <= p_val_V_read(223 downto 192);
    l_val_7_fu_230_p4 <= p_val_V_read(255 downto 224);
    l_val_8_fu_244_p4 <= p_val_V_read(287 downto 256);
    l_val_9_fu_258_p4 <= p_val_V_read(319 downto 288);
    l_val_fu_138_p1 <= p_val_V_read(32 - 1 downto 0);
end behav;
