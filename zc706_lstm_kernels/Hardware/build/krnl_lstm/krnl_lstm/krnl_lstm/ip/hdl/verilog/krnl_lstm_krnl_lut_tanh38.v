// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_lstm_krnl_lut_tanh38 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        c_ti_out_din,
        c_ti_out_full_n,
        c_ti_out_write
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
output  [31:0] c_ti_out_din;
input   c_ti_out_full_n;
output   c_ti_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg c_ti_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] tanh_lut_address0;
reg    tanh_lut_ce0;
wire   [31:0] tanh_lut_q0;
reg    c_ti_out_blk_n;
wire    ap_CS_fsm_state22;
wire   [63:0] grp_fu_191_p1;
reg   [63:0] conv1_i_i_reg_1175;
wire    ap_CS_fsm_state2;
wire   [0:0] or_ln130_fu_420_p2;
reg   [0:0] or_ln130_reg_1210;
wire    ap_CS_fsm_state4;
wire   [0:0] or_ln130_1_fu_455_p2;
reg   [0:0] or_ln130_1_reg_1225;
wire   [0:0] and_ln220_fu_479_p2;
reg   [0:0] and_ln220_reg_1258;
wire   [0:0] or_ln220_fu_485_p2;
reg   [0:0] or_ln220_reg_1263;
wire   [0:0] and_ln208_fu_512_p2;
reg   [0:0] and_ln208_reg_1268;
wire    ap_CS_fsm_state6;
wire   [0:0] or_ln208_fu_518_p2;
reg   [0:0] or_ln208_reg_1273;
wire   [0:0] and_ln190_fu_550_p2;
reg   [0:0] and_ln190_reg_1278;
wire    ap_CS_fsm_state8;
wire   [0:0] or_ln190_fu_556_p2;
reg   [0:0] or_ln190_reg_1283;
wire   [0:0] and_ln178_fu_583_p2;
reg   [0:0] and_ln178_reg_1288;
wire    ap_CS_fsm_state10;
wire   [0:0] or_ln178_fu_589_p2;
reg   [0:0] or_ln178_reg_1293;
wire   [0:0] and_ln160_fu_621_p2;
reg   [0:0] and_ln160_reg_1298;
wire    ap_CS_fsm_state12;
wire   [0:0] or_ln160_fu_627_p2;
reg   [0:0] or_ln160_reg_1303;
wire   [0:0] and_ln148_fu_654_p2;
reg   [0:0] and_ln148_reg_1308;
wire    ap_CS_fsm_state14;
wire   [0:0] or_ln148_fu_660_p2;
reg   [0:0] or_ln148_reg_1313;
wire   [0:0] and_ln136_fu_682_p2;
reg   [0:0] and_ln136_reg_1318;
wire    ap_CS_fsm_state16;
wire   [0:0] or_ln136_fu_688_p2;
reg   [0:0] or_ln136_reg_1323;
wire   [2:0] lut_i_2_fu_773_p3;
reg   [2:0] lut_i_2_reg_1328;
wire    ap_CS_fsm_state18;
wire   [0:0] grp_fu_261_p2;
reg   [0:0] tmp_15_reg_1333;
wire   [0:0] grp_fu_266_p2;
reg   [0:0] tmp_16_reg_1338;
wire   [0:0] and_ln154_fu_786_p2;
reg   [0:0] and_ln154_reg_1343;
wire   [0:0] grp_fu_281_p2;
reg   [0:0] tmp_23_reg_1349;
wire   [0:0] grp_fu_286_p2;
reg   [0:0] tmp_24_reg_1354;
wire   [0:0] and_ln166_fu_797_p2;
reg   [0:0] and_ln166_reg_1359;
wire   [0:0] grp_fu_301_p2;
reg   [0:0] tmp_27_reg_1365;
wire   [0:0] grp_fu_306_p2;
reg   [0:0] tmp_28_reg_1370;
wire   [0:0] and_ln172_fu_813_p2;
reg   [0:0] and_ln172_reg_1375;
wire   [0:0] grp_fu_316_p2;
reg   [0:0] tmp_35_reg_1381;
wire   [0:0] grp_fu_321_p2;
reg   [0:0] tmp_36_reg_1386;
wire   [0:0] and_ln184_fu_824_p2;
reg   [0:0] and_ln184_reg_1391;
wire   [0:0] grp_fu_336_p2;
reg   [0:0] tmp_43_reg_1397;
wire   [0:0] grp_fu_341_p2;
reg   [0:0] tmp_44_reg_1402;
wire   [0:0] and_ln196_fu_835_p2;
reg   [0:0] and_ln196_reg_1407;
wire   [0:0] grp_fu_356_p2;
reg   [0:0] tmp_47_reg_1413;
wire   [0:0] grp_fu_361_p2;
reg   [0:0] tmp_48_reg_1418;
wire   [0:0] and_ln202_fu_851_p2;
reg   [0:0] and_ln202_reg_1423;
wire   [0:0] grp_fu_371_p2;
reg   [0:0] tmp_55_reg_1429;
wire   [0:0] grp_fu_376_p2;
reg   [0:0] tmp_56_reg_1434;
wire   [0:0] and_ln214_fu_862_p2;
reg   [0:0] and_ln214_reg_1439;
wire   [4:0] lut_i_10_fu_1040_p3;
reg   [4:0] lut_i_10_reg_1445;
wire    ap_CS_fsm_state19;
wire   [4:0] lut_i_15_fu_1154_p3;
reg   [4:0] lut_i_15_reg_1450;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [31:0] zext_ln120_4_fu_1161_p1;
reg    ap_block_state1;
reg   [31:0] grp_fu_195_p1;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state17;
reg   [31:0] grp_fu_200_p1;
reg   [63:0] grp_fu_224_p1;
wire    ap_CS_fsm_state15;
reg   [63:0] grp_fu_230_p1;
reg   [63:0] grp_fu_235_p1;
reg   [63:0] grp_fu_253_p1;
wire   [31:0] bitcast_ln130_fu_391_p1;
wire   [7:0] tmp_fu_394_p4;
wire   [22:0] trunc_ln130_fu_404_p1;
wire   [0:0] icmp_ln130_1_fu_414_p2;
wire   [0:0] icmp_ln130_fu_408_p2;
wire   [63:0] bitcast_ln130_1_fu_426_p1;
wire   [10:0] tmp_2_fu_429_p4;
wire   [51:0] trunc_ln130_1_fu_439_p1;
wire   [0:0] icmp_ln130_3_fu_449_p2;
wire   [0:0] icmp_ln130_2_fu_443_p2;
wire   [0:0] grp_fu_224_p2;
wire   [0:0] grp_fu_195_p2;
wire   [0:0] and_ln217_1_fu_461_p2;
wire   [0:0] and_ln217_2_fu_467_p2;
wire   [0:0] grp_fu_200_p2;
wire   [0:0] and_ln217_fu_473_p2;
wire   [0:0] and_ln205_1_fu_491_p2;
wire   [0:0] and_ln205_2_fu_496_p2;
wire   [0:0] grp_fu_230_p2;
wire   [0:0] and_ln208_1_fu_507_p2;
wire   [0:0] grp_fu_235_p2;
wire   [0:0] and_ln205_fu_501_p2;
wire   [0:0] and_ln187_1_fu_524_p2;
wire   [0:0] and_ln187_2_fu_529_p2;
wire   [0:0] and_ln190_1_fu_540_p2;
wire   [0:0] and_ln190_2_fu_545_p2;
wire   [0:0] and_ln187_fu_534_p2;
wire   [0:0] and_ln175_1_fu_562_p2;
wire   [0:0] and_ln175_2_fu_567_p2;
wire   [0:0] and_ln178_1_fu_578_p2;
wire   [0:0] and_ln175_fu_572_p2;
wire   [0:0] and_ln157_1_fu_595_p2;
wire   [0:0] and_ln157_2_fu_600_p2;
wire   [0:0] and_ln160_1_fu_611_p2;
wire   [0:0] and_ln160_2_fu_616_p2;
wire   [0:0] and_ln157_fu_605_p2;
wire   [0:0] and_ln145_1_fu_633_p2;
wire   [0:0] and_ln145_2_fu_638_p2;
wire   [0:0] and_ln148_1_fu_649_p2;
wire   [0:0] and_ln145_fu_643_p2;
wire   [0:0] and_ln133_1_fu_666_p2;
wire   [0:0] and_ln136_1_fu_677_p2;
wire   [0:0] grp_fu_253_p2;
wire   [0:0] and_ln133_fu_671_p2;
wire   [0:0] and_ln130_fu_694_p2;
wire   [0:0] and_ln130_1_fu_699_p2;
wire   [0:0] lut_i_fu_704_p2;
wire   [1:0] select_ln136_fu_714_p3;
wire   [1:0] zext_ln120_fu_710_p1;
wire   [1:0] lut_i_1_fu_721_p3;
wire   [0:0] and_ln139_1_fu_732_p2;
wire   [0:0] and_ln142_1_fu_743_p2;
wire   [0:0] and_ln142_2_fu_748_p2;
wire   [0:0] and_ln142_fu_753_p2;
wire   [0:0] and_ln139_fu_737_p2;
wire   [0:0] or_ln142_fu_767_p2;
wire   [2:0] select_ln142_fu_759_p3;
wire   [2:0] zext_ln120_1_fu_728_p1;
wire   [0:0] grp_fu_271_p2;
wire   [0:0] and_ln154_1_fu_781_p2;
wire   [0:0] grp_fu_276_p2;
wire   [0:0] grp_fu_291_p2;
wire   [0:0] and_ln166_1_fu_792_p2;
wire   [0:0] grp_fu_296_p2;
wire   [0:0] grp_fu_311_p2;
wire   [0:0] grp_fu_214_p2;
wire   [0:0] and_ln172_1_fu_803_p2;
wire   [0:0] and_ln172_2_fu_808_p2;
wire   [0:0] grp_fu_326_p2;
wire   [0:0] and_ln184_1_fu_819_p2;
wire   [0:0] grp_fu_331_p2;
wire   [0:0] grp_fu_346_p2;
wire   [0:0] and_ln196_1_fu_830_p2;
wire   [0:0] grp_fu_351_p2;
wire   [0:0] grp_fu_366_p2;
wire   [0:0] grp_fu_219_p2;
wire   [0:0] and_ln202_1_fu_841_p2;
wire   [0:0] and_ln202_2_fu_846_p2;
wire   [0:0] grp_fu_381_p2;
wire   [0:0] and_ln214_1_fu_857_p2;
wire   [0:0] grp_fu_386_p2;
wire   [2:0] select_ln148_fu_868_p3;
wire   [2:0] lut_i_3_fu_875_p3;
wire   [0:0] and_ln151_1_fu_885_p2;
wire   [0:0] and_ln151_fu_889_p2;
wire   [0:0] or_ln154_fu_901_p2;
wire   [3:0] select_ln154_fu_894_p3;
wire   [3:0] zext_ln120_2_fu_881_p1;
wire   [3:0] select_ln160_fu_914_p3;
wire   [3:0] lut_i_4_fu_906_p3;
wire   [0:0] and_ln163_1_fu_928_p2;
wire   [0:0] and_ln163_fu_932_p2;
wire   [0:0] or_ln166_fu_944_p2;
wire   [3:0] select_ln166_fu_937_p3;
wire   [3:0] lut_i_5_fu_921_p3;
wire   [0:0] and_ln169_1_fu_957_p2;
wire   [0:0] and_ln169_fu_961_p2;
wire   [0:0] or_ln172_fu_973_p2;
wire   [3:0] select_ln172_fu_966_p3;
wire   [3:0] lut_i_6_fu_949_p3;
wire   [3:0] lut_i_7_fu_978_p3;
wire   [4:0] select_ln178_fu_990_p3;
wire   [4:0] zext_ln120_3_fu_986_p1;
wire   [0:0] and_ln181_1_fu_1004_p2;
wire   [0:0] and_ln181_fu_1008_p2;
wire   [0:0] or_ln184_fu_1020_p2;
wire   [4:0] select_ln184_fu_1013_p3;
wire   [4:0] lut_i_8_fu_997_p3;
wire   [4:0] select_ln190_fu_1033_p3;
wire   [4:0] lut_i_9_fu_1025_p3;
wire   [0:0] and_ln193_1_fu_1047_p2;
wire   [0:0] and_ln193_fu_1051_p2;
wire   [0:0] or_ln196_fu_1063_p2;
wire   [4:0] select_ln196_fu_1056_p3;
wire   [0:0] and_ln199_1_fu_1075_p2;
wire   [0:0] and_ln199_fu_1079_p2;
wire   [0:0] or_ln202_fu_1091_p2;
wire   [4:0] select_ln202_fu_1084_p3;
wire   [4:0] lut_i_11_fu_1068_p3;
wire   [4:0] select_ln208_fu_1104_p3;
wire   [4:0] lut_i_12_fu_1096_p3;
wire   [0:0] and_ln211_1_fu_1118_p2;
wire   [0:0] and_ln211_fu_1122_p2;
wire   [0:0] or_ln214_fu_1134_p2;
wire   [4:0] select_ln214_fu_1127_p3;
wire   [4:0] lut_i_13_fu_1111_p3;
wire   [4:0] select_ln220_fu_1147_p3;
wire   [4:0] lut_i_14_fu_1139_p3;
reg    grp_fu_191_ce;
reg   [4:0] grp_fu_195_opcode;
reg   [4:0] grp_fu_200_opcode;
reg   [4:0] grp_fu_224_opcode;
reg   [4:0] grp_fu_230_opcode;
reg   [4:0] grp_fu_235_opcode;
reg   [4:0] grp_fu_253_opcode;
reg   [21:0] ap_NS_fsm;
reg    ap_condition_162;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 22'd1;
end

krnl_lstm_krnl_lut_tanh38_tanh_lut #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tanh_lut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tanh_lut_address0),
    .ce0(tanh_lut_ce0),
    .q0(tanh_lut_q0)
);

krnl_lstm_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1701(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .ce(grp_fu_191_ce),
    .dout(grp_fu_191_p1)
);

krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1702(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .din1(grp_fu_195_p1),
    .ce(1'b1),
    .opcode(grp_fu_195_opcode),
    .dout(grp_fu_195_p2)
);

krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1703(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .din1(grp_fu_200_p1),
    .ce(1'b1),
    .opcode(grp_fu_200_opcode),
    .dout(grp_fu_200_p2)
);

krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1704(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_214_p2)
);

krnl_lstm_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U1705(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read),
    .din1(32'd1073741824),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_219_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1706(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(grp_fu_224_p1),
    .ce(1'b1),
    .opcode(grp_fu_224_opcode),
    .dout(grp_fu_224_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1707(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(grp_fu_230_p1),
    .ce(1'b1),
    .opcode(grp_fu_230_opcode),
    .dout(grp_fu_230_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1708(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(grp_fu_235_p1),
    .ce(1'b1),
    .opcode(grp_fu_235_opcode),
    .dout(grp_fu_235_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1709(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(grp_fu_253_p1),
    .ce(1'b1),
    .opcode(grp_fu_253_opcode),
    .dout(grp_fu_253_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1710(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13833256615431215513),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_261_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1711(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13832355895505741414),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_266_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1712(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13832355895505741414),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_271_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1713(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13831455175580267315),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_276_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1714(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13828753015803845016),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_281_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1715(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13826951575952896816),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_286_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1716(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13826951575952896816),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_291_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1717(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13824249416176474520),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_296_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1718(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13824249416176474520),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_301_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1719(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13819745816549104016),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_306_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1720(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd13819745816549104016),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_311_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1721(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4600877379321698720),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_316_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1722(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4603579539098121012),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_321_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1723(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4603579539098121012),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_326_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1724(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4605380978949069212),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_331_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1725(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4608083138725491508),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_336_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1726(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4608983858650965608),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_341_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1727(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4608983858650965608),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_346_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1728(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4609884578576439708),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_351_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1729(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4609884578576439708),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_356_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1730(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4610785298501913808),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_361_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1731(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4610785298501913808),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_366_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1732(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4612586738352862004),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_371_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1733(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4613037098315599054),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_376_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1734(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4613037098315599054),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_381_p2)
);

krnl_lstm_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1735(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv1_i_i_reg_1175),
    .din1(64'd4613487458278336104),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_386_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((c_ti_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state16) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0))) begin
        and_ln136_reg_1318 <= and_ln136_fu_682_p2;
        or_ln136_reg_1323 <= or_ln136_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state14) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0))) begin
        and_ln148_reg_1308 <= and_ln148_fu_654_p2;
        or_ln148_reg_1313 <= or_ln148_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state18) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0))) begin
        and_ln154_reg_1343 <= and_ln154_fu_786_p2;
        tmp_15_reg_1333 <= grp_fu_261_p2;
        tmp_16_reg_1338 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0))) begin
        and_ln160_reg_1298 <= and_ln160_fu_621_p2;
        or_ln160_reg_1303 <= or_ln160_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state18) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0))) begin
        and_ln166_reg_1359 <= and_ln166_fu_797_p2;
        and_ln172_reg_1375 <= and_ln172_fu_813_p2;
        tmp_23_reg_1349 <= grp_fu_281_p2;
        tmp_24_reg_1354 <= grp_fu_286_p2;
        tmp_27_reg_1365 <= grp_fu_301_p2;
        tmp_28_reg_1370 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (or_ln190_reg_1283 == 1'd0))) begin
        and_ln178_reg_1288 <= and_ln178_fu_583_p2;
        or_ln178_reg_1293 <= or_ln178_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state18) & (or_ln190_reg_1283 == 1'd0))) begin
        and_ln184_reg_1391 <= and_ln184_fu_824_p2;
        tmp_35_reg_1381 <= grp_fu_316_p2;
        tmp_36_reg_1386 <= grp_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        and_ln190_reg_1278 <= and_ln190_fu_550_p2;
        or_ln190_reg_1283 <= or_ln190_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        and_ln196_reg_1407 <= and_ln196_fu_835_p2;
        and_ln202_reg_1423 <= and_ln202_fu_851_p2;
        tmp_43_reg_1397 <= grp_fu_336_p2;
        tmp_44_reg_1402 <= grp_fu_341_p2;
        tmp_47_reg_1413 <= grp_fu_356_p2;
        tmp_48_reg_1418 <= grp_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        and_ln208_reg_1268 <= and_ln208_fu_512_p2;
        or_ln208_reg_1273 <= or_ln208_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        and_ln214_reg_1439 <= and_ln214_fu_862_p2;
        tmp_55_reg_1429 <= grp_fu_371_p2;
        tmp_56_reg_1434 <= grp_fu_376_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln220_reg_1258 <= and_ln220_fu_479_p2;
        or_ln130_1_reg_1225 <= or_ln130_1_fu_455_p2;
        or_ln130_reg_1210 <= or_ln130_fu_420_p2;
        or_ln220_reg_1263 <= or_ln220_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv1_i_i_reg_1175 <= grp_fu_191_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        lut_i_10_reg_1445 <= lut_i_10_fu_1040_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        lut_i_15_reg_1450 <= lut_i_15_fu_1154_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state18) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0))) begin
        lut_i_2_reg_1328 <= lut_i_2_fu_773_p3;
    end
end

always @ (*) begin
    if (((c_ti_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((c_ti_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        c_ti_out_blk_n = c_ti_out_full_n;
    end else begin
        c_ti_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((c_ti_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        c_ti_out_write = 1'b1;
    end else begin
        c_ti_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_191_ce = 1'b1;
    end else begin
        grp_fu_191_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln136_reg_1323 == 1'd0) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (or_ln190_reg_1283 == 1'd0)))) begin
        grp_fu_195_opcode = 5'd3;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_195_opcode = 5'd4;
    end else begin
        grp_fu_195_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_195_p1 = 32'd3225419776;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_195_p1 = 32'd3221225472;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_195_p1 = 32'd3212836864;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_195_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_195_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_195_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_195_p1 = 32'd1077936128;
    end else begin
        grp_fu_195_p1 = 'bx;
    end
end

always @ (*) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0))) begin
        grp_fu_200_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_200_opcode = 5'd3;
    end else begin
        grp_fu_200_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_200_p1 = 32'd3221225472;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_200_p1 = 32'd3212836864;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_200_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_200_p1 = 32'd1077936128;
    end else begin
        grp_fu_200_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln136_reg_1323 == 1'd0) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (or_ln190_reg_1283 == 1'd0)))) begin
        grp_fu_224_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_224_opcode = 5'd3;
    end else begin
        grp_fu_224_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_224_p1 = 64'd13836859495133111910;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_224_p1 = 64'd13834157335356689612;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_224_p1 = 64'd13831455175580267315;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_224_p1 = 64'd4596373779694328224;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_224_p1 = 64'd4605380978949069212;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_224_p1 = 64'd4612136378390124954;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_224_p1 = 64'd4613487458278336104;
    end else begin
        grp_fu_224_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_230_opcode = 5'd4;
    end else if ((((or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (or_ln190_reg_1283 == 1'd0)))) begin
        grp_fu_230_opcode = 5'd3;
    end else begin
        grp_fu_230_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_230_p1 = 64'd13835958775207637811;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_230_p1 = 64'd13836409135170374861;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_230_p1 = 64'd13834157335356689612;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_230_p1 = 64'd13828753015803845016;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_230_p1 = 64'd4596373779694328224;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_230_p1 = 64'd4608083138725491508;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_230_p1 = 64'd4612136378390124954;
    end else begin
        grp_fu_230_p1 = 'bx;
    end
end

always @ (*) begin
    if (((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0))) begin
        grp_fu_235_opcode = 5'd3;
    end else if ((((or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0)) | ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (or_ln190_reg_1283 == 1'd0)))) begin
        grp_fu_235_opcode = 5'd4;
    end else begin
        grp_fu_235_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_235_p1 = 64'd13835508415244900762;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_235_p1 = 64'd13836409135170374861;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_235_p1 = 64'd13833256615431215513;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_235_p1 = 64'd4600877379321698720;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_235_p1 = 64'd4612586738352862004;
    end else begin
        grp_fu_235_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_162)) begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_fu_253_opcode = 5'd3;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_fu_253_opcode = 5'd4;
        end else begin
            grp_fu_253_opcode = 'bx;
        end
    end else begin
        grp_fu_253_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_253_p1 = 64'd13835508415244900762;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_253_p1 = 64'd13835958775207637811;
    end else begin
        grp_fu_253_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tanh_lut_ce0 = 1'b1;
    end else begin
        tanh_lut_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((c_ti_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln130_1_fu_699_p2 = (or_ln130_1_reg_1225 & grp_fu_224_p2);

assign and_ln130_fu_694_p2 = (or_ln130_reg_1210 & grp_fu_195_p2);

assign and_ln133_1_fu_666_p2 = (or_ln130_1_reg_1225 & grp_fu_224_p2);

assign and_ln133_fu_671_p2 = (grp_fu_230_p2 & and_ln133_1_fu_666_p2);

assign and_ln136_1_fu_677_p2 = (or_ln130_1_reg_1225 & grp_fu_235_p2);

assign and_ln136_fu_682_p2 = (grp_fu_253_p2 & and_ln136_1_fu_677_p2);

assign and_ln139_1_fu_732_p2 = (or_ln130_1_reg_1225 & grp_fu_230_p2);

assign and_ln139_fu_737_p2 = (grp_fu_235_p2 & and_ln139_1_fu_732_p2);

assign and_ln142_1_fu_743_p2 = (or_ln130_1_reg_1225 & grp_fu_253_p2);

assign and_ln142_2_fu_748_p2 = (or_ln130_reg_1210 & grp_fu_200_p2);

assign and_ln142_fu_753_p2 = (and_ln142_2_fu_748_p2 & and_ln142_1_fu_743_p2);

assign and_ln145_1_fu_633_p2 = (or_ln130_reg_1210 & grp_fu_195_p2);

assign and_ln145_2_fu_638_p2 = (or_ln130_1_reg_1225 & grp_fu_224_p2);

assign and_ln145_fu_643_p2 = (and_ln145_2_fu_638_p2 & and_ln145_1_fu_633_p2);

assign and_ln148_1_fu_649_p2 = (or_ln130_1_reg_1225 & grp_fu_230_p2);

assign and_ln148_fu_654_p2 = (grp_fu_235_p2 & and_ln148_1_fu_649_p2);

assign and_ln151_1_fu_885_p2 = (tmp_15_reg_1333 & or_ln130_1_reg_1225);

assign and_ln151_fu_889_p2 = (tmp_16_reg_1338 & and_ln151_1_fu_885_p2);

assign and_ln154_1_fu_781_p2 = (or_ln130_1_reg_1225 & grp_fu_271_p2);

assign and_ln154_fu_786_p2 = (grp_fu_276_p2 & and_ln154_1_fu_781_p2);

assign and_ln157_1_fu_595_p2 = (or_ln130_1_reg_1225 & grp_fu_224_p2);

assign and_ln157_2_fu_600_p2 = (or_ln130_reg_1210 & grp_fu_195_p2);

assign and_ln157_fu_605_p2 = (and_ln157_2_fu_600_p2 & and_ln157_1_fu_595_p2);

assign and_ln160_1_fu_611_p2 = (or_ln130_reg_1210 & grp_fu_200_p2);

assign and_ln160_2_fu_616_p2 = (or_ln130_1_reg_1225 & grp_fu_230_p2);

assign and_ln160_fu_621_p2 = (and_ln160_2_fu_616_p2 & and_ln160_1_fu_611_p2);

assign and_ln163_1_fu_928_p2 = (tmp_23_reg_1349 & or_ln130_1_reg_1225);

assign and_ln163_fu_932_p2 = (tmp_24_reg_1354 & and_ln163_1_fu_928_p2);

assign and_ln166_1_fu_792_p2 = (or_ln130_1_reg_1225 & grp_fu_291_p2);

assign and_ln166_fu_797_p2 = (grp_fu_296_p2 & and_ln166_1_fu_792_p2);

assign and_ln169_1_fu_957_p2 = (tmp_27_reg_1365 & or_ln130_1_reg_1225);

assign and_ln169_fu_961_p2 = (tmp_28_reg_1370 & and_ln169_1_fu_957_p2);

assign and_ln172_1_fu_803_p2 = (or_ln130_1_reg_1225 & grp_fu_311_p2);

assign and_ln172_2_fu_808_p2 = (or_ln130_reg_1210 & grp_fu_214_p2);

assign and_ln172_fu_813_p2 = (and_ln172_2_fu_808_p2 & and_ln172_1_fu_803_p2);

assign and_ln175_1_fu_562_p2 = (or_ln130_reg_1210 & grp_fu_195_p2);

assign and_ln175_2_fu_567_p2 = (or_ln130_1_reg_1225 & grp_fu_224_p2);

assign and_ln175_fu_572_p2 = (and_ln175_2_fu_567_p2 & and_ln175_1_fu_562_p2);

assign and_ln178_1_fu_578_p2 = (or_ln130_1_reg_1225 & grp_fu_230_p2);

assign and_ln178_fu_583_p2 = (grp_fu_235_p2 & and_ln178_1_fu_578_p2);

assign and_ln181_1_fu_1004_p2 = (tmp_35_reg_1381 & or_ln130_1_reg_1225);

assign and_ln181_fu_1008_p2 = (tmp_36_reg_1386 & and_ln181_1_fu_1004_p2);

assign and_ln184_1_fu_819_p2 = (or_ln130_1_reg_1225 & grp_fu_326_p2);

assign and_ln184_fu_824_p2 = (grp_fu_331_p2 & and_ln184_1_fu_819_p2);

assign and_ln187_1_fu_524_p2 = (or_ln130_1_reg_1225 & grp_fu_224_p2);

assign and_ln187_2_fu_529_p2 = (or_ln130_reg_1210 & grp_fu_195_p2);

assign and_ln187_fu_534_p2 = (and_ln187_2_fu_529_p2 & and_ln187_1_fu_524_p2);

assign and_ln190_1_fu_540_p2 = (or_ln130_reg_1210 & grp_fu_200_p2);

assign and_ln190_2_fu_545_p2 = (or_ln130_1_reg_1225 & grp_fu_230_p2);

assign and_ln190_fu_550_p2 = (and_ln190_2_fu_545_p2 & and_ln190_1_fu_540_p2);

assign and_ln193_1_fu_1047_p2 = (tmp_43_reg_1397 & or_ln130_1_reg_1225);

assign and_ln193_fu_1051_p2 = (tmp_44_reg_1402 & and_ln193_1_fu_1047_p2);

assign and_ln196_1_fu_830_p2 = (or_ln130_1_reg_1225 & grp_fu_346_p2);

assign and_ln196_fu_835_p2 = (grp_fu_351_p2 & and_ln196_1_fu_830_p2);

assign and_ln199_1_fu_1075_p2 = (tmp_47_reg_1413 & or_ln130_1_reg_1225);

assign and_ln199_fu_1079_p2 = (tmp_48_reg_1418 & and_ln199_1_fu_1075_p2);

assign and_ln202_1_fu_841_p2 = (or_ln130_1_reg_1225 & grp_fu_366_p2);

assign and_ln202_2_fu_846_p2 = (or_ln130_reg_1210 & grp_fu_219_p2);

assign and_ln202_fu_851_p2 = (and_ln202_2_fu_846_p2 & and_ln202_1_fu_841_p2);

assign and_ln205_1_fu_491_p2 = (or_ln130_reg_1210 & grp_fu_195_p2);

assign and_ln205_2_fu_496_p2 = (or_ln130_1_reg_1225 & grp_fu_224_p2);

assign and_ln205_fu_501_p2 = (and_ln205_2_fu_496_p2 & and_ln205_1_fu_491_p2);

assign and_ln208_1_fu_507_p2 = (or_ln130_1_reg_1225 & grp_fu_230_p2);

assign and_ln208_fu_512_p2 = (grp_fu_235_p2 & and_ln208_1_fu_507_p2);

assign and_ln211_1_fu_1118_p2 = (tmp_55_reg_1429 & or_ln130_1_reg_1225);

assign and_ln211_fu_1122_p2 = (tmp_56_reg_1434 & and_ln211_1_fu_1118_p2);

assign and_ln214_1_fu_857_p2 = (or_ln130_1_reg_1225 & grp_fu_381_p2);

assign and_ln214_fu_862_p2 = (grp_fu_386_p2 & and_ln214_1_fu_857_p2);

assign and_ln217_1_fu_461_p2 = (or_ln130_1_fu_455_p2 & grp_fu_224_p2);

assign and_ln217_2_fu_467_p2 = (or_ln130_fu_420_p2 & grp_fu_195_p2);

assign and_ln217_fu_473_p2 = (and_ln217_2_fu_467_p2 & and_ln217_1_fu_461_p2);

assign and_ln220_fu_479_p2 = (or_ln130_fu_420_p2 & grp_fu_200_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_condition_162 = ((or_ln208_reg_1273 == 1'd0) & (or_ln220_reg_1263 == 1'd0) & (or_ln148_reg_1313 == 1'd0) & (or_ln160_reg_1303 == 1'd0) & (or_ln178_reg_1293 == 1'd0) & (or_ln190_reg_1283 == 1'd0));
end

assign bitcast_ln130_1_fu_426_p1 = conv1_i_i_reg_1175;

assign bitcast_ln130_fu_391_p1 = p_read;

assign c_ti_out_din = tanh_lut_q0;

assign icmp_ln130_1_fu_414_p2 = ((trunc_ln130_fu_404_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_443_p2 = ((tmp_2_fu_429_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_449_p2 = ((trunc_ln130_1_fu_439_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_408_p2 = ((tmp_fu_394_p4 != 8'd255) ? 1'b1 : 1'b0);

assign lut_i_10_fu_1040_p3 = ((or_ln190_reg_1283[0:0] == 1'b1) ? select_ln190_fu_1033_p3 : lut_i_9_fu_1025_p3);

assign lut_i_11_fu_1068_p3 = ((or_ln196_fu_1063_p2[0:0] == 1'b1) ? select_ln196_fu_1056_p3 : lut_i_10_reg_1445);

assign lut_i_12_fu_1096_p3 = ((or_ln202_fu_1091_p2[0:0] == 1'b1) ? select_ln202_fu_1084_p3 : lut_i_11_fu_1068_p3);

assign lut_i_13_fu_1111_p3 = ((or_ln208_reg_1273[0:0] == 1'b1) ? select_ln208_fu_1104_p3 : lut_i_12_fu_1096_p3);

assign lut_i_14_fu_1139_p3 = ((or_ln214_fu_1134_p2[0:0] == 1'b1) ? select_ln214_fu_1127_p3 : lut_i_13_fu_1111_p3);

assign lut_i_15_fu_1154_p3 = ((or_ln220_reg_1263[0:0] == 1'b1) ? select_ln220_fu_1147_p3 : lut_i_14_fu_1139_p3);

assign lut_i_1_fu_721_p3 = ((or_ln136_reg_1323[0:0] == 1'b1) ? select_ln136_fu_714_p3 : zext_ln120_fu_710_p1);

assign lut_i_2_fu_773_p3 = ((or_ln142_fu_767_p2[0:0] == 1'b1) ? select_ln142_fu_759_p3 : zext_ln120_1_fu_728_p1);

assign lut_i_3_fu_875_p3 = ((or_ln148_reg_1313[0:0] == 1'b1) ? select_ln148_fu_868_p3 : lut_i_2_reg_1328);

assign lut_i_4_fu_906_p3 = ((or_ln154_fu_901_p2[0:0] == 1'b1) ? select_ln154_fu_894_p3 : zext_ln120_2_fu_881_p1);

assign lut_i_5_fu_921_p3 = ((or_ln160_reg_1303[0:0] == 1'b1) ? select_ln160_fu_914_p3 : lut_i_4_fu_906_p3);

assign lut_i_6_fu_949_p3 = ((or_ln166_fu_944_p2[0:0] == 1'b1) ? select_ln166_fu_937_p3 : lut_i_5_fu_921_p3);

assign lut_i_7_fu_978_p3 = ((or_ln172_fu_973_p2[0:0] == 1'b1) ? select_ln172_fu_966_p3 : lut_i_6_fu_949_p3);

assign lut_i_8_fu_997_p3 = ((or_ln178_reg_1293[0:0] == 1'b1) ? select_ln178_fu_990_p3 : zext_ln120_3_fu_986_p1);

assign lut_i_9_fu_1025_p3 = ((or_ln184_fu_1020_p2[0:0] == 1'b1) ? select_ln184_fu_1013_p3 : lut_i_8_fu_997_p3);

assign lut_i_fu_704_p2 = (and_ln130_fu_694_p2 & and_ln130_1_fu_699_p2);

assign or_ln130_1_fu_455_p2 = (icmp_ln130_3_fu_449_p2 | icmp_ln130_2_fu_443_p2);

assign or_ln130_fu_420_p2 = (icmp_ln130_fu_408_p2 | icmp_ln130_1_fu_414_p2);

assign or_ln136_fu_688_p2 = (and_ln136_fu_682_p2 | and_ln133_fu_671_p2);

assign or_ln142_fu_767_p2 = (and_ln142_fu_753_p2 | and_ln139_fu_737_p2);

assign or_ln148_fu_660_p2 = (and_ln148_fu_654_p2 | and_ln145_fu_643_p2);

assign or_ln154_fu_901_p2 = (and_ln154_reg_1343 | and_ln151_fu_889_p2);

assign or_ln160_fu_627_p2 = (and_ln160_fu_621_p2 | and_ln157_fu_605_p2);

assign or_ln166_fu_944_p2 = (and_ln166_reg_1359 | and_ln163_fu_932_p2);

assign or_ln172_fu_973_p2 = (and_ln172_reg_1375 | and_ln169_fu_961_p2);

assign or_ln178_fu_589_p2 = (and_ln178_fu_583_p2 | and_ln175_fu_572_p2);

assign or_ln184_fu_1020_p2 = (and_ln184_reg_1391 | and_ln181_fu_1008_p2);

assign or_ln190_fu_556_p2 = (and_ln190_fu_550_p2 | and_ln187_fu_534_p2);

assign or_ln196_fu_1063_p2 = (and_ln196_reg_1407 | and_ln193_fu_1051_p2);

assign or_ln202_fu_1091_p2 = (and_ln202_reg_1423 | and_ln199_fu_1079_p2);

assign or_ln208_fu_518_p2 = (and_ln208_fu_512_p2 | and_ln205_fu_501_p2);

assign or_ln214_fu_1134_p2 = (and_ln214_reg_1439 | and_ln211_fu_1122_p2);

assign or_ln220_fu_485_p2 = (and_ln220_fu_479_p2 | and_ln217_fu_473_p2);

assign select_ln136_fu_714_p3 = ((and_ln136_reg_1318[0:0] == 1'b1) ? 2'd3 : 2'd2);

assign select_ln142_fu_759_p3 = ((and_ln142_fu_753_p2[0:0] == 1'b1) ? 3'd5 : 3'd4);

assign select_ln148_fu_868_p3 = ((and_ln148_reg_1308[0:0] == 1'b1) ? 3'd7 : 3'd6);

assign select_ln154_fu_894_p3 = ((and_ln154_reg_1343[0:0] == 1'b1) ? 4'd9 : 4'd8);

assign select_ln160_fu_914_p3 = ((and_ln160_reg_1298[0:0] == 1'b1) ? 4'd11 : 4'd10);

assign select_ln166_fu_937_p3 = ((and_ln166_reg_1359[0:0] == 1'b1) ? 4'd13 : 4'd12);

assign select_ln172_fu_966_p3 = ((and_ln172_reg_1375[0:0] == 1'b1) ? 4'd15 : 4'd14);

assign select_ln178_fu_990_p3 = ((and_ln178_reg_1288[0:0] == 1'b1) ? 5'd17 : 5'd16);

assign select_ln184_fu_1013_p3 = ((and_ln184_reg_1391[0:0] == 1'b1) ? 5'd19 : 5'd18);

assign select_ln190_fu_1033_p3 = ((and_ln190_reg_1278[0:0] == 1'b1) ? 5'd21 : 5'd20);

assign select_ln196_fu_1056_p3 = ((and_ln196_reg_1407[0:0] == 1'b1) ? 5'd23 : 5'd22);

assign select_ln202_fu_1084_p3 = ((and_ln202_reg_1423[0:0] == 1'b1) ? 5'd25 : 5'd24);

assign select_ln208_fu_1104_p3 = ((and_ln208_reg_1268[0:0] == 1'b1) ? 5'd27 : 5'd26);

assign select_ln214_fu_1127_p3 = ((and_ln214_reg_1439[0:0] == 1'b1) ? 5'd29 : 5'd28);

assign select_ln220_fu_1147_p3 = ((and_ln220_reg_1258[0:0] == 1'b1) ? 5'd31 : 5'd30);

assign tanh_lut_address0 = zext_ln120_4_fu_1161_p1;

assign tmp_2_fu_429_p4 = {{bitcast_ln130_1_fu_426_p1[62:52]}};

assign tmp_fu_394_p4 = {{bitcast_ln130_fu_391_p1[30:23]}};

assign trunc_ln130_1_fu_439_p1 = bitcast_ln130_1_fu_426_p1[51:0];

assign trunc_ln130_fu_404_p1 = bitcast_ln130_fu_391_p1[22:0];

assign zext_ln120_1_fu_728_p1 = lut_i_1_fu_721_p3;

assign zext_ln120_2_fu_881_p1 = lut_i_3_fu_875_p3;

assign zext_ln120_3_fu_986_p1 = lut_i_7_fu_978_p3;

assign zext_ln120_4_fu_1161_p1 = lut_i_15_reg_1450;

assign zext_ln120_fu_710_p1 = lut_i_fu_704_p2;

endmodule //krnl_lstm_krnl_lut_tanh38
